{"version":3,"sources":["dm-tag-list/widget.js"],"names":[],"mappings":"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","file":"dm-tag-list/widget.js","sourcesContent":["import angular from 'angular';\r\nimport 'dictionary';\r\n\r\n\r\nangular.module('app.widgets.dm-tag-list', ['app.dictionary',\"app.dps\"])\r\n  .controller('DataManagerTagListController', function ($scope, $http, $dps, EventEmitter, \r\n    APIProvider, pageSubscriptions, $lookup, $translate, user) {\r\n\r\n    \r\n    \r\n   \r\n\r\n    const eventEmitter = new EventEmitter($scope);\r\n    $scope.lookup = $lookup;\r\n    $scope.breadcrums = [];\r\n    $scope.tagList = [];\r\n    $scope.collapsed = true;\r\n    $scope.processed = false;\r\n    $scope.selectedTags = [];\r\n    $scope.tags = [];\r\n\r\n\r\n    $scope.getLabel = function(obj){\r\n      var result = (obj.lookup.label) ? obj.lookup.label : obj.tag \r\n      return $translate.instant(result)\r\n    }\r\n\r\n    $scope.changeState = function(){\r\n      $scope.collapsed = !$scope.collapsed;      \r\n\r\n    }\r\n\r\n    var addListener = function(listener){\r\n        var subscriptions = pageSubscriptions();\r\n        for (var i in subscriptions) {\r\n          if (subscriptions[i].emitter === listener.emitter \r\n            && subscriptions[i].receiver === listener.receiver\r\n            && subscriptions[i].signal === listener.signal\r\n            && subscriptions[i].slot === listener.slot\r\n            ) {\r\n            return;\r\n          }\r\n        }\r\n        subscriptions.push(listener);\r\n      };\r\n      \r\n    var removeListener = function(listener){\r\n        var subscriptions = pageSubscriptions();\r\n        for (var i in subscriptions) {\r\n          if (subscriptions[i].emitter === listener.emitter \r\n            && subscriptions[i].receiver === listener.receiver\r\n            && subscriptions[i].signal === listener.signal\r\n            && subscriptions[i].slot === listener.slot\r\n            ) {\r\n            subscriptions.splice(i, 1);\r\n            return\r\n          }\r\n        }\r\n      };\r\n\r\n    $scope.selectTag = function(t){\r\n      let index = $scope.tags.indexOf(t);\r\n      $scope.tags.splice(index,1);\r\n      $scope.selectedTags.push(t);\r\n      $scope.selectedObject = \"\";\r\n      $scope.$viewValue = \"\";\r\n      $scope.selectItem($scope.tagList.filter(tag => $scope.getLabel(tag) == t)[0].tag)\r\n    };\r\n\r\n    $scope.unselectTag = function(t){\r\n      let index = $scope.selectedTags.indexOf(t);\r\n      $scope.selectedTags.splice(index,1);\r\n      $scope.tags.push(t);\r\n    };  \r\n\r\n    $scope.hasTags = function(item){\r\n      if($scope.selectedTags.length == 0) return true;\r\n      return $scope.selectedTags.filter(t => (t == $scope.getLabel(item))).length == 1\r\n    };\r\n\r\n    $scope.selectItem = function(key){\r\n      eventEmitter.emit('setLookupKey', key, $scope.category);\r\n      let tmp = {};\r\n      // tmp[$scope.property.split(\".\").slice(1).join(\".\")] = [{includes:key}];\r\n      // let query = [tmp];\r\n      let query = $scope.query.split(\"{{}}\").join(key);\r\n      \r\n      // console.log(query);\r\n\r\n      eventEmitter.emit('searchQuery', query);\r\n    }\r\n\r\n    $scope.refresh = function(){\r\n          var status = (user.isOwner || user.isCollaborator) ? \"private\" : \"public\";\r\n          status = \"public\";\r\n          // $http.post(\r\n          //     \"./api/metadata/tag/total\",\r\n          //     {property : $scope.property,\"status\":status}\r\n          //    ).success(function(resp){\r\n          //     $scope.total = resp.count;\r\n          // });\r\n\r\n          // $http.post(\r\n          //   \"./api/metadata/tag/items\",\r\n          $scope.processed = true;  \r\n          $dps.post(\r\n            \"/api/metadata/tag/items\",\r\n            {property : $scope.property,\"status\":status}\r\n           ).success(function(resp){\r\n            $scope.processed = false;\r\n            $scope.total = resp.length;\r\n            resp.forEach(function(item){\r\n              item.lookup = $lookup(item.tag)\r\n              // item.lookup.label = item.lookup.label || item.lookup[\"Short Name\"] \r\n            }); \r\n            $scope.tagList = resp;\r\n            $scope.tags = $scope.tagList.map( item => $scope.getLabel(item))\r\n          });\r\n    }\r\n\r\n    new APIProvider($scope)\r\n      .config(() => {\r\n        console.log(`widget ${$scope.widget.instanceName} is (re)configuring...`);\r\n        $scope.title = $scope.widget.title;\r\n        $scope.category = $scope.widget.category;\r\n        $scope.icon_class = $scope.widget.icon_class;\r\n        $scope.property = $scope.widget.property || $scope.property;\r\n        $scope.query = $scope.widget.query || $scope.query;\r\n        $scope.collapsed = $scope.widget.collapsed;\r\n\r\n        $scope.lookupListeners = ($scope.widget.lookupListeners) ? $scope.widget.lookupListeners.split(\",\") : [];\r\n        \r\n        pageSubscriptions().removeListeners({\r\n          emitter: $scope.widget.instanceName,\r\n          signal: \"setLookupKey\"\r\n        })\r\n\r\n        pageSubscriptions().addListeners(\r\n          $scope.lookupListeners.map((item) =>{\r\n            return {\r\n                emitter: $scope.widget.instanceName,\r\n                receiver: item.trim(),\r\n                signal: \"setLookupKey\",\r\n                slot: \"setLookupKey\"\r\n            }\r\n          })\r\n        );\r\n\r\n\r\n        // for(var i in $scope.lookupListeners){\r\n        //   $scope.lookupListeners[i] = $scope.lookupListeners[i].trim();\r\n        //   console.log($scope.widget.instanceName,$scope.lookupListeners[i]);\r\n        //   addListener({\r\n        //         emitter: $scope.widget.instanceName,\r\n        //         receiver: $scope.lookupListeners[i],\r\n        //         signal: \"setLookupKey\",\r\n        //         slot: \"setLookupKey\"\r\n        //       });\r\n        // }\r\n\r\n        $scope.searchListeners = ($scope.widget.searchListeners) ? $scope.widget.searchListeners.split(\",\") : [];\r\n\r\n        pageSubscriptions().removeListeners({\r\n          emitter: $scope.widget.instanceName,\r\n          signal: \"searchQuery\"\r\n        })\r\n\r\n        pageSubscriptions().addListeners(\r\n          $scope.searchListeners.map((item) =>{\r\n            return {\r\n                emitter: $scope.widget.instanceName,\r\n                receiver: item.trim(),\r\n                signal: \"searchQuery\",\r\n                slot: \"searchQuery\"\r\n            }\r\n          })\r\n        );        \r\n        \r\n        // for(var i in $scope.searchListeners){\r\n        //   $scope.searchListeners[i] = $scope.searchListeners[i].trim();\r\n        //   console.log($scope.widget.instanceName,$scope.searchListeners[i]);\r\n        //   addListener({\r\n        //         emitter: $scope.widget.instanceName,\r\n        //         receiver: $scope.searchListeners[i],\r\n        //         signal: \"searchQuery\",\r\n        //         slot: \"searchQuery\"\r\n        //       });\r\n        // }  \r\n           \r\n          // $http.post(\r\n          //     \"./api/metadata/tag/total\",\r\n          //     {property : $scope.property}\r\n          //    ).success(function(resp){\r\n          //     $scope.total = resp.count;\r\n          // });\r\n\r\n          // $http.post(\r\n          //   \"./api/metadata/tag/items\",\r\n          //   {property : $scope.property}\r\n          //  ).success(function(resp){\r\n          //   resp.forEach(function(item){\r\n          //     item.lookup = $lookup(item.tag)\r\n          //   }); \r\n          //   $scope.tagList = resp;\r\n          // });\r\n          $scope.refresh();\r\n        })\r\n      \r\n      .provide('refresh', (evt) => {\r\n        $scope.refresh();\r\n      })\r\n      .translate(()=>{\r\n        $scope.tags = $scope.tagList.map( item => $scope.getLabel(item));\r\n        $scope.selectedTags = [];\r\n      })\r\n      .removal(() => {\r\n        console.log('TagsTotal widget is destroyed');\r\n      });\r\n  });\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":"/source/"}