{"version":3,"sources":["v2.nvd3-radar/radar-chart-decoration.js"],"names":[],"mappings":"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","file":"v2.nvd3-radar/radar-chart-decoration.js","sourcesContent":["import angular from 'angular';\r\nimport 'widgets/v2.nvd3-widget/nvd3-widget';\r\nimport \"widgets/v2.nvd3-radar/adapter\";\r\nimport \"wizard-directives\";\r\nimport 'ng-ace';\r\n\r\nvar m = angular.module(\"app.widgets.v2.steps.radar-chart-decoration\",[\r\n\t'app.widgets.v2.nvd3-widget',\r\n    \"app.widgets.v2.radar-chart-adapter\", \r\n    \"wizard-directives\",\r\n    \"app.dps\",\"ng.ace\"]);\r\n\r\nm.factory(\"RadarChartDecoration\",[\r\n\t\"$http\",\r\n\t\"$dps\",\r\n\t\"$q\", \r\n\t\"parentHolder\",\r\n\t\"RadarChartAdapter\", \r\n\t\"pageWidgets\", \"i18n\", \"dialog\", \"$error\", \"dpsEditor\",\r\n\tfunction(\r\n\t\t$http, \r\n\t\t$dps,\r\n\t\t$q, \r\n\t\tparentHolder, \r\n\t\tRadarChartAdapter,\r\n\t\tpageWidgets, i18n, dialog, $error, dpsEditor ){\r\n\t\t\r\n\t\tlet chartAdapter = RadarChartAdapter;\r\n\r\n\t\treturn {\r\n\t\t\tid: \"RadarChartChartDecoration\",\r\n\r\n\t\t\ttitle : \"Chart Decoration\",\r\n\t\t\t\r\n\t\t\tdescription : \"Setup chart decoration options\",\r\n\t        \r\n\t    \thtml : \"./widgets/v2.nvd3-radar/radar-chart-decoration.html\",\r\n\r\n\t    \tonStartWizard: function(wizard){\r\n\t    \t\tthis.wizard = wizard;\r\n\t    \t\tthis.conf = {\r\n\t    \t\t\tdecoration : wizard.conf.decoration,\r\n\t    \t\t\tdataID : wizard.conf.dataID,\r\n\t    \t\t\tqueryID : wizard.conf.queryID,\r\n\t    \t\t\tscript : wizard.conf.script,\r\n\t    \t\t\tserieDataId : wizard.conf.serieDataId,\r\n\t    \t\t\toptionsUrl : \"./widgets/v2.nvd3-radar/options.json\",\r\n\t    \t\t\tdataUrl : \"/api/data/process/\",\r\n\t    \t\t\temitters: wizard.conf.emitters\r\n\t    \t\t}\t\r\n\r\n\t    \t\tthis.queries = [{$id:'eventSource', $title:'setData(updateWithData) event'}];\r\n\r\n\t    \t\tpageWidgets()\r\n\t    \t\t\t.filter((item) => item.type ==\"v2.query-manager\")\r\n\t    \t\t\t.map((item) => item.queries)\r\n\t    \t\t\t.forEach((item) => {this.queries = this.queries.concat(item)})\r\n\r\n\t    \t\tif(this.conf.queryID){\r\n\t    \t\t\tlet thos = this;\r\n\t    \t\t\tthis.inputQuery = this.queries.filter((item) => item.$id == this.conf.queryID)[0].$title;\r\n\t    \t\t}\t\r\n\t\t\r\n\t    \t},\r\n\r\n\t    \tonFinishWizard:  function(wizard){\r\n\t    \t\tthis.conf.decoration.setColor = undefined;\r\n\t    \t\twizard.conf.decoration = this.conf.decoration;\r\n\t    \t\twizard.conf.serieDataId  = this.conf.serieDataId; \r\n\t    \t\twizard.conf.queryID  = this.conf.queryID;\r\n\t    \t\twizard.conf.dataID  = this.conf.dataID;\r\n\t    \t\twizard.conf.script  = this.conf.script;\r\n\t    \t\twizard.conf.emitters  = this.conf.emitters;  \r\n\r\n\t    \t\tthis.settings = {options:angular.copy(this.options), data:[]};\r\n\t    \t\tthis.conf = {};\r\n\t    \t},\r\n\r\n\t    \tonCancelWizard: function(wizard){\r\n\t\t\t\tthis.settings = {options:angular.copy(this.options), data:[]};\r\n\t\t\t\tthis.conf = {};\r\n\t    \t},\r\n\r\n\t    \treversePalette: function(){\r\n\t\t\t\tif ( this.conf.decoration.color ){\r\n\t\t\t\t\tthis.conf.decoration.color = this.conf.decoration.color.reverse(); \r\n\t\t\t\t}\t\r\n\t\t\t},\r\n\r\n\t\t\tselectInputData: function(){\r\n\t\t\t\tlet thos = this;\r\n\t\t\t\tthos.wizard.context.postprocessedTable = undefined;\r\n      \t\t\tlet iq = this.queries.filter((item) => item.$title == thos.inputQuery)[0];\r\n\t\t\t\tthis.conf.dataID = (iq.context) ? iq.context.queryResultId: undefined;\r\n\t\t\t\tthis.conf.queryID = iq.$id;\r\n\t\t\t\tthis.loadData();\r\n\t\t\t},\r\n\r\n\r\n\t    \t\r\n\r\n\t\t\tloadOptions : function(){\r\n\t\t\t\treturn $http.get(this.conf.optionsUrl)\r\n\t\t\t},\r\n\r\n\t\t\tloadSeries : function(){\r\n\t\t\t\tif(this.conf.dataID)\r\n\t\t\t\t\treturn $dps\r\n\t\t\t\t\t          .post(\"/api/data/script\",{\r\n\t\t\t\t\t            \"data\"  : \"source(table:'\"+this.conf.dataID+\"');bar();save()\",\r\n\t\t\t\t\t            \"locale\": i18n.locale()\r\n\t\t\t\t\t          })\r\n\r\n\t\t\t\t if(this.conf.script)\r\n                    return $dps.post(\"/api/script\",{\r\n                                \"script\": this.conf.script,\r\n                                \"locale\": i18n.locale()\r\n                            })\r\n                            .then((resp) => {\r\n                            \tif (resp.data.type == \"error\") {\r\n                                $error(resp.data.data)\r\n                                return\r\n                            };\r\n                                return {data:resp}\r\n                            })\r\n                            \t          \r\n\r\n\t\t\t\treturn $http.get(\"./widgets/v2.nvd3-radar/sample.json\")          \r\n\t\t\t}, \r\n\r\n\t\t\tsetupOptions: function(){\r\n\t\t\t\tvar serieAdapter = this.wizard.parentScope.serieAdapter;\r\n\t\t   \t\t  for (var i in serieAdapter) {\r\n\t                      this.options.chart[i] = serieAdapter[i];\r\n\t                   }\r\n\t  \r\n\t                  \r\n\t                  if(angular.isDefined(serieAdapter)){\r\n\t                    if (serieAdapter.getX) {\r\n\t                      this.options.chart.x = serieAdapter.getX;\r\n\t                    }\r\n\r\n\t                    if (serieAdapter.getY) {\r\n\t                      this.options.chart.y = serieAdapter.getY;\r\n\t                    }\r\n\r\n\t                    this.options.chart.label = serieAdapter.getLabel;\r\n\r\n\t                    if (this.options.chart.scatter) {\r\n\t                      this.options.chart.scatter.label = serieAdapter.getLabel;\r\n\t                    }\r\n\t                    if (this.options.chart.lines) {\r\n\t                      this.options.chart.lines.label = serieAdapter.getLabel;\r\n\t                    }\r\n\t                    if (this.options.chart.stacked && angular.isObject(this.options.chart.stacked)) {\r\n\r\n\t                      this.options.chart.stacked.label = serieAdapter.getLabel;\r\n\t                    }\r\n\t                  }   \r\n\t\t   },\r\n\r\n\t\t   loadData: function(){\r\n\t\t\t\tlet thos = this;\r\n\r\n\t\t\t\tif(!this.wizard.context.postprocessedTable){\r\n\t\t\t\t\t$dps\r\n\t\t\t          .get(\"/api/data/process/\"+this.conf.dataID)\r\n\t\t\t          .success(function (resp) {\r\n\t\t\t              thos.wizard.context.postprocessedTable = resp.value;\r\n\t\t\t          })\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t\tthis.optionsLoaded = //(this.optionsLoaded) ? this.optionsLoaded :\r\n\t\t\t\t\tthis.loadOptions().then( (options) => {\r\n\t\t\t\t\t\tthos.options = options.data;\r\n\t                \tif(!thos.conf.decoration){\r\n\t\t\t            \tthos.conf.decoration = chartAdapter.getDecoration(thos.options);\r\n\t\t\t            }\r\n\t\t            \r\n\t\t\t            thos.conf.decoration.setColor = (palette) => {thos.conf.decoration.color = angular.copy(palette) }\r\n\t\t\t            // thos.options.chart.x = function (d) { return d.label };\r\n\t\t             //    thos.options.chart.y = function (d) { return d.value };\r\n\t\t                \r\n\t\t                this.options.chart.tooltipContent =  (serie, x, y, s) => \r\n\t\t                \"<center><b>\" + s.point.label + \"</b><br/>\" + \r\n\t\t                s.series.key + \" : \" + s.point.value.toFixed(2) + \"</center>\"\r\n            \r\n\t\t                thos.conf.decoration.width = parentHolder(thos.wizard.conf).width;\r\n\t\t                thos.setupOptions();\r\n\t\t                \r\n\r\n\t\t    //             thos.conf.decoration.title = thos.dataset.dataset.label;\r\n\t\t\t\t\t\t// thos.conf.decoration.subtitle = thos.dataset.dataset.source;\r\n\t\t\t\t\t\t// thos.conf.decoration.caption = 'Note:'+ thos.dataset.dataset.note;\r\n\t\t\t\t\t\t// thos.conf.decoration.xAxisName = thos.dataset.dataset.label;\r\n\t\t\t\t\t\t// thos.conf.decoration.yAxisName = thos.dataset.dataset.label;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tthis.dataLoaded = //(this.dataLoaded) ? this.dataLoaded :\r\n\t\t\t\t \tthis.loadSeries().then( (resp) => {\r\n\t\t\t\t \t\tthos.data = resp.data.data.data;\r\n\t\t                thos.conf.serieDataId = resp.data.data.data_id;\r\n\t\t            });\r\n\r\n\t\t\t\t$q.all([this.optionsLoaded, this.dataLoaded]).then(() => {\r\n\t\t\t\t\tthos.apply()\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\teditScript: function() {\r\n                var thos = this;\r\n                dpsEditor(thos.conf.script)\r\n                    .then((script) => {\r\n                        thos.conf.script = script;\r\n                        thos.loadData();\r\n                    })\r\n            },\r\n\r\n\t\t\tactivate : function(wizard){\r\n\t\t\t\t// if (this.conf.dataID){\r\n\t\t\t\t\tthis.loadData();\r\n\t\t\t\t// }\r\n\t\t\t},\r\n\r\n\t\t\tapply: function(){\r\n\t\t\t\tthis.conf.decoration.width = parentHolder(this.wizard.conf).width;\r\n\t\t\t\tchartAdapter.applyDecoration(this.options,this.conf.decoration);\r\n\t\t\t\tthis.settings = {options:angular.copy(this.options), data:angular.copy(this.data)};\r\n\t\t\t}\t\r\n\t    }\r\n}]);    \t\r\n\r\n\r\n\r\n//\r\n//\r\n//\r\n//\r\n\r\n// import angular from 'angular';\r\n// import \"widgets/v2.steps/palettes\";\r\n// import 'widgets/nvd3-widget/nvd3-widget';\r\n// import 'widgets/data-util/dps';\r\n// import \"widgets/v2.nvd3-radar/adapter\";\r\n\r\n// var m = angular.module(\"app.widgets.v2.steps.radar-chart-decoration\",[\r\n// \t\"app.widgets.palettes\",  \r\n// \t'app.widgets.nvd3-widget',\r\n//     \"app.widgets.data-util.dps\",\r\n//     \"app.widgets.v2.radar-chart-adapter\"]);\r\n\r\n// m.factory(\"RadarChartDecoration\",[\r\n// \t\"Palettes\", \"$http\",\"parentHolder\",\"Requestor\", \"RadarChartAdapter\", \r\n// \tfunction(Palettes,$http, parentHolder, Requestor, RadarChartAdapter ){\r\n// \treturn {\r\n\t\t\r\n// \t\ttitle : \"Chart Decoration\",\r\n\t\t\r\n// \t\tdescription : \"Setup chart decoration options\",\r\n        \r\n//     \thtml : \"./widgets/v2.steps/radar-chart-decoration.html\",\r\n\r\n//     \tpalettes : Palettes,\r\n\r\n//     \tonStartWizard: function(wizard){\r\n//     \t\tthis.wizard = wizard;\r\n//     \t\tif(this.settings){\r\n//     \t\t\tthis.settings.options = undefined;\r\n//     \t\t\tthis.settings.data = undefined;\r\n//     \t\t}\r\n//     \t},\r\n\r\n//     \tonFinishWizard:  function(wizard){\r\n//     \t\twizard.conf.decoration = this.decoration;\r\n//     \t},\r\n\r\n//     \tsetColor : function(palette){\r\n//     \t\tthis.decoration.color = palette;\r\n//     \t\tif(this.decoration.reversePalette == true) this.reversePalette();\r\n//     \t},\r\n\t\t\r\n// \t\treversePalette: function(){\r\n// \t\t\tif ( this.decoration.color ){\r\n// \t\t\t\tvar tmp = [];\r\n// \t\t\t\tfor(var i = this.decoration.color.length-1; i >= 0; i--){\r\n// \t\t\t\t\ttmp.push(this.decoration.color[i]);\r\n// \t\t\t\t}\r\n\r\n// \t\t\t\tthis.decoration.color=[];\r\n// \t\t\t\tvar thos = this;\r\n// \t\t\t\ttmp.forEach(function(item){\r\n// \t\t\t\t\tthos.decoration.color.push(item);\r\n// \t\t\t\t})\r\n// \t\t\t}\t\r\n// \t\t},\r\n\r\n// \t\tmakeRequest: function(){\r\n// \t\t\tif(this.serieRequest){\r\n// \t\t\t\tthis.request = this.serieRequest;\r\n// \t\t\t\treturn;\t\r\n// \t\t\t}\r\n\r\n// \t\t\tthis.request = {\r\n// \t                \"data_id\": this.queryResultId,\r\n// \t                \"params\": \r\n// \t                {\r\n// \t                  \"mode\" : this.postprocessSettings.mode,\r\n// \t                  \"direction\" : this.postprocessSettings.direction,\r\n// \t                  \"precision\" : this.postprocessSettings.precision,\r\n// \t                  \"normalized\" : this.postprocessSettings.normalize,\r\n// \t                  \"useColumnMetadata\": this.postprocessSettings.useColumnMetadata,\r\n// \t                  \"useRowMetadata\": this.postprocessSettings.useRowMetadata\r\n\t                  \r\n// \t                },\r\n// \t                \"proc_name\": \"barchartserie\",\r\n// \t                \"response_type\": \"data\"\r\n// \t              };\r\n// \t        this.serieRequest = this.request;      \r\n// \t   },\r\n\r\n// \t   setupOptions: function(){\r\n// \t   \tvar serieAdapter = this.wizard.parentScope.serieAdapter;\r\n// \t   \t\t  for (var i in serieAdapter) {\r\n//                       this.options.chart[i] = serieAdapter[i];\r\n//                    }\r\n  \r\n                  \r\n//                   if(angular.isDefined(serieAdapter)){\r\n//                     if (serieAdapter.getX) {\r\n//                       this.options.chart.x = serieAdapter.getX;\r\n//                     }\r\n\r\n//                     if (serieAdapter.getY) {\r\n//                       this.options.chart.y = serieAdapter.getY;\r\n//                     }\r\n\r\n//                     this.options.chart.label = serieAdapter.getLabel;\r\n\r\n//                     if (this.options.chart.scatter) {\r\n//                       this.options.chart.scatter.label = serieAdapter.getLabel;\r\n//                     }\r\n//                     if (this.options.chart.lines) {\r\n//                       this.options.chart.lines.label = serieAdapter.getLabel;\r\n//                     }\r\n//                     if (this.options.chart.stacked && angular.isObject(this.options.chart.stacked)) {\r\n\r\n//                       this.options.chart.stacked.label = serieAdapter.getLabel;\r\n//                     }\r\n//                   }   \r\n// \t   },\r\n\r\n// \t\tactivate : function(wizard){\r\n\t\t\t\r\n// \t\t\tthis.postprocessSettings = wizard.conf.postprocessSettings;\r\n// \t\t\tthis.queryResultId = wizard.conf.queryResultId;\r\n// \t\t\tthis.serieRequest = wizard.conf.serieRequest;\r\n// \t\t\tthis.decoration = wizard.conf.decoration;\r\n\r\n// \t\t\tthis.makeRequest();\r\n// \t\t\tvar thos = this;\r\n\r\n// \t\t\tnew Requestor()\r\n// \t        .push(\"getOptions\",function(requestor){\r\n// \t          $http.get(\"./widgets/nvd3-radar/options.json\")\r\n// \t          .success(function(data){\r\n// \t             thos.options = data;\r\n                \r\n// \t            if(thos.decoration){\r\n// \t            \tRadarChartAdapter.applyDecoration(thos.options,thos.decoration)\r\n// \t            }else{\r\n// \t            \tthos.decoration = RadarChartAdapter.getDecoration(thos.options);\r\n// \t            }\r\n// \t            thos.decoration.width = parentHolder(thos.wizard.conf).width;\r\n// \t            thos.setupOptions();\t\r\n// \t          //    thos.options.chart.x = function (d) { return d.label };\r\n//            //       thos.options.chart.y = function (d) { return d.value };\r\n//            //       thos.options.chart.tooltipContent: function (serie, x, y, s) {\r\n//            //    \t\t\treturn \"<center><b>\" + s.point.label + \"</b><br/>\" + s.series.key + \" : \" + s.point.value.toFixed(2) + \"</center>\"\r\n//            //  \t};\r\n// \t            requestor.resolve();\r\n// \t          })                \r\n// \t        })\r\n// \t        .push(\"generateSeries\",function(requestor){\r\n// \t          \t$http\r\n// \t            .post(\"./api/data/process/\",\r\n// \t              thos.request    \r\n// \t            )\r\n// \t            .success(function (data) {\r\n// \t                thos.data = data.data;\r\n// \t                thos.data_id = data.data_id;\r\n// \t                requestor.resolve(data.data_id)\r\n// \t          \t})\r\n// \t         })\r\n// \t        .execute(this.queryResultId,function(data){\r\n// \t        \tthos.serieDataId = data;\r\n// \t        \tthos.wizard.complete(thos);\r\n// \t        \tthos.settings = {options:angular.copy(thos.options), data:angular.copy(thos.data)}\r\n\t        \t\r\n// \t         });\r\n          \r\n// \t\t},\r\n\r\n// \t\tapply: function(){\r\n\r\n// \t\t\tthis.decoration.width = parentHolder(this.wizard.conf).width;\r\n// \t\t\tRadarChartAdapter.applyDecoration(this.options,this.decoration);\r\n// \t\t\tthis.settings = {options:angular.copy(this.options), data:angular.copy(this.data)};\r\n// \t\t\t// this.makeRequest();\r\n// \t\t}\t\r\n//     }\r\n// }]);    \t\r\n"],"sourceRoot":"/source/"}