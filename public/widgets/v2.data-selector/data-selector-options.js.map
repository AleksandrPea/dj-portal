{"version":3,"sources":["v2.data-selector/data-selector-options.js"],"names":[],"mappings":"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","file":"v2.data-selector/data-selector-options.js","sourcesContent":["import angular from 'angular';\r\n// import 'widgets/v2.nvd3-widget/nvd3-widget';\r\n// import \"widgets/v2.nvd3-bar/adapter\";\r\n// import \"wizard-directives\";\r\n\r\n\r\nvar m = angular.module(\"app.widgets.v2.data-selector-options\",[\"app.dps\"]);\r\n\r\nm.factory(\"DataSelectorOptions\",[\r\n\t\"$http\",\r\n\t\"$dps\",\r\n\t\"$q\", \r\n\t\"parentHolder\",\r\n\t\"pageWidgets\",\r\n\t\r\n\tfunction(\r\n\t\t$http, \r\n\t\t$dps,\r\n\t\t$q, \r\n\t\tparentHolder, \r\n\t\tpageWidgets ){\r\n\r\n\t\treturn {\r\n\t\t\tid: \"DataSelectorOptions\",\r\n\r\n\t\t\ttitle : \"Data Selector Options\",\r\n\t\t\t\r\n\t\t\tdescription : \"Setup data selector options\",\r\n\t        \r\n\t    \thtml : \"./widgets/v2.data-selector/data-selector-options.html\",\r\n\r\n\t    \tonStartWizard: function(wizard){\r\n\t    \t\tthis.wizard = wizard;\r\n\t    \t\tthis.conf = {\r\n\t    \t\t\tdecoration : wizard.conf.decoration || {},\r\n\t    \t\t\tdataID : wizard.conf.dataID,\r\n\t    \t\t\tqueryID : wizard.conf.queryID,\r\n\t    \t\t\tserieDataId : wizard.conf.serieDataId,\r\n\t    \t\t\toptionsUrl : \"./widgets/v2.nvd3-bar/options.json\",\r\n\t    \t\t\tdataUrl : $dps.getUrl()+\"/api/data/process/\"\r\n\t    \t\t}\t\r\n\r\n\t    \t\tthis.conf.decoration.direction = this.conf.decoration.direction || \"Rows\";\r\n\r\n\t    \t\tthis.queries = [];\r\n\r\n\t    \t\tpageWidgets()\r\n\t    \t\t\t.filter((item) => item.type ==\"v2.query-manager\")\r\n\t    \t\t\t.map((item) => item.queries)\r\n\t    \t\t\t.forEach((item) => {this.queries = this.queries.concat(item)})\r\n\r\n\t    \t\tif(this.conf.queryID){\r\n\t    \t\t\tlet thos = this;\r\n\t    \t\t\tthis.inputQuery = this.queries.filter((item) => item.$id == this.conf.queryID)[0].$title;\r\n\t    \t\t}\t\r\n\t    \t},\r\n\r\n\t    \tonFinishWizard:  function(wizard){\r\n\t    \t\t\r\n\t    \t\twizard.conf.decoration = this.conf.decoration;\r\n\t    \t\twizard.conf.serieDataId  = this.conf.serieDataId; \r\n\t    \t\twizard.conf.queryID  = this.conf.queryID;\r\n\t    \t\twizard.conf.dataID  = this.conf.dataID;\r\n\t    \t\t\r\n\r\n\t    \t\tthis.selectorData = undefined;\r\n\t    \t\tthis.conf = {};\r\n\t    \t},\r\n\r\n\t    \tonCancelWizard: function(wizard){\r\n\t    \t\tthis.selectorData = undefined;\r\n\t\t\t\tthis.conf = {};\r\n\t    \t},\r\n\r\n\t    \tselectInputData: function(){\r\n\t\t\t\tlet thos = this;\r\n\t\t\t\tthos.wizard.context.postprocessedTable = undefined;\r\n      \t\t\tlet iq = this.queries.filter((item) => item.$title == thos.inputQuery)[0];\r\n\t\t\t\tthis.conf.dataID = iq.context.queryResultId;\r\n\t\t\t\tthis.conf.queryID = iq.$id;\r\n\t\t\t\tthis.loadData();\r\n\t\t\t},\r\n\r\n\t\t\tselectDirection: function(dir){\r\n\t\t\t\tthis.metadataList = [];\r\n\t\t\t\tthis.getMetadataList(this.wizard.context.postprocessedTable)\r\n\t\t\t},\r\n\r\n\t\t\tselectMeta : function(meta){\r\n\t\t\t\tif(!meta){\r\n\t\t\t\t\tthis.selectorData = undefined;\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet list = (this.conf.decoration.direction == \"Rows\")\r\n\t\t\t\t\t? this.wizard.context.postprocessedTable.body\r\n\t\t\t\t\t: this.wizard.context.postprocessedTable.header;\r\n\t\t\t\t\r\n\t\t\t\tthis.selectorData = list.map((item) => {\r\n\t\t\t\t\treturn item.metadata[meta.index].label\r\n\t\t\t\t}) \r\n\t\t\t},\r\n\r\n\t\t\t\r\n\t\t\tgetMetadataList : function(table){\r\n\t\t\t\tlet list = (this.conf.decoration.direction == \"Rows\")\r\n\t\t\t\t\t? table.body[0].metadata\r\n\t\t\t\t\t: table.header[0].metadata;\r\n\t\t\t\tthis.metadataList = list.map((d,i) => {return {key:d.dimensionLabel, index:i}})\t\r\n\t\t\t},\r\n\t    \t\r\n\t\t\tloadData: function(){\r\n\t\t\t\tlet thos = this;\r\n\t\t\t\tif(!this.wizard.context.postprocessedTable){\r\n\t\t\t\t\t$dps\r\n\t\t\t          .get(\"/api/data/process/\"+this.conf.dataID)\r\n\t\t\t          .success(function (resp) {\r\n\t\t\t              thos.wizard.context.postprocessedTable = resp.value;\r\n\t\t\t              /// extract object list\r\n\t\t\t              thos.getMetadataList(thos.wizard.context.postprocessedTable)\r\n\t\t\t              thos.apply()\r\n\t\t\t          })\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tactivate : function(wizard){\r\n\t\t\t\t// this.dataset = wizard.context.dataset;\r\n\t\t\t\tif (this.conf.dataID){\r\n\t\t\t\t\tthis.loadData();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tapply: function(){\r\n\t\t\t\t// set $scope.data\r\n\t\t\t}\t\r\n\t    }\r\n}]);    \t\r\n"],"sourceRoot":"/source/"}