{"version":3,"sources":["v2.data-selector/widget.js"],"names":[],"mappings":"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","file":"v2.data-selector/widget.js","sourcesContent":["import angular from 'angular';\r\nimport 'widgets/v2.data-selector/wizard';\r\n\r\n\r\nconst m = angular.module('app.widgets.v2.data-selector', [\"app.dps\",\r\n  'app.widgets.v2.data-selector-wizard'\r\n]);\r\n\r\n\r\nm.controller('DataSelectorCtrlV2', function ($scope, $http, $dps, DataSelectorWizard, APIProvider, EventEmitter) {\r\n  \r\n  $scope.emitter = new EventEmitter($scope);\r\n\r\n  var Selector =  function(){\r\n        this.objects = $scope.selectorData;\r\n        \r\n        this.selectOneObject= (objectKey) =>{\r\n          objectKey = objectKey.trim();\r\n          this.objects.forEach((o) =>{\r\n              if(o.key == objectKey){\r\n                o.disabled = false;\r\n              }else{\r\n                o.disabled = true\r\n              }\r\n            })\r\n          // console.log(\"Emit selectObject1\")\r\n           $scope.emitter.emit(\"selectObject\",this.objects);  \r\n        };\r\n\r\n        this.inverseObjectSelection = () => {\r\n          this.objects.forEach((o) => {o.disabled = !!!o.disabled})\r\n        }\r\n        this.clear = () => {\r\n          this.objects.forEach((item) => {item.disabled = true;})\r\n        }\r\n\r\n        this.selectObject= (objectKey) => {\r\n          \r\n          let selectedObject = this.objects.filter((o) => o.key === objectKey)[0];\r\n          selectedObject.disabled = !selectedObject.disabled;\r\n          if(this.objects.filter((o) => !o.disabled).length == 0){\r\n            selectedObject.disabled = !selectedObject.disabled;\r\n            this.inverseObjectSelection();\r\n          } \r\n          // console.log(\"Emit selectObject\", this.objects);\r\n          $scope.emitter.emit(\"selectObject\",this.objects);  \r\n        }\r\n\r\n      }\r\n\r\n    $scope.$parent.getSelectorData = (list) => {\r\n      \r\n        \r\n        $scope.selectorData = list;\r\n\r\n        $scope.selector = new Selector();\r\n        $scope.selected = [];\r\n        $scope.unselected = $scope.selectorData.map(item => item);\r\n    }\r\n\r\n    $scope.$watch('selectorData', function(newList, oldList){\r\n      // console.log(\"selectorData changed\")\r\n      // if(newList == oldList) return;\r\n      if(newList && newList.forEach){\r\n        $scope.selector = new Selector();\r\n        $scope.selected = [];\r\n        $scope.unselected = newList.map(item => item); \r\n      }  \r\n    })\r\n\r\n    $scope.select = (key) => {\r\n      let index = -1;\r\n      for (let i in $scope.unselected){\r\n        if($scope.unselected[i].key == key){\r\n          index = i;\r\n          break;\r\n        }\r\n      } \r\n      $scope.selected.push($scope.unselected[index])\r\n      $scope.unselected.splice(index,1);\r\n      $scope.selector.selectObject(key)\r\n      $scope.selectedObject = undefined;\r\n    }\r\n\r\n    $scope.unselect = (key) => {\r\n      if($scope.selected.length <2) return;\r\n      let index = -1;\r\n      for (let i in $scope.selected){\r\n        if($scope.selected[i].key == key){\r\n          index = i;\r\n          break;\r\n        }\r\n      } \r\n      $scope.unselected.push($scope.selected[index])\r\n      $scope.selected.splice(index,1)\r\n      $scope.selector.selectObject(key)\r\n    }\r\n\r\n    $scope.keyFounded = (key) => {\r\n      if(!key) return false;\r\n      if(!$scope.unselected) return false;\r\n      return $scope.unselected.filter( o => o.key == key )[0]\r\n    }\r\n\r\n\r\n\r\n    $scope.load = function(){\r\n      // $http\r\n      //   .get(\"./api/data/process/\"+$scope.widget.dataID)\r\n      $dps\r\n        .get(\"/api/data/process/\"+$scope.widget.dataID)  \r\n        .then((resp) => {\r\n          let table = resp.data.value;\r\n          let list = ($scope.widget.decoration.direction == \"Rows\")\r\n          ? table.body\r\n          : table.header;\r\n          list = list.map((item) => {\r\n            return { \r\n              id:item.metadata[$scope.widget.decoration.meta.index].id,\r\n              key:item.metadata[$scope.widget.decoration.meta.index].label, \r\n              disabled: true\r\n            }\r\n          }) \r\n          $scope.$parent.getSelectorData(list)\r\n        })\r\n    }  \r\n\r\n\r\n  new APIProvider($scope)\r\n\r\n\r\n    \r\n    .config(()=>{\r\n      // console.log(\"Config selector\")\r\n      $scope.load();\r\n    })\r\n    \r\n    .openCustomSettings(function () {\r\n      $scope.wizard = DataSelectorWizard;\r\n      return $scope.wizard.start($scope)\r\n    })\r\n\r\n    .translate(function(){\r\n      $scope.selector.clear();\r\n      $scope.selected.forEach((item) => {\r\n        $scope.selector.selectObject(item.key)\r\n      })\r\n    })\r\n});\r\n"],"sourceRoot":"/source/"}