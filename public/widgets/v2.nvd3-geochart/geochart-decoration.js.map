{"version":3,"sources":["v2.nvd3-geochart/geochart-decoration.js"],"names":[],"mappings":"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","file":"v2.nvd3-geochart/geochart-decoration.js","sourcesContent":["import angular from 'angular';\r\nimport 'widgets/v2.nvd3-widget/nvd3-widget';\r\nimport \"widgets/v2.nvd3-geochart/adapter\";\r\nimport \"wizard-directives\";\r\n\r\n\r\nvar m = angular.module(\"app.widgets.v2.geochart-decoration\",[\r\n\t'app.widgets.v2.nvd3-widget',\r\n    \"app.widgets.v2.geochart-adapter\", \r\n    \"wizard-directives\",\r\n    \"app.dps\"]);\r\n\r\nm.factory(\"GeochartDecoration\",[\r\n\t\"$http\",\r\n\t\"$dps\",\r\n\t\"$q\", \r\n\t\"parentHolder\",\r\n\t\"GeochartAdapter\", \r\n\t\"pageWidgets\",\r\n\t\"i18n\",\r\n\t\r\n\tfunction(\r\n\t\t$http, \r\n\t\t$dps,\r\n\t\t$q, \r\n\t\tparentHolder, \r\n\t\tGeochartAdapter,\r\n\t\tpageWidgets,\r\n\t\ti18n ){\r\n\r\n\t\treturn {\r\n\t\t\tid: \"GeochartDecoration\",\r\n\r\n\t\t\ttitle : \"Chart Decoration\",\r\n\t\t\t\r\n\t\t\tdescription : \"Setup chart decoration options\",\r\n\t        \r\n\t    \thtml : \"./widgets/v2.nvd3-geochart/geochart-decoration.html\",\r\n\r\n\t    \tonStartWizard: function(wizard){\r\n\t    \t\tthis.wizard = wizard;\r\n\t    \t\tthis.conf = {\r\n\r\n\t    \t\t\tdirection : (wizard.conf.direction) ? wizard.conf.direction : \"Rows\",\r\n\t\t            dataIndex : (wizard.conf.dataIndex) ? wizard.conf.dataIndex : [0],\r\n\t            \tbins : (this.wizard.conf.bins) ? wizard.conf.bins : 2,\r\n\t            \tscope : (this.wizard.conf.scope) ? wizard.conf.scope : \"none\",\r\n\r\n\t    \t\t\tdecoration : wizard.conf.decoration,\r\n\t    \t\t\tdataID : wizard.conf.dataID,\r\n\t    \t\t\tqueryID : wizard.conf.queryID,\r\n\t    \t\t\tserieDataId : wizard.conf.serieDataId,\r\n\t    \t\t\toptionsUrl : \"./widgets/v2.nvd3-geochart/options.json\",\r\n\t    \t\t\tdataUrl : \"/api/data/process/\",\r\n\t    \t\t\temitters: wizard.conf.emitters\r\n\t    \t\t}\t\r\n\r\n\t    \t\tthis.queries = [];\r\n\r\n\t    \t\tpageWidgets()\r\n\t    \t\t\t.filter((item) => item.type ==\"v2.query-manager\")\r\n\t    \t\t\t.map((item) => item.queries)\r\n\t    \t\t\t.forEach((item) => {this.queries = this.queries.concat(item)})\r\n\r\n\t    \t\tif(this.conf.queryID){\r\n\t    \t\t\tlet thos = this;\r\n\t    \t\t\tthis.inputQuery = this.queries.filter((item) => item.$id == this.conf.queryID)[0].$title;\r\n\t    \t\t}else{\r\n\t    \t\t\tthis.inputQuery = undefined;\r\n\t    \t\t}\r\n\t    \t\tthis.complete = false;\t\r\n\t    \t},\r\n\r\n\t    \tonFinishWizard:  function(wizard){\r\n\t    \t\tthis.conf.decoration.setColor = undefined;\r\n\t    \t\twizard.conf.decoration = this.conf.decoration;\r\n\t    \t\twizard.conf.serieDataId  = this.conf.serieDataId; \r\n\t    \t\twizard.conf.queryID  = this.conf.queryID;\r\n\t    \t\twizard.conf.dataID  = this.conf.dataID;\r\n\t    \t\twizard.conf.direction =  this.conf.direction;\r\n            \twizard.conf.dataIndex =  this.conf.dataIndex;\r\n    \t\t\twizard.conf.bins =  this.conf.bins;\r\n    \t\t\twizard.conf.scope =  this.conf.scope;\r\n    \t\t\twizard.conf.emitters  = this.conf.emitters;\r\n\r\n\t    \t\tthis.settings = {options:angular.copy(this.options), data:[]};\r\n\t    \t\tthis.conf = {};\r\n\t    \t},\r\n\r\n\t    \tonCancelWizard: function(wizard){\r\n\t\t\t\tthis.settings = {options:angular.copy(this.options), data:[]};\r\n\t\t\t\tthis.conf = {};\r\n\t    \t},\r\n\r\n\t    \treversePalette: function(){\r\n\t\t\t\tif ( this.conf.decoration.color ){\r\n\t\t\t\t\tthis.conf.decoration.color = this.conf.decoration.color.reverse(); \r\n\t\t\t\t}\t\r\n\t\t\t},\r\n\r\n\t\t\tselectInputData: function(){\r\n\t\t\t\tlet thos = this;\r\n\t\t\t\tthos.wizard.context.postprocessedTable = undefined;\r\n      \t\t\tlet iq = this.queries.filter((item) => item.$title == thos.inputQuery)[0];\r\n\t\t\t\tthis.conf.dataID = iq.context.queryResultId;\r\n\t\t\t\tthis.conf.queryID = iq.$id;\r\n\t\t\t\tthis.loadData();\r\n\t\t\t},\r\n\r\n\r\n\t\t\tmakeSerieList: function(table){\r\n\t\t        let thos = this;\r\n\t\t        let list = (this.conf.direction == \"Rows\")? table.header: table.body;\r\n\t        \treturn list.map((item,index) => {\r\n\t\t\t          return { \r\n\t\t\t          \t\"label\" : item.metadata.map((m) => m.label).join(\".\"), \r\n\t\t\t          \t\"index\" : index, \r\n\t\t\t          \t\"enable\": (thos.conf.dataIndex.indexOf(index) >= 0)\r\n\t\t\t          }\r\n\t        \t})  \r\n\t\t    },\r\n\r\n\t\t    selectSerie: function(){\r\n\t\t    \t\r\n\t\t      this.conf.dataIndex = \r\n\t\t      this.indexList\r\n\t\t        .filter((item) => item.enable == true)\r\n\t\t        .map((item) => item.index);\r\n\t\t      \r\n\t\t      if (this.conf.dataIndex.length == 0){\r\n\t\t      \tthis.indexList[0].enable=true;\r\n\t\t      \tthis.conf.dataIndex = [0];\r\n\t\t      }  \r\n\t\t    },\r\n\r\n\t\t    selectAllSeries: function(){\r\n\t\t    \tthis.indexList.forEach((item) => {\r\n\t\t    \t\titem.enable = true;\r\n\t\t    \t})\r\n\t\t    \tthis.selectSerie();\r\n\t\t    },\r\n\r\n\t\t    inverseSeriesSelection: function(){\r\n\t\t    \tthis.indexList.forEach((item) => {\r\n\t\t    \t\titem.enable = !item.enable;\r\n\t\t    \t})\r\n\t\t    \tthis.selectSerie();\r\n\t\t    },\r\n\r\n\t\t    clearSeriesSelection: function(){\r\n\t\t\t\tthis.indexList.forEach((item) => {\r\n\t\t    \t\titem.enable = false;\r\n\t\t    \t})\r\n\t\t    \tthis.selectSerie();\r\n\t\t    },\r\n\r\n\r\n\t\t    fixBoundary: function(){\r\n\t\t    \tif(this.conf.decoration.initialScope == true){\r\n\t\t    \t\tthis.conf.decoration.boundary = this.chartAPI.chart().boundary()\r\n\t\t    \t}else{\r\n\t\t    \t\tthis.conf.decoration.boundary = {}\r\n\t\t    \t}\r\n\t\t    },\r\n\r\n\t\t    setDirection: function(){\r\n\t\t    \t this.indexList = this.makeSerieList(this.wizard.context.postprocessedTable);\r\n\t\t    },\r\n\r\n\r\n\t\t\tloadOptions : function(){\r\n\t\t\t\treturn $http.get(this.conf.optionsUrl)\r\n\t\t\t},\r\n\r\n\t\t\tloadSeries : function(){\r\n\r\n\t\t\t\treturn $dps\r\n\t\t\t\t          .post(\"/api/data/script\",{\r\n\t\t\t\t            \"data\"  : \t\"source(table:'\"+this.conf.dataID+\"');\"+\r\n\t\t\t\t            \t\t\t\"geojson(dir:'\"+this.conf.direction+\"',\"+\r\n\t\t\t\t            \t\t\t\t\"dataIndex:\"+ JSON.stringify(this.conf.dataIndex)+\",\"+\r\n\t\t\t\t            \t\t\t\t\"bins:\"+this.conf.bins+\",\"+\r\n\t\t\t\t            \t\t\t\t\"scope:'\"+this.conf.scope+\"'\"+\r\n\t\t\t\t            \t\t\t\");\"+\r\n\t\t\t\t            \t\t\t\"save()\",\r\n\t\t\t\t            \"locale\": i18n.locale()\r\n\t\t\t\t          })\r\n\r\n\r\n\t\t\t\t// let r = $dps.post(this.conf.dataUrl,\r\n\t\t\t\t// \t{\r\n\t\t\t\t// \t\t\"cache\": false,\r\n\t\t  //               \"data_id\": this.conf.dataID,\r\n\r\n\t\t  //               \"params\": {\r\n\t\t  //               \t\"direction\" : this.conf.direction,\r\n\t\t  //               \t\"dataIndex\":this.conf.dataIndex,\r\n\t   //          \t\t\t\"bins\":this.conf.bins,\r\n\t   //          \t\t\t\"scope\" : this.conf.scope\r\n\t\t\t\t// \t\t},\r\n\r\n\t\t  //               \"proc_name\": \"geochart-serie\",\r\n\t\t  //               \"response_type\": \"data\"\r\n\t\t  //           }\r\n\t\t\t\t// )\r\n\t\t\t\t// return r\r\n\t\t\t}, \r\n\r\n\t\t\tloadData: function(){\r\n\t\t\t\tlet thos = this;\r\n\t\t\t\tthis.complete = false;\r\n\r\n\t\t\t\tif(!this.wizard.context.postprocessedTable){\r\n\t\t\t\t\t$dps\r\n\t\t\t          .get(\"/api/data/process/\"+this.conf.dataID)\r\n\t\t\t          .success(function (resp) {\r\n\t\t\t              thos.wizard.context.postprocessedTable = resp.value;\r\n\t\t\t              thos.indexList = thos.makeSerieList(thos.wizard.context.postprocessedTable);\r\n\t\t\t          })\r\n\t\t\t\t}else{\r\n\t\t\t\t\t this.indexList = this.makeSerieList(this.wizard.context.postprocessedTable);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t\tthis.optionsLoaded = //(this.optionsLoaded) ? this.optionsLoaded :\r\n\t\t\t\t\tthis.loadOptions().then( (options) => {\r\n\t\t\t\t\t\tthos.options = options.data;\r\n\t\t\t\t\t\tthos.options.locale = i18n.locale();\r\n\r\n\t                \tif(!thos.conf.decoration){\r\n\t\t\t            \tthos.conf.decoration = GeochartAdapter.getDecoration(thos.options);\r\n\t\t\t            }\r\n\t\t            \r\n\t\t\t            thos.conf.decoration.setColor = (palette) => {\r\n\t\t\t            \tthos.conf.decoration.color = angular.copy(palette);\r\n\t\t\t            \tthos.conf.bins = thos.conf.decoration.color.length; \r\n\t\t\t            }\r\n\t\t\t           \r\n\t\t                \r\n\t\t                thos.conf.decoration.width = parentHolder(thos.wizard.conf).width;\r\n\r\n\t\t                thos.options.chart.tooltipContent = \r\n\t\t                \tfunction (serie, x, y, s) {\r\n\t\t\t\t              var locale = i18n.locale();\r\n\t\t\t\t              var name = (serie.properties.name[locale]) ? serie.properties.name[locale] : \r\n\t\t\t\t                serie.properties.name.en \r\n\t\t\t\t              var result = \"<center><b>\" + name + \"</center></b>\";\r\n\t\t\t\t              if (serie.properties.values && serie.properties.values[y.index()].c>=0) {\r\n\t\t\t\t                result += \"<div style=\\\"font-size:smaller;padding: 0 0.5em;\\\"> \" + \r\n\t\t\t\t                         y.series[y.index()].key + \r\n\t\t\t\t                          \" : \" + \r\n\t\t\t\t                          serie.properties.values[y.index()].v + \"</div>\";\r\n\t\t\t\t              }\r\n\t\t\t\t              return result;\r\n\t\t\t\t            }\r\n\t\t                \r\n\r\n\r\n\t\t    //             thos.conf.decoration.title = thos.dataset.dataset.label;\r\n\t\t\t\t\t\t// thos.conf.decoration.subtitle = thos.dataset.dataset.source;\r\n\t\t\t\t\t\t// thos.conf.decoration.caption = 'Note:'+ thos.dataset.dataset.note;\r\n\t\t\t\t\t\t// thos.conf.decoration.xAxisName = thos.dataset.dataset.label;\r\n\t\t\t\t\t\t// thos.conf.decoration.yAxisName = thos.dataset.dataset.label;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tthis.dataLoaded = //(this.dataLoaded) ? this.dataLoaded :\r\n\t\t\t\t \tthis.loadSeries().then( (resp) => {\r\n\t\t\t\t \t\tthos.data = resp.data.data.data;\r\n\t\t                thos.conf.serieDataId = resp.data.data.data_id;\r\n\t\t            });\r\n\r\n\t\t\t\t$q.all([this.optionsLoaded, this.dataLoaded]).then(() => {\r\n\t\t\t\t\tthis.complete = true;\r\n\t\t\t\t\tthos.conf.decoration.width = parentHolder(thos.wizard.conf).width;\r\n\t\t\t\t\tthos.options.chart.width = thos.conf.decoration.width;\r\n\t\t\t\t\tGeochartAdapter.applyDecoration(thos.options,thos.conf.decoration);\r\n\t\t\t\t\t// console.log(thos.options,thos.conf.decoration)\r\n\t\t\t\t\tthos.settings = {options:angular.copy(thos.options), data:angular.copy(thos.data)};\r\n\t\t\t\t\t// thos.apply()\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tactivate : function(wizard){\r\n\t\t\t\t// this.dataset = wizard.context.dataset;\r\n\t\t\t\tif (this.conf.dataID){\r\n\t\t\t\t\tthis.loadData();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tapply: function(){\r\n\t\t\t\tthis.activate();\r\n\t\t\t\t// this.conf.decoration.width = parentHolder(this.wizard.conf).width;\r\n\t\t\t\t// geoChartAdapter.applyDecoration(this.options,this.conf.decoration);\r\n\t\t\t\t// this.settings = {options:angular.copy(this.options), data:angular.copy(this.data)};\r\n\t\t\t}\t\r\n\t    }\r\n}]);    \t\r\n"],"sourceRoot":"/source/"}