{"version":3,"sources":["v2.nvd3-geochart/widget.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,kBAAkB,UAAU,KAAK,EAAE,OAAO,OAAO,IAAI,aAAa,IAAI,aAAa;;AAEvF,IAJO,UAAO,gBAAA,QAAM;;AAMpB,QALO;;AAOP,QANO;;AAQP,QAPO;;AAGP,IAAM,IAAI,QAAQ,OAAO,gCAAgC,CACvD,8BACA,kCACA;;AAIF,EAAE,WAAW,8FAAsB,UAC/B,QACA,cACA,gBACA,iBACA,MAAM;;EAER,IAAI,aACA,QACE;IACE,QAAQ;IACR,mBAAmB;IACnB,YAAY;IACZ,YAAa,SAAA,WAAS,SAAQ;MAC1B,OAAO,QAAQ,OAAO;;IAE1B,cAAc;MACZ,gBAAiB,SAAA,eAAU,OAAO,GAAG,GAAG,GAAG;QACzC,IAAI,SAAS,KAAK;QAClB,IAAI,OAAO,MAAO,WAAW,KAAK,UAAW,MAAM,WAAW,KAAK,UACjE,MAAM,WAAW,KAAK;QACxB,IAAI,SAAS,gBAAgB,OAAO;QACpC,IAAI,MAAM,WAAW,UAAU,MAAM,WAAW,OAAO,EAAE,SAAS,KAAG,GAAG;UACtE,UAAU,yDACD,EAAE,OAAO,EAAE,SAAS,MACnB,QACA,MAAM,WAAW,OAAO,EAAE,SAAS,IAAI;;QAEnD,OAAO;;;MAGR,oBAAoB,SAAA,mBAAS,MAAK;;QAEjC,OAAO,KAAK,GAAG,OAAO,IAAI,UAAC,GAAM;UAAC,OAAO,EAAC,KAAI,EAAE,KAAK,UAAS;;;;MAGhE,qBAAqB,SAAA,oBAAS,MAAK;QACjC,IAAI,IAAI;QACR,KAAK,GAAG,SAAS,QAAQ,UAAS,GAAE;UAChC,EAAE,KAAK,EAAC,KAAI,EAAE,WAAW,MAAM,UAAS;;;QAG5C,IAAI,SAAS;QACb,EAAE,QAAQ,UAAS,MAAK;UACpB,IAAI,YAAY;UAChB,OAAO,QAAQ,UAAS,GAAE;YACpB,aAAa,KAAK,OAAO,EAAE;;UAEjC,IAAG,aAAa,MAAM,OAAO,KAAK;;QAEtC,OAAO;;;;IAIlB","file":"v2.nvd3-geochart/widget.js","sourcesContent":["import angular from 'angular';\r\nimport 'widgets/v2.nvd3-widget/nvd3-widget';\r\nimport 'widgets/v2.nvd3-geochart/wizard';\r\nimport 'widgets/v2.nvd3-geochart/adapter';\r\n\r\n\r\nconst m = angular.module('app.widgets.v2.nvd3-geochart', [\r\n  'app.widgets.v2.nvd3-widget',\r\n  'app.widgets.v2.geochart-wizard',\r\n  'app.widgets.v2.geochart-adapter'\r\n]);\r\n\r\n\r\nm.controller('Nvd3GeochartCtrlV2', function (\r\n    $scope, \r\n    NVD3WidgetV2, \r\n    GeochartWizard, \r\n    GeochartAdapter,\r\n    i18n) {\r\n \r\n  new NVD3WidgetV2(\r\n      $scope, \r\n        {\r\n          wizard: GeochartWizard,\r\n          decorationAdapter: GeochartAdapter,\r\n          optionsURL: \"/widgets/v2.nvd3-geochart/options.json\",\r\n          acceptData : function(context){\r\n              return context.key == \"geochart\"\r\n          },\r\n          serieAdapter: {\r\n            tooltipContent : function (serie, x, y, s) {\r\n              var locale = i18n.locale();\r\n              var name = (serie.properties.name[locale]) ? serie.properties.name[locale] : \r\n                serie.properties.name.en \r\n              var result = \"<center><b>\" + name + \"</center></b>\";\r\n              if (serie.properties.values && serie.properties.values[y.index()].c>=0) {\r\n                result += \"<div style=\\\"font-size:smaller;padding: 0 0.5em;\\\"> \" + \r\n                         y.series[y.index()].key + \r\n                          \" : \" + \r\n                          serie.properties.values[y.index()].v + \"</div>\";\r\n              }\r\n              return result;\r\n            },\r\n\r\n             getSeriesSelection: function(data){\r\n              // console.log(data)\r\n              return data[0].series.map((s) => {return {key:s.key, disabled:false}})\r\n            },\r\n\r\n            getObjectsSelection: function(data){\r\n              let r = []\r\n              data[0].features.forEach(function(s){\r\n                  r.push({key:s.properties.name, disabled:true})\r\n              })\r\n\r\n              let result = [];\r\n              r.forEach(function(item){\r\n                  var notExists = true;\r\n                  result.forEach(function(v){\r\n                        notExists &= item.key != v.key;\r\n                  })\r\n                  if(notExists == true) result.push(item)\r\n              });\r\n              return result;\r\n            }\r\n          }\r\n        });\r\n});\r\n"],"sourceRoot":"/source/"}