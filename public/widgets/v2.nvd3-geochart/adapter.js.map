{"version":3,"sources":["v2.nvd3-geochart/adapter.js"],"names":[],"mappings":"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","file":"v2.nvd3-geochart/adapter.js","sourcesContent":["import angular from 'angular';\r\n\r\n\r\n\r\nconst m = angular.module(\"app.widgets.v2.geochart-adapter\",[]);\r\n\r\n\r\nm.service(\"GeochartAdapter\", [\r\n\r\n  \"i18n\",\r\n\r\n  function (i18n) {\r\n\r\n   this.onSelectSerie = (selection,settings,api) => {\r\n    // let data = d3.select(api.getSVG()).data();\r\n    settings.data[0].series.forEach((s) => {\r\n      let f = selection.filter(l => l.key == s.key)[0]\r\n      if(f){\r\n        s.disabled =  f.disabled\r\n      }\r\n    })\r\n    return settings;\r\n  }\r\n\r\n  this.onSelectObject = (selection,settings,api) => {\r\n    // console.log(\"selectObjects\",selection)\r\n    let selectedObjects = selection.filter(s => !s.disabled);\r\n    // console.log(\"features\", settings.data[0].features)\r\n    settings.data[0].features.forEach((o) => {\r\n      if(selectedObjects.filter(so => \r\n                           o.properties.name.en == so.key\r\n                        || o.properties.name.uk == so.key\r\n                        || o.properties.name.ru == so.key\r\n                        || o.properties.geocode == so.key\r\n                        \r\n                        || o.properties.name.en.indexOf(so.key)>=0\r\n                        || o.properties.name.uk.indexOf(so.key)>=0\r\n                        || o.properties.name.ru.indexOf(so.key)>=0\r\n\r\n                        || so.key.indexOf(o.properties.name.en)>=0\r\n                        || so.key.indexOf(o.properties.name.uk)>=0\r\n                        || so.key.indexOf(o.properties.name.ru)>=0\r\n\r\n\r\n                        || o.properties.name.en == so.id\r\n                        || o.properties.name.uk == so.id\r\n                        || o.properties.name.ru == so.id\r\n                        || o.properties.geocode == so.id\r\n                        \r\n                        || o.properties.name.en.indexOf(so.id)>=0\r\n                        || o.properties.name.uk.indexOf(so.id)>=0\r\n                        || o.properties.name.ru.indexOf(so.id)>=0\r\n\r\n                        || so.id.indexOf(o.properties.name.en)>=0\r\n                        || so.id.indexOf(o.properties.name.uk)>=0\r\n                        || so.id.indexOf(o.properties.name.ru)>=0\r\n                      ).length > 0){\r\n        o.disabled = false\r\n      }else{\r\n        o.disabled = true\r\n      }      \r\n    })\r\n     // console.log(\"settings\",settings)  \r\n    return settings;\r\n  }  \r\n    \r\n  this.applyDecoration = function (options, decoration, selector,api) {\r\n     if (angular.isDefined(decoration) && angular.isDefined(options)) {\r\n      options.chart.height = decoration.height;\r\n      // options.chart.width = decoration.width;\r\n      options.title.text = decoration.title;\r\n      options.subtitle.text = decoration.subtitle;\r\n      options.caption.text = decoration.caption;\r\n      options.chart.color = decoration.color ? decoration.color : null;\r\n\r\n      options.chart.showLabels = decoration.showLabels;\r\n      options.chart.showValues = decoration.showValues;\r\n      options.chart.showTiles = decoration.showTiles;\r\n      options.chart.selectedTiles = decoration.selectedTiles;\r\n      options.chart.interactive = decoration.interactive;\r\n      options.chart.defaultFill = decoration.defaultFill;\r\n      options.chart.defaultFillOpacity = decoration.defaultFillOpacity;\r\n      options.chart.defaultStroke = decoration.defaultStroke;\r\n      options.chart.defaultStrokeWidth = decoration.defaultStrokeWidth;\r\n      options.chart.defaultStrokeOpacity = decoration.defaultStrokeOpacity;\r\n      options.chart.selectedFillOpacity = decoration.selectedFillOpacity;\r\n      options.chart.selectedStrokeWidth = decoration.selectedStrokeWidth;\r\n      options.chart.boundary = decoration.boundary;\r\n      \r\n      options.chart.locale = i18n.locale();\r\n      if(decoration.enableEmitEvents){\r\n        \r\n        // if(api){\r\n          \r\n        //   api.onReady(function(){\r\n        //       d3\r\n        //         .select(api.getSVG())\r\n        //         .selectAll(\".nv-bar\")\r\n        //         .style(\"cursor\", \"pointer\");  \r\n        //     })\r\n          \r\n        // }\r\n\r\n        options.chart.legend.dispatch = {\r\n          stateChange: function(e) {\r\n            selector.selectSerie(e.disabled);\r\n          }\r\n        }\r\n\r\n        // options.chart.multibar.dispatch = {\r\n        //   elementClick : function(e) {\r\n        //     selector.selectObject(e.point.label);\r\n        //     var labels = d3\r\n        //       .select(api.getSVG())\r\n        //       .select(\".nv-x\")\r\n        //       .selectAll(\"text\")\r\n        //       .style(\"fill\",function(d){\r\n        //         var o = selector.object(d);\r\n        //         return (o && o.disabled) ? \"#000000\": \"#f04124\"\r\n        //       })\r\n        //       .style(\"font-weight\",function(d){\r\n        //         var o = selector.object(d);\r\n        //         return (o && o.disabled) ? \"normal\": \"bold\"\r\n        //       })\r\n        //   },\r\n          \r\n        //   elementDblClick: function(e) {\r\n        //     selector.selectOneObject(e.point.label);\r\n        //     var labels = d3\r\n        //       .select(api.getSVG())\r\n        //       .select(\".nv-x\")\r\n        //       .selectAll(\"text\")\r\n        //       .style(\"fill\",function(d){\r\n        //         var o = selector.object(d);\r\n        //         return (o && o.disabled) ? \"#000000\": \"#f04124\"\r\n        //       })\r\n        //       .style(\"font-weight\",function(d){\r\n        //         var o = selector.object(d);\r\n        //         return (o && o.disabled) ? \"normal\": \"bold\"\r\n        //       })\r\n        //   }\r\n        // }\r\n\r\n      }\r\n           \r\n    }\r\n    return options;\r\n  };\r\n\r\n  this.getDecoration = function (options) {\r\n    if (angular.isDefined(options)) {\r\n      var decoration = {};\r\n      decoration.height = options.chart.height;\r\n\r\n      // decoration.width = options.chart.width;\r\n\r\n      decoration.title = options.title.text;\r\n      decoration.subtitle = options.subtitle.text;\r\n      decoration.caption = options.caption.text;\r\n      decoration.color = options.chart.color;\r\n\r\n      decoration.showLabels = options.chart.showLabels;\r\n      decoration.showValues = options.chart.showValues;\r\n      decoration.showTiles = options.chart.showTiles;\r\n      decoration.selectedTiles = options.chart.selectedTiles;\r\n      decoration.interactive = options.chart.interactive;\r\n      decoration.defaultFill = options.chart.defaultFill;\r\n      decoration.defaultFillOpacity = options.chart.defaultFillOpacity;\r\n      decoration.defaultStroke = options.chart.defaultStroke;\r\n      decoration.defaultStrokeWidth = options.chart.defaultStrokeWidth;\r\n      decoration.defaultStrokeOpacity = options.chart.defaultStrokeOpacity;\r\n      decoration.selectedFillOpacity = options.chart.selectedFillOpacity;\r\n      decoration.selectedStrokeWidth = options.chart.selectedStrokeWidth;\r\n      decoration.boundary = options.chart.boundary;\r\n      return decoration;\r\n    }\r\n  };\r\n}]);\r\n\r\n"],"sourceRoot":"/source/"}