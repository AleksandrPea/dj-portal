{"version":3,"sources":["v2.dm-ds-history/widget.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,kBAAkB,UAAU,KAAK,EAAE,OAAO,OAAO,IAAI,aAAa,IAAI,aAAa;;AAEvF,IAJO,UAAO,gBAAA,QAAM;;AAMpB,QALO;;AAOP,QANO;;AAQP,QAPO;;;AAGP,IAAI,IAAI,QAAQ,OAAO,gCAAgC,CAAC,kBAAiB,WAAU,gBAAe,SAAQ;AACxG,EAAE,WAAW,qKAAkC,UAAU,QAAQ,OAAO,MAAM,cAC5E,aAAa,mBAAmB,SAAS,YAAW,QAAQ,MAAM,MAAM;;EAGxE,IAAM,eAAe,IAAI,aAAa;EACtC,OAAO,SAAS;EAChB,OAAO,UAAU;EACjB,OAAO,MAAM;;EAIb,OAAO,aAAa,KAAK;EACzB,OAAO,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;EA0Bb,OAAO,SAAS;;;;;;;;;;;;;;;EAkBhB,IAAI,YAAY,QACb,OAAO,YAAM;IACZ,QAAQ,IAAG,YAAW,OAAO,OAAO,eAAY;IAChD,OAAO,QAAQ,OAAO,OAAO;;IAE7B,OAAO,cAAc,OAAQ,OAAO,cAAe,OAAO,OAAO,YAAY,MAAM,OAAO;;IAE1F,oBAAoB,gBAAgB;MAClC,SAAS,OAAO,OAAO;MACvB,QAAQ;;;IAGV,oBAAoB,aAClB,OAAO,YAAY,IAAI,UAAC,MAAQ;MAC9B,OAAO;QACH,SAAS,OAAO,OAAO;QACvB,UAAU,KAAK;QACf,QAAQ;QACR,MAAM;;;;IAMd,OAAO,cAAc,OAAQ,OAAO,cAAe,OAAO,OAAO,YAAY,MAAM,OAAO;;IAE1F,oBAAoB,gBAAgB;MAClC,SAAS,OAAO,OAAO;MACvB,QAAQ;;;IAGV,oBAAoB,aAClB,OAAO,YAAY,IAAI,UAAC,MAAQ;MAC9B,OAAO;QACH,SAAS,OAAO,OAAO;QACvB,UAAU,KAAK;QACf,QAAQ;QACR,MAAM;;;KAOf,QAAQ,cAAc,UAAC,KAAK,OAAU;IACrC,QAAQ,IAAI,mBAAmB;IAC/B,OAAO,KAAK;IACZ,OAAO,UAAU;IACjB,IAAG,OAAO,IAAG;MACX,KAAK,IAAI,0BAAwB,OAAO,GAAG,QAAQ,IAChD,QAAQ,UAAS,MAAK;QACrB,OAAO,UAAU;;;KAKxB,UAAU,YAAM,IAKhB,QAAQ,YAAM;IACb,QAAQ,IAAI;;;;;oHAbgG","file":"v2.dm-ds-history/widget.js","sourcesContent":["import angular from 'angular';\r\nimport 'dictionary';\r\nimport 'ngReact';\r\nimport 'custom-react-directives';\r\n\r\n// console.log(\"REACT\",React);\r\nlet m = angular.module('app.widgets.v2.dm-ds-history', ['app.dictionary','app.dps','ngFileUpload','react','custom-react-directives'])\r\n  m.controller('DataManagerDSHistoryController', function ($scope, $http, $dps, EventEmitter, \r\n    APIProvider, pageSubscriptions, $lookup, $translate,$modal, user, i18n) {\r\n    \r\n\r\n    const eventEmitter = new EventEmitter($scope);\r\n    $scope.lookup = $lookup;\r\n    $scope.tagList = [];\r\n    $scope.key = undefined; \r\n\r\n\r\n   \r\n    $scope.formatDate = i18n.formatDate;\r\n    $scope.dps = $dps;\r\n    \r\n    // $scope.download = function(item){\r\n    //   item.download = true;\r\n    //  // $http.get(\"./api/dataset/download/\"+item.dataset.id)\r\n    //   $dps.get(\"/api/dataset/download/\"+item.dataset.id)\r\n    //     .success(function(){\r\n    //       item.download = false;\r\n    //     })\r\n    // }\r\n\r\n    // $scope.selectSource = function(key){\r\n    //   console.log(\"Select Source\")\r\n    //   eventEmitter.emit('setLookupKey', key,\"#Datasource\");\r\n    //   let query = [{\"dataset.source\":[{equals:key}]}];\r\n    //   eventEmitter.emit('searchQuery', query);\r\n    // }\r\n\r\n    // $scope.selectTopic = function(key){\r\n    //   console.log(\"Select Topic\")\r\n    //   eventEmitter.emit('setLookupKey', key, \"#Topic\");\r\n    //   let query = [{\"dataset.topics\":[{includes:key}]}];\r\n    //   eventEmitter.emit('searchQuery', query);\r\n    // }\r\n\r\n    \r\n    $scope.lookup = $lookup;\r\n   \r\n\r\n    // var prepareTopics = function(topics){\r\n    //   var simple_topics = [];\r\n    //   topics = (topics.forEach) ? topics : [topics];\r\n    //   topics.forEach(function(item){\r\n    //     item.split(\"/\").forEach(function(t){\r\n    //       if(simple_topics.filter(function(s){return s === t}).length === 0){simple_topics.push(t)}\r\n    //     });\r\n    //   })\r\n    //   return simple_topics;\r\n    // }\r\n\r\n    // $scope.prepareTopics = prepareTopics;\r\n\r\n    \r\n    \r\n    new APIProvider($scope)\r\n      .config(() => {\r\n        console.log(`widget ${$scope.widget.instanceName} is (re)configuring...`);\r\n        $scope.title = $scope.widget.title;\r\n        \r\n        $scope.s_listeners = ($scope.widget.s_listeners) ? $scope.widget.s_listeners.split(\",\") : [];\r\n        \r\n        pageSubscriptions().removeListeners({\r\n          emitter: $scope.widget.instanceName,\r\n          signal: \"searchQuery\"\r\n        })\r\n\r\n        pageSubscriptions().addListeners(\r\n          $scope.s_listeners.map((item) =>{\r\n            return {\r\n                emitter: $scope.widget.instanceName,\r\n                receiver: item.trim(),\r\n                signal: \"searchQuery\",\r\n                slot: \"searchQuery\"\r\n            }\r\n          })\r\n        );\r\n        \r\n\r\n        $scope.l_listeners = ($scope.widget.l_listeners) ? $scope.widget.l_listeners.split(\",\") : [];\r\n        \r\n        pageSubscriptions().removeListeners({\r\n          emitter: $scope.widget.instanceName,\r\n          signal: \"setLookupKey\"\r\n        })\r\n        \r\n        pageSubscriptions().addListeners(\r\n          $scope.l_listeners.map((item) =>{\r\n            return {\r\n                emitter: $scope.widget.instanceName,\r\n                receiver: item.trim(),\r\n                signal: \"setLookupKey\",\r\n                slot: \"setLookupKey\"\r\n            }\r\n          })\r\n        );\r\n       \r\n      })\r\n\r\n      .provide('setDataSet', (evt, value) => {\r\n        console.log(\"DataSet History\", value)\r\n        $scope.ds = value;\r\n        $scope.commits = undefined;\r\n        if($scope.ds){\r\n          $dps.get(\"/api/dataset/commits/\"+$scope.ds.dataset.id)\r\n            .success(function(data){\r\n              $scope.commits = data;\r\n            })\r\n        }  \r\n      })\r\n\r\n      .translate(() => { \r\n        // if($scope.ds)\r\n        //$scope.ds.dataset.$periodicity = $translate.instant('WIDGET.V2.DM-DS-DESCRIPTION.'+$scope.ds.dataset.periodicity); \r\n      })\r\n\r\n      .removal(() => {\r\n        console.log('Dataset History widget is destroyed');\r\n      });\r\n  })\r\n\r\n\r\n\r\n"],"sourceRoot":"/source/"}