{"version":3,"sources":["dm-search-result/widget.js"],"names":[],"mappings":"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","file":"dm-search-result/widget.js","sourcesContent":["import angular from 'angular';\r\nimport 'dictionary';\r\nimport 'ngReact';\r\nimport 'custom-react-directives';\r\n\r\n// console.log(\"REACT\",React);\r\nlet m = angular.module('app.widgets.dm-search-result', ['app.dictionary','ngFileUpload','react','custom-react-directives'])\r\n  m.controller('DataManagerSearchResultController', function ($scope, $http, EventEmitter, \r\n    APIProvider, pageSubscriptions, $lookup, $translate,$modal, user) {\r\n    \r\n\r\n    const eventEmitter = new EventEmitter($scope);\r\n    $scope.lookup = $lookup;\r\n    $scope.breadcrums = [];\r\n    $scope.tagList = [];\r\n    $scope.user = user;\r\n    $scope.total = 0;\r\n    $scope.table = undefined;\r\n    \r\n    $scope.key = undefined; \r\n\r\n\r\n    var formatDate = function(date){\r\n      var locale = $translate.use() || \"en\";\r\n      date = new Date(date);\r\n      date = date.toLocaleString(locale,\r\n        { year: 'numeric',  \r\n          month: 'long',  \r\n          day: 'numeric', \r\n          hour: 'numeric',  \r\n          minute: 'numeric',\r\n          second: 'numeric'\r\n        })\r\n      return date;\r\n    }\r\n\r\n     $scope.formatDate = formatDate;\r\n\r\n    // var addListener = function(listener){\r\n    //     var subscriptions = pageSubscriptions();\r\n    //     for (var i in subscriptions) {\r\n    //       if (subscriptions[i].emitter === listener.emitter \r\n    //         && subscriptions[i].receiver === listener.receiver\r\n    //         && subscriptions[i].signal === listener.signal\r\n    //         && subscriptions[i].slot === listener.slot\r\n    //         ) {\r\n    //         return;\r\n    //       }\r\n    //     }\r\n    //     subscriptions.push(listener);\r\n    //   };\r\n      \r\n    // var removeListener = function(listener){\r\n    //     var subscriptions = pageSubscriptions();\r\n    //     for (var i in subscriptions) {\r\n    //       if (subscriptions[i].emitter === listener.emitter \r\n    //         && subscriptions[i].receiver === listener.receiver\r\n    //         && subscriptions[i].signal === listener.signal\r\n    //         && subscriptions[i].slot === listener.slot\r\n    //         ) {\r\n    //         subscriptions.splice(i, 1);\r\n    //         return\r\n    //       }\r\n    //     }\r\n    //   };\r\n\r\n    var searchDatasets = function(query){\r\n          if(query){\r\n            $scope.total = 0;\r\n            $scope.query = query;\r\n            var status = (user.isOwner || user.isCollaborator) ? \"private\" : \"public\";\r\n            $http.post(\"./api/metadata/items\", {\"query\":query, \"status\":status}).success(\r\n              function(resp){\r\n                $scope.result = resp;\r\n                if(!$scope.result.forEach){\r\n                  $scope.query = undefined;\r\n\r\n                  return;\r\n                } \r\n                $scope.result.forEach((item) => {item.collapsed=false});\r\n                $scope.total = $scope.result.length;\r\n                if(resp.length == 0){\r\n                   eventEmitter.emit(\"slaveVisibility\",true);\r\n                 }else{\r\n                   eventEmitter.emit(\"slaveVisibility\",false);\r\n                 }\r\n            });\r\n          }\r\n    }\r\n\r\n    $scope.download = function(item){\r\n      item.download = true;\r\n      $http.get(\"./api/dataset/download/\"+item.dataset.id)\r\n        .success(function(){\r\n          item.download = false;\r\n        })\r\n    }\r\n\r\n    $scope.selectSource = function(key){\r\n      eventEmitter.emit('setLookupKey', key);\r\n      let query = [{\"dataset.source\":[{equals:key}]}];\r\n      searchDatasets(query);\r\n    }\r\n\r\n    $scope.selectTopic = function(key){\r\n      eventEmitter.emit('setLookupKey', key);\r\n      let query = [{\"dataset.topics\":[{includes:key}]}];\r\n      searchDatasets(query);\r\n    }\r\n\r\n    $scope.lookup = $lookup;\r\n   \r\n\r\n    var prepareTopics = function(topics){\r\n      var simple_topics = [];\r\n      topics = (topics.forEach) ? topics : [topics];\r\n      topics.forEach(function(item){\r\n        item.split(\"/\").forEach(function(t){\r\n          if(simple_topics.filter(function(s){return s === t}).length === 0){simple_topics.push(t)}\r\n        });\r\n      })\r\n      return simple_topics;\r\n    }\r\n\r\n    $scope.prepareTopics = prepareTopics;\r\n\r\n    \r\n    $scope.openQueryDialog = function(item){\r\n      $modal.open({\r\n        templateUrl: \"./widgets/dm-search-result/query-modal.html\",\r\n        controller: 'QueryDialogController',\r\n        backdrop: 'static',\r\n        resolve: {\r\n          item() {return item },\r\n          prepareTopics() {return prepareTopics},\r\n          table() {return $scope.table},\r\n          formatDate() { return formatDate}\r\n        }  \r\n      }).result.then(\r\n        () => {\r\n          // console.log(\"Close Query DIALOG\")\r\n          if(item.tableID){\r\n            $http.get(\"./api/table/delete/\"+item.tableID)\r\n              .success(function(){\r\n                item.tableID = undefined;\r\n              });\r\n          }\r\n        },\r\n        () => {\r\n          // console.log(\"Cancel Query DIALOG\",resp)\r\n          // console.log(item.tableID)\r\n          if(item.tableID){\r\n            \r\n            $http.get(\"./api/table/delete/\"+item.tableID)\r\n              .success(function(){\r\n                item.tableID = undefined;\r\n              });\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n\r\n     $scope.openManageDialog = function(item){\r\n      $modal.open({\r\n        templateUrl: \"./widgets/dm-search-result/manage-modal.html\",\r\n        controller: 'ManageDialogController',\r\n        backdrop: 'static',\r\n        resolve: {\r\n          item() {return item },\r\n          prepareTopics() {return prepareTopics},\r\n          formatDate() { return formatDate}\r\n        }  \r\n      }).result.then(\r\n            () => {\r\n               // console.log(\"Close MANAGE DIALOG\",item);\r\n               eventEmitter.emit('refresh');\r\n            },\r\n            () => {\r\n               // console.log(\"Cancel MANAGE DIALOG\",item);\r\n               eventEmitter.emit('refresh');\r\n            }\r\n      );\r\n    }\r\n\r\n\r\n    new APIProvider($scope)\r\n      .config(() => {\r\n        console.log(`widget ${$scope.widget.instanceName} is (re)configuring...`);\r\n        $scope.title = $scope.widget.title;\r\n        $scope.icon_class = $scope.widget.icon_class;\r\n        // $scope.query = $scope.widget.query || $scope.query;\r\n        // searchDatasets($scope.query);\r\n        // \r\n        if($scope.total == 0){\r\n          eventEmitter.emit(\"slaveVisibility\",true);\r\n        }else{\r\n          eventEmitter.emit(\"slaveVisibility\",false);\r\n        }\r\n\r\n        if($scope.key){\r\n          $scope.object = $lookup($scope.key);\r\n        }else{\r\n          $scope.object = undefined;\r\n        }\r\n\r\n        $scope.listeners = ($scope.widget.listeners) ? $scope.widget.listeners.split(\",\") : [];\r\n        \r\n        pageSubscriptions().removeListeners({\r\n          emitter: $scope.widget.instanceName,\r\n          signal: \"setLookupKey\"\r\n        })\r\n\r\n        pageSubscriptions().addListeners(\r\n          $scope.listeners.map((item) =>{\r\n            return {\r\n                emitter: $scope.widget.instanceName,\r\n                receiver: item.trim(),\r\n                signal: \"setLookupKey\",\r\n                slot: \"setLookupKey\"\r\n            }\r\n          })\r\n        );\r\n        \r\n\r\n        $scope.rlisteners = ($scope.widget.rlisteners) ? $scope.widget.rlisteners.split(\",\") : [];\r\n        \r\n        pageSubscriptions().removeListeners({\r\n          emitter: $scope.widget.instanceName,\r\n          signal: \"refresh\"\r\n        })\r\n        \r\n        pageSubscriptions().addListeners(\r\n          $scope.rlisteners.map((item) =>{\r\n            return {\r\n                emitter: $scope.widget.instanceName,\r\n                receiver: item.trim(),\r\n                signal: \"refresh\",\r\n                slot: \"refresh\"\r\n            }\r\n          })\r\n        );\r\n       \r\n      })\r\n      .provide('searchQuery', (evt, value) => {\r\n        $scope.query = value;\r\n        // console.log(\"SEARCH\",evt, $scope.query)\r\n        searchDatasets(value);\r\n      })\r\n      .provide('refresh', (evt) => {\r\n        // console.log(\"REFRESH\", $scope.query);\r\n        searchDatasets($scope.query);\r\n      })\r\n\r\n      .provide('setLookupKey', (evt, value) => {\r\n        // console.log(\"LOOKUP\",evt,value)\r\n        $scope.key = value;\r\n        let tmp = $lookup($scope.key);\r\n        if($scope.key == tmp || tmp.en){\r\n          // $scope.object = undefined;\r\n          $scope.object = {label:$scope.key};\r\n        }else{\r\n          $scope.object = tmp;\r\n        }\r\n      })\r\n      \r\n      .removal(() => {\r\n        console.log('Find Result widget is destroyed');\r\n      });\r\n  })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nm.controller(\"ManageDialogController\", function ($scope, $modalInstance,$http, $upload, $timeout,\r\n                                                item, prepareTopics,formatDate, $lookup,\r\n                                                $translate, user, confirm){\r\n  \r\n  $scope.item = item;\r\n  $scope.lookup = $lookup;\r\n  $scope.prepareTopics = prepareTopics;\r\n  $scope.user = user;\r\n  $scope.upload_process = false;\r\n  \r\n  $scope.formatDate = formatDate;\r\n\r\n  $scope.fileSelected = function(f,e){\r\n    var files = f;\r\n    \r\n    $scope.formUpload = false;\r\n    if (files != null) {\r\n        $scope.commits = undefined;\r\n        for (var i = 0; i < files.length; i++) {\r\n          $scope.errorMsg = null;\r\n          (function(file) {\r\n              $scope.upload(file);\r\n          })(files[i]);\r\n        }\r\n    }\r\n  };\r\n\r\n  $scope.upload = function (file) {\r\n    $scope.upload_process = true;\r\n    $upload.upload({\r\n      url: './api/dataset/update',\r\n      method: 'POST',\r\n      headers: {\r\n        'my-header' : 'my-header-value'\r\n      },\r\n      file: file,\r\n    })\r\n    .then(function(response) {\r\n        $scope.upload_process = false;\r\n        $lookup.reload();\r\n        $scope.item = response.data.metadata;\r\n        $timeout(function() {\r\n        $scope.getCommitList();\r\n      });\r\n    });\r\n  }\r\n  \r\n\r\n  $scope.headStyle = function(f){\r\n    return (f)?{\"font-weight\": 900, \"color\":\"darkorange\"}:{}\r\n  }\r\n  \r\n  $scope.headRowStyle = function(f){\r\n    return (f)?{\r\n      \"background-color\":\"rgba(160, 211, 232, 0.31)\",\r\n      \"font-size\":\"smaller\",\r\n      \"font-weight\": \"bold\",\r\n      \"padding\":\"0.1rem 0.5rem\"\r\n    }\r\n    :{\r\n      \"font-size\":\"smaller\",\r\n      \"color\":\"orangered\",\r\n      \"padding\":\"0.1rem 0.5rem\"\r\n    }\r\n  }\r\n\r\n  $scope.upToHEAD = function(c){\r\n    $scope.commits = undefined;\r\n    $http.get(\"./api/commit/head/\"+c.metadata.dataset.commit.id)\r\n      .success(function(resp){\r\n        $scope.item = resp.metadata;\r\n        $scope.getCommitList();        \r\n      })\r\n\r\n  }\r\n\r\n  $scope.setCommitStatus = function(commitID,status){\r\n    $http.get(\"./api/commit/\"+status+\"/\"+commitID)\r\n      .success(function(resp){\r\n        $scope.item = resp.metadata;\r\n        $scope.getCommitList();\r\n      })\r\n  }\r\n\r\n  $scope.deleteCommit = function(c){\r\n    $scope.commits = undefined;\r\n    $http.get(\"./api/commit/delete/\"+c.metadata.dataset.commit.id)\r\n      .success(function(){\r\n        $scope.getCommitList();        \r\n      })\r\n  }\r\n\r\n  $scope.deleteDataset = function(c){\r\n    confirm(\"You will remove the dataset \"+c.metadata.dataset.id+\". You can download it before removing. Are you sure?\")\r\n      .then(function(){\r\n        $scope.item = undefined;\r\n        $scope.deleteCommit(c);\r\n      })\r\n  }\r\n\r\n  $scope.selectDataset = function(d){\r\n    $scope.item = d;\r\n    $scope.getCommitList();\r\n  }\r\n\r\n  $scope.showDatasetList = function(){\r\n    $scope.item = undefined;\r\n    $scope.getCommitList();\r\n  }\r\n  \r\n $scope.getAllDatasets = function(){\r\n    $http.post(\"./api/metadata/items\",{status:\"private\"})\r\n      .success(function(resp){\r\n        $scope.datasets = resp; \r\n      })\r\n  }\r\n\r\n  $scope.getCommitList = function(){\r\n    if($scope.item){\r\n      $http.get(\"./api/dataset/commits/\"+$scope.item.dataset.id)\r\n        .success(function(data){\r\n          $scope.commits = data;\r\n        })\r\n    }else{\r\n      $scope.getAllDatasets();\r\n    }    \r\n  };\r\n\r\n \r\n\r\n  $scope.getCommitList();\r\n  \r\n  $scope.close = function(){\r\n    $modalInstance.close();\r\n  };\r\n})\r\n\r\n\r\n// let MyTable = React.createClass( {\r\n\r\n//   propTypes : {\r\n//     table: React.PropTypes.object.isRequired\r\n//   },\r\n\r\n//   getDefaultProps: function() {\r\n//     return { table: { header: [], body:[]} };\r\n//   },\r\n\r\n//   render: function() {\r\n//     let headerLabelStyle = {\r\n//       textAlign: \"center\",\r\n//       fontStretch: \"ultra-condensed\",\r\n//       fontSize: \"medium\",\r\n//       color: \"#008CBA\",\r\n//       padding: \"0.3em 1em\",\r\n//       border: \"solid 1px #DDDDDD\"\r\n\r\n//     }\r\n    \r\n//     let headerValueStyle = {\r\n//       textAlign: \"center\",\r\n//       fontStretch: \"ultra-condensed\",\r\n//       fontSize: \"small\",\r\n//       fontWeight: \"normal\",\r\n//       color: \"#008CBA\",\r\n//       padding: \"0.3em 1em\",\r\n//       border: \"solid 1px #DDDDDD\"\r\n\r\n//     } \r\n\r\n//     let valueStyle = {\r\n//       fontStretch: \"ultra-condensed\",\r\n//       fontSize: \"small\",\r\n//       padding: \"0.3em 1em\",\r\n//       textAlign: \"right\",\r\n//       border: \"solid 1px #DDDDDD\"\r\n\r\n//     } \r\n\r\n//     if (angular.isUndefined(this.props.table)) return <div/>; \r\n//     if (angular.isUndefined(this.props.table.metadata)) return <div/>; \r\n    \r\n    \r\n//     function getHeader(table){\r\n//       let headRows = [];\r\n\r\n//       let rowspan = function(r){return {__html: \"rowspan=\"+r}};\r\n//       let colspan = function(c){return {__html: \"colspan=\"+c}};\r\n\r\n//       // console.log(rowspan(table.header[0].metadata.length*2))\r\n//       // console.log(colspan(table.header.length))\r\n\r\n\r\n//       for(let i=0; i < table.header[0].metadata.length*2; i++){\r\n//         let headCells = [];\r\n//         if(i==0){\r\n//           headCells =\r\n//               table.body[0].metadata.map((item,index)=>\r\n//                 // React.DOM.th({key:\"mth\"+i+\"_\"+index, style:headerLabelStyle,rowSpan:table.header[0].metadata.length*2},item.dimensionLabel)\r\n\r\n//                 <th key={\"mth\"+i+\"_\"+index} \r\n//                     style={headerLabelStyle} \r\n//                     rowSpan={table.header[0].metadata.length*2}>\r\n//                   {item.dimensionLabel}\r\n//                 </th>\r\n//               )\r\n//         }\r\n        \r\n//         if((i % 2) == 0){\r\n//           headCells.push(\r\n//             (() =>\r\n//               <th key={\"th\"+i} style={headerLabelStyle} colSpan={table.header.length}>\r\n//                 {table.header[0].metadata[Math.floor(i/2)].dimensionLabel}\r\n//               </th>\r\n//             )()\r\n//           )\r\n//         }\r\n\r\n//         if((i % 2) == 1){\r\n//           headCells = table.header.map((item,index)=>\r\n//            <th key={\"vth\"+index+\"_\"+i} style={headerValueStyle}>\r\n//               {item.metadata[Math.floor(i/2)].label}\r\n//             </th>\r\n          \r\n//           )\r\n//         }\r\n\r\n//         headRows.push(React.DOM.tr({key:\"headtr\"+i},headCells))\r\n//       }\r\n//       return headRows;\r\n//     }\r\n\r\n//     function getValues(row){\r\n//       let meta = row.metadata.map((m,i) => \r\n//         <td key={\"m\"+i} style={headerValueStyle} >{m.label}</td>);\r\n\r\n//       let values = row.value.map((v,i) => \r\n//         <td key={\"v\"+i} style={valueStyle}>{(v == null) ? \"-\" : v}</td>);\r\n//       return meta.concat(values); \r\n//     }\r\n\r\n//     // console.log(this.props);\r\n//     let rows = this.props.table.body.map( \r\n//                   function(row, i) {\r\n//                     return React.DOM.tr( { key: i }, getValues(row))\r\n//                   })  \r\n//     var head =\r\n//     <thead key=\"head\">{getHeader(this.props.table)}</thead>\r\n//     // React.DOM.thead({key:\"head\"},getHeader(this.props.table));\r\n    \r\n//     var body = \r\n//      <tbody key=\"body\">{rows}</tbody>\r\n    \r\n//     // React.DOM.tbody({key:\"body\"},rows); \r\n    \r\n//     return <table key=\"table\" border=\"1\">{[head,body]}</table>\r\n\r\n//     // React.DOM.table({key:\"table\", border:\"1\"},[head,body]);\r\n//   }\r\n// })\r\n\r\n// m.value( \"MyTable\",MyTable)\r\n\r\n// m.directive( 'myTable', function( reactDirective ) {\r\n//   return reactDirective( 'MyTable' );\r\n// })\r\n\r\n\r\n\r\n\r\n\r\nm.controller(\"QueryDialogController\", function ($scope, $modalInstance,$http, \r\n                                                item, prepareTopics, table, formatDate, \r\n                                                $lookup, $translate,$q){\r\n  \r\n  $scope.lookup = $lookup;\r\n  $scope.prepareTopics = prepareTopics;\r\n  $scope.item = item;\r\n  $scope.floor = Math.floor;\r\n  $scope.formatDate = formatDate;\r\n  $scope.table = table;\r\n  $scope.pending = false;\r\n  $scope.canceler = undefined;\r\n \r\n\r\n  $scope.getItemStyle = function(obj){\r\n    if(obj.selected){\r\n      return {\r\n        \"color\":\"#FFFFFF\",\r\n        \"background-color\":\"#008CBA\"\r\n      }\r\n    }else{\r\n      return {\r\n        \"color\":\"#008CBA\",\r\n        \"background-color\":\"#FFFFFF\"\r\n      }\r\n    }\r\n  } \r\n\r\n  var genSelectionString = function(dim){\r\n    let buf = [];\r\n    // let s = \"\";\r\n    dim.selectionString = \"\";\r\n\r\n    dim.values.forEach(function(item){\r\n      if(item.selected){\r\n        buf.push(item)\r\n      }\r\n    })\r\n    if(buf.length === 0){\r\n      dim.selectionString = \"\";\r\n    }\r\n\r\n    for(let i in buf){\r\n      let k = ($lookup(buf[i].label).label)?$lookup(buf[i].label).label:buf[i].label;\r\n      $translate(k).then(function(translation){\r\n        dim.selectionString+=translation+\", \";\r\n        if(dim.selectionString.length >=45){\r\n          dim.selectionString = dim.selectionString.substring(0,40)+\"... (\"+buf.length+\" items) \"\r\n        }\r\n      })\r\n    }\r\n}\r\n\r\n  $scope.tryGetTable = function(){\r\n    // console.log($scope.item);\r\n    $scope.requestComplete = $scope.testQuery($scope.item); \r\n    if($scope.requestComplete){\r\n     $scope.request = $scope.makeRequest($scope.item);\r\n     \r\n    if($scope.canceler){\r\n      $scope.canceler.resolve();\r\n    }\r\n                                                  \r\n    $scope.canceler = $q.defer();\r\n\r\n     if($scope.table){\r\n        $http.get(\"./api/table/delete/\"+$scope.table.id)\r\n          .success(function(){\r\n            $scope.table = undefined; \r\n            item.tableID = undefined;\r\n            \r\n            $http.post(\"./api/dataset/query\",$scope.request,{timeout:$scope.canceler.promise})\r\n              .success(function(resp){\r\n              $scope.table = resp;\r\n              item.tableID = resp.id;\r\n              // $scope.canceler.resolve();\r\n              // $scope.canceler = undefined;\r\n            })\r\n          }) \r\n     }else{\r\n        $scope.table = undefined;\r\n        item.tableID = undefined;\r\n        $http.post(\"./api/dataset/query\",$scope.request,{timeout:$scope.canceler.promise})\r\n          .success(function(resp){\r\n          $scope.table = resp;\r\n          item.tableID = resp.id;\r\n        })\r\n     }\r\n     \r\n    }else{\r\n      if($scope.table){\r\n        $http.get(\"./api/table/delete/\"+$scope.table.id)\r\n          .success(function(){\r\n            $scope.table = undefined;\r\n            item.tableID = undefined;\r\n        });\r\n      }      \r\n    }\r\n  };\r\n\r\n\r\n  $scope.range = function(min,max){\r\n      var result = [];\r\n      for(var i=min; i<=max; i++) result.push(i)\r\n  \r\n      return result;  \r\n  };\r\n\r\n  $scope. getValue = function(value){\r\n      return (value == null) ? \"-\" : value;\r\n  };\r\n\r\n  $scope.select= function(dim,item){\r\n    item.selected = item.selected || false;\r\n    item.selected = !item.selected;\r\n    genSelectionString(dim);\r\n    $scope.tryGetTable();\r\n  }\r\n\r\n  $scope.selectAll= function(dim){\r\n    dim.values.forEach(function(item){\r\n      item.selected = true;\r\n    })\r\n    genSelectionString(dim);\r\n    $scope.tryGetTable();\r\n  }\r\n\r\n  $scope.clear= function(dim){\r\n    dim.values.forEach(function(item){\r\n      item.selected = false;\r\n    })\r\n    genSelectionString(dim);\r\n    $scope.tryGetTable();\r\n  }\r\n  \r\n  $scope.reverse= function(dim){\r\n    dim.values.forEach(function(item){\r\n      item.selected = !item.selected;\r\n    })\r\n    genSelectionString(dim);\r\n    $scope.tryGetTable();\r\n  }\r\n\r\n  $scope.setRole = function(dim,role){\r\n    dim.role = role;\r\n    $scope.tryGetTable();   \r\n  }\r\n\r\n\r\n  $scope.makeRequest = function(item){\r\n    let req = {};\r\n    req.commitID = item.dataset.commit.id;\r\n    req.query = [];\r\n    req.locale = $translate.use();\r\n    for(let i in item.dimension){\r\n      let d = item.dimension[i];\r\n      let collection = getSelectedItems(d);\r\n      if (collection.length == d.values.length){\r\n        collection = [];\r\n      }else{\r\n        collection = collection.map(function(item){\r\n          return item.id;\r\n        })\r\n      }\r\n      req.query.push(\r\n          {\r\n            \"dimension\" : i,\r\n            \"role\" : d.role,\r\n            \"collection\" : collection \r\n          }\r\n      )\r\n    }\r\n    return req   \r\n  };\r\n\r\n    var getSelectedItems = function(d){\r\n        let buf = [];\r\n        d.values.forEach(function(item){\r\n          if(item.selected){\r\n            buf.push(item)\r\n          }\r\n        })\r\n        return buf;\r\n    }\r\n\r\n    $scope.testQuery = function(item){\r\n      let columnsAvailable = false;\r\n      let rowsAvailable = false;\r\n      let splitColumnsAvailable = true;\r\n      let splitRowsAvailable = true;\r\n      for(let i in item.dimension){\r\n        let d = item.dimension[i];\r\n        if(d.role == \"Columns\" && getSelectedItems(d).length>0) columnsAvailable = true;\r\n        if(d.role == \"Rows\" && getSelectedItems(d).length>0) rowsAvailable = true;\r\n        if(d.role == \"Split Columns\"){\r\n          if(getSelectedItems(d).length>0){\r\n            splitColumnsAvailable &= true;\r\n          }else{\r\n            splitColumnsAvailable &= false;\r\n          }\r\n        }  \r\n        if(d.role == \"Split Rows\"){\r\n          if (getSelectedItems(d).length>0){ \r\n            splitRowsAvailable &= true;\r\n          }else{\r\n            splitRowsAvailable &= false;\r\n          }\r\n        }\r\n      }\r\n      return columnsAvailable && rowsAvailable && splitColumnsAvailable && splitRowsAvailable;\r\n    };\r\n\r\n\r\n\r\n  $scope.tryGetTable();   \r\n  \r\n\r\n  $scope.close = function(){\r\n    // console.log(\"Close\", $scope.table);\r\n    if($scope.table){\r\n        $http.get(\"./api/table/delete/\"+$scope.table.id)\r\n          .success(function(){\r\n            $scope.table = undefined;\r\n            item.tableID = undefined;\r\n          });\r\n    }        \r\n    $modalInstance.close();\r\n  };\r\n\r\n  $scope.cancel = function(){\r\n    // console.log(\"Cancel\", $scope.table);\r\n    if($scope.table){\r\n          $http.get(\"./api/table/delete/\"+$scope.table.id)\r\n            .success(function(){\r\n              $scope.table = undefined;\r\n              item.tableID = undefined;\r\n            });\r\n    }\r\n     $modalInstance.dismiss();\r\n  };\r\n})\r\n\r\n;\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":"/source/"}