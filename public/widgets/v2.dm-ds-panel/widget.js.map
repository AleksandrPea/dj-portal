{"version":3,"sources":["v2.dm-ds-panel/widget.js"],"names":[],"mappings":"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","file":"v2.dm-ds-panel/widget.js","sourcesContent":["import angular from 'angular';\r\nimport 'dictionary';\r\nimport 'ngReact';\r\nimport 'custom-react-directives';\r\n\r\n// console.log(\"REACT\",React);\r\nlet m = angular.module('app.widgets.v2.dm-ds-panel', ['app.dictionary','app.dps','ngFileUpload','react','custom-react-directives'])\r\n  m.controller('DataManagerSearchResultController', function ($scope, $http, $dps, EventEmitter, \r\n    APIProvider, pageSubscriptions, $lookup, $translate,$modal, user, i18n) {\r\n    \r\n\r\n    const eventEmitter = new EventEmitter($scope);\r\n    $scope.lookup = $lookup;\r\n    $scope.total = 0;\r\n    $scope.key = undefined; \r\n    $scope.formatDate = i18n.formatDate;\r\n\r\n    var searchDatasets = function(query){\r\n\r\n          if(query){\r\n            \r\n            $scope.total = 0;\r\n            $scope.query = query;\r\n            var status = \"public\";//(user.isOwner || user.isCollaborator) ? \"private\" : \"public\";\r\n            // $http.post(\"./api/metadata/items\", {\"query\":query, \"status\":status})\r\n            $dps.post(\"/api/metadata/items\", {\"query\":query, \"status\":status})\r\n            .success(\r\n              function(resp){\r\n                $scope.result = resp;\r\n\r\n                if(!$scope.result.forEach){\r\n                  $scope.query = undefined;\r\n                  eventEmitter.emit(\"slaveVisibility\",true);\r\n                  return;\r\n                } \r\n                $scope.result.forEach((item) => {item.collapsed=false});\r\n                $scope.total = $scope.result.length;\r\n                if(resp.length == 0){\r\n                   eventEmitter.emit(\"slaveVisibility\",true);\r\n                 }else{\r\n                   eventEmitter.emit(\"slaveVisibility\",false);\r\n                 }\r\n            });\r\n          }\r\n    }\r\n\r\n    $scope.lookup = $lookup;\r\n\r\n   \r\n    $scope.select = function(ds){\r\n          if($scope.selection) $scope.selection.selected = false;\r\n          ds.selected = true;\r\n          $scope.selection = ds; \r\n          eventEmitter.emit(\"setDataSet\",ds);\r\n    }\r\n\r\n    new APIProvider($scope)\r\n      .config(() => {\r\n        console.log(`widget ${$scope.widget.instanceName} is (re)configuring...`);\r\n        $scope.layout = $scope.widget.layout || \"panel\"; \r\n\r\n        if($scope.key){\r\n          $scope.object = $lookup($scope.key);\r\n        }else{\r\n          $scope.object = undefined;\r\n        }\r\n\r\n        $scope.listeners = ($scope.widget.listeners) ? $scope.widget.listeners.split(\",\") : [];\r\n        \r\n        pageSubscriptions().removeListeners({\r\n          emitter: $scope.widget.instanceName,\r\n          signal: \"setLookupKey\"\r\n        })\r\n\r\n        pageSubscriptions().addListeners(\r\n          $scope.listeners.map((item) =>{\r\n            return {\r\n                emitter: $scope.widget.instanceName,\r\n                receiver: item.trim(),\r\n                signal: \"setLookupKey\",\r\n                slot: \"setLookupKey\"\r\n            }\r\n          })\r\n\r\n        );\r\n        \r\n\r\n        $scope.rlisteners = ($scope.widget.rlisteners) ? $scope.widget.rlisteners.split(\",\") : [];\r\n        \r\n        pageSubscriptions().removeListeners({\r\n          emitter: $scope.widget.instanceName,\r\n          signal: \"refresh\"\r\n        })\r\n        \r\n        pageSubscriptions().addListeners(\r\n          $scope.rlisteners.map((item) =>{\r\n            return {\r\n                emitter: $scope.widget.instanceName,\r\n                receiver: item.trim(),\r\n                signal: \"refresh\",\r\n                slot: \"refresh\"\r\n            }\r\n          })\r\n        );\r\n\r\n        $scope.dslisteners = ($scope.widget.dslisteners) ? $scope.widget.dslisteners.split(\",\") : [];\r\n        \r\n        pageSubscriptions().removeListeners({\r\n          emitter: $scope.widget.instanceName,\r\n          signal: \"setDataSet\"\r\n        })\r\n\r\n        pageSubscriptions().addListeners(\r\n          $scope.dslisteners.map((item) =>{\r\n            return {\r\n                emitter: $scope.widget.instanceName,\r\n                receiver: item.trim(),\r\n                signal: \"setDataSet\",\r\n                slot: \"setDataSet\"\r\n            }\r\n          })\r\n        );\r\n        \r\n        if($scope.total == 0){\r\n          eventEmitter.emit(\"slaveVisibility\",true);\r\n        }else{\r\n          eventEmitter.emit(\"slaveVisibility\",false);\r\n        }\r\n        \r\n      })\r\n\r\n      .provide('searchQuery', (evt, value) => {\r\n        // console.log('searchQuery', value);\r\n\r\n\r\n        $scope.query = value;\r\n        if(!$scope.query) return;\r\n        searchDatasets(value);\r\n        // console.log('send setDataSet', value);\r\n        eventEmitter.emit(\"setDataSet\",undefined);\r\n        // console.log('after send setDataSet', value);\r\n      })\r\n      .provide('refresh', (evt) => {\r\n        searchDatasets($scope.query);\r\n      })\r\n      .translate(() => {  eventEmitter.emit(\"slaveVisibility\", $scope.total == 0 )})\r\n\r\n      .removal(() => {\r\n        console.log('Find Result widget is destroyed');\r\n      });\r\n  })\r\n\r\n"],"sourceRoot":"/source/"}