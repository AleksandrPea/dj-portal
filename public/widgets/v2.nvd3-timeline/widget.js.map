{"version":3,"sources":["v2.nvd3-timeline/widget.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,kBAAkB,UAAU,KAAK,EAAE,OAAO,OAAO,IAAI,aAAa,IAAI,aAAa;;AAEvF,IAJO,UAAO,gBAAA,QAAM;;AAMpB,QALO;;AAOP,QANO;;AAQP,QAPO;;AAGP,IAAM,IAAI,QAAQ,OAAO,gCAAgC,CACvD,8BACA,wCACA;;AAQF,EAAE,WAAW,6GAA2B,UACtC,QACA,cACA,qBACA,sBACA,MAAM;;EAEN,QAAQ,IAAI;EACZ,IAAI,aACA,QACE;IACE,QAAQ;;IAER,mBAAmB;;IAEnB,YAAY;IACZ,WAAW;;IAEX,YAAa,SAAA,WAAS,SAAQ;MAC5B,IAAG,CAAC,WAAW,CAAC,QAAQ,MAAI;QAAE,OAAO;OAAM,OAClC,QAAS,OAAO,cAAgB,QAAQ,KAAK,OAAO;;;IAG/D,WAAW,YAAM;MACf,OAAO,OAAO,OAAO,OAAO,aAAa,UAAU,OAAO;MAC1D,OAAO,QAAQ,MAAM,YAAY,KAAK;MACtC,OAAO,WAAW;QACZ,SAAU,QAAQ,KAAK,OAAO,cAAc,OAAO;QACnD,MAAO,QAAQ,KAAK,OAAO;;;;IAInC,oBAAoB,YAAM;MACxB,IAAG,OAAO,OAAO,OAAO,IAAI,SACxB,OAAO,IAAI,QAAQ;;;IAGzB,0BAA0B,YAAM;MAC/B,IAAG,OAAO,OAAO,OAAO,IAAI,SACvB,OAAO,IAAI,QAAQ;;;IAGzB,gBAAgB,YAAM;MACrB,IAAG,OAAO,OAAO,OAAO,IAAI,SACvB,OAAO,IAAI,QAAQ;;;IAGzB,UAAU,YAAM;MACd,OAAO,IAAI,QAAQ;;;IAGrB,oBAAoB,YAAM;MACxB,IAAG,OAAO,OAAO,OAAO,IAAI,SACxB,OAAO,IAAI,QAAQ;;;IAIzB,YAAY,UAAC,MAAS;MACpB,IAAG,CAAC,MAAM,OAAO;;MAEjB,IAAG,CAAC,KAAK,YAAW;QAClB,OAAO,KAAK;;;MAGd,IAAG,CAAC,MAAM,OAAO;;MAEjB,IAAG,CAAC,KAAK,YAAY,OAAO;;MAE5B,OAAO,KAAK;;;IAGd,cAAc,UAAC,MAAS;MACtB,QAAQ,IAAI,gBAAgB;MAC5B,IAAG,CAAC,MAAM,OAAO;;MAEjB,IAAG,CAAC,KAAK,YAAW;QAClB,OAAO,KAAK;;;MAGd,IAAG,CAAC,MAAM,OAAO;;MAEjB,IAAG,CAAC,KAAK,YAAY,OAAO;;MAE5B,OAAQ,KAAK,WAAW,OAAO,UAAC,MAAS;QAAC,OAAO,KAAK,QAAO;;;;IAI/D,cAAc;;MAEZ,oBAAoB,SAAA,mBAAS,MAAK;QAChC,OAAO;;;MAGT,qBAAqB,SAAA,oBAAS,MAAK;QAChC,OAAO;;;MAGV,WAAY,UAAC,MAAS;QACpB,IAAG,CAAC,MAAM,OAAO;QACjB,IAAG,CAAC,KAAK,YAAW;UAClB,OAAO,KAAK;;;QAGd,IAAG,CAAC,MAAM,OAAO;QACjB,IAAG,CAAC,KAAK,MAAM,OAAO;QACtB,IAAG,CAAC,KAAK,KAAK,QAAQ,OAAO;;QAG7B,IAAI,SAAS,QAAQ,KAAK,KAAK,KAAK;;QAEpC,OAAO,QAAQ,UAAS,GAAE,GAAE;UAC1B,EAAE,aAAa;UACf,EAAE,WAAW,OAAO,WAAW,OAAO,EAAE,UAAU;UAClD,EAAE,WAAW,OAAO,aAAa,UAAU,EAAE;;;QAG/C,OAAO;;;;IAKlB","file":"v2.nvd3-timeline/widget.js","sourcesContent":["import angular from 'angular';\r\nimport 'widgets/v2.nvd3-widget/nvd3-widget';\r\nimport 'widgets/v2.nvd3-timeline/wizard';\r\nimport 'widgets/v2.nvd3-timeline/adapter';\r\n\r\n\r\nconst m = angular.module('app.widgets.v2.nvd3-timeline', [\r\n  'app.widgets.v2.nvd3-widget',\r\n  'app.widgets.v2.timeline-chart-wizard',\r\n  'app.widgets.v2.timeline-chart-adapter'\r\n]);\r\n\r\n\r\n\r\n\r\n\r\n\r\nm.controller('Nvd3TimelineChartCtrlV2', function (\r\n  $scope, \r\n  NVD3WidgetV2,\r\n  TimelineChartWizard,\r\n  TimelineChartAdapter,\r\n  i18n) {\r\n \r\n  console.log(\"CREATE CONTROLLER\")\r\n  new NVD3WidgetV2(\r\n      $scope, \r\n        {\r\n          wizard: TimelineChartWizard,\r\n          \r\n          decorationAdapter: TimelineChartAdapter,\r\n          \r\n          optionsURL: \"/widgets/v2.nvd3-timeline/options.json\",\r\n          sampleURL: \"/widgets/v2.nvd3-timeline/sample.json\",\r\n          \r\n          acceptData : function(context){\r\n            if(!context || !context.data) return false;\r\n              return (context.key == \"timeline\") || (context.data.tag == \"timeline\")\r\n           },\r\n\r\n          translate: () => {\r\n            $scope.data = $scope.params.serieAdapter.getSeries($scope.loadedData)\r\n            $scope.options.chart.localeDef = i18n.localeDef();\r\n            $scope.settings = {\r\n                  options : angular.copy($scope.expandOptions($scope.options)), \r\n                  data : angular.copy($scope.data)\r\n            }\r\n          },\r\n\r\n          onBeforeDesignMode: () => {\r\n            if($scope.api && $scope.api.chart())\r\n                $scope.api.chart().destroy();\r\n          },\r\n\r\n          onBeforePresentationMode: () => {\r\n           if($scope.api && $scope.api.chart())\r\n                $scope.api.chart().destroy();\r\n          },\r\n\r\n          onBeforeConfig: () => {\r\n           if($scope.api && $scope.api.chart())\r\n                $scope.api.chart().destroy();\r\n          },\r\n\r\n          onRemove: () => {\r\n            $scope.api.chart().destroy();\r\n          },\r\n          \r\n          onBeforeChangePage: () => {\r\n            if($scope.api && $scope.api.chart())\r\n                $scope.api.chart().destroy();\r\n          },\r\n\r\n\r\n          dictionary: (data) => {\r\n            if(!data) return []\r\n            \r\n            if(!data.dictionary){\r\n              data = data.value;\r\n            }\r\n            \r\n            if(!data) return [];\r\n            \r\n            if(!data.dictionary) return [];\r\n              \r\n            return data.dictionary;\r\n          },\r\n\r\n          translations: (data) => {\r\n            console.log(\"TRANSLATIONS\", data)\r\n            if(!data) return []\r\n            \r\n            if(!data.dictionary){\r\n              data = data.value;\r\n            }\r\n\r\n            if(!data) return [];\r\n            \r\n            if(!data.dictionary) return [];\r\n            \r\n            return  data.dictionary.filter((item) => {return item.type ==\"i18n\"})\r\n          },\r\n\r\n\r\n          serieAdapter: {\r\n            \r\n            getSeriesSelection: function(data){\r\n              return []\r\n            },\r\n\r\n            getObjectsSelection: function(data){\r\n               return []\r\n            },\r\n\r\n            getSeries : (data) => {\r\n              if(!data) return []\r\n              if(!data.dictionary){\r\n                data = data.value;\r\n              }\r\n              \r\n              if(!data) return [];\r\n              if(!data.data) return [];\r\n              if(!data.data.series) return [];\r\n              \r\n              \r\n              var result = angular.copy(data.data.series);\r\n              \r\n              result.forEach(function(d,i){\r\n                d.colorIndex = i;\r\n                d.category = $scope.dictionary.lookup(d.category).label;\r\n                d.category = $scope.translations.translate(d.category)\r\n              })\r\n              \r\n              return result;\r\n          }\r\n        }\r\n      }  \r\n  );\r\n});\r\n"],"sourceRoot":"/source/"}