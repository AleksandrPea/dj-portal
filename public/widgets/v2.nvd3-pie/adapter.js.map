{"version":3,"sources":["v2.nvd3-pie/adapter.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,kBAAkB,UAAU,KAAK,EAAE,OAAO,OAAO,IAAI,aAAa,IAAI,aAAa;;AAEvF,IAJO,UAAO,gBAAA,QAAM;;AAGpB,IAAM,IAAI,QAAQ,OAAO,oCAAoC;;AAE7D,EAAE,QAAQ,mBAAmB,YAAY;;EAEvC,KAAK,gBAAgB,UAAC,WAAU,UAAS,KAAQ;IAC/C,IAAI,OAAO,GAAG,OAAO,IAAI,UAAU;IACnC,SAAS,KAAK,QAAQ,UAAC,GAAM;MAC3B,IAAI,IAAI,UAAU,OAAO,UAAA,GAAC;QAIxB,OAJ4B,EAAE,OAAO,EAAE;SAAO;MAChD,IAAG,GAAE;QACH,EAAE,WAAY,EAAE;;;IAGpB,OAAO;;;EAIV,KAAK,kBAAkB,UAAU,SAAS,YAAY,UAAS,KAAK;IACjE,IAAI,QAAQ,UAAU,eAAe,QAAQ,UAAU,UAAU;MAC/D,QAAQ,MAAM,SAAS,WAAW;MAClC,QAAQ,MAAM,OAAO,WAAW;MAChC,QAAQ,SAAS,OAAO,WAAW;MACnC,QAAQ,QAAQ,OAAO,WAAW;MAClC,QAAQ,MAAM,QAAQ,WAAW;MACjC,QAAQ,MAAM,aAAa,WAAW;MACtC,QAAQ,MAAM,qBAAqB,WAAW;MAC9C,QAAQ,MAAM,mBAAmB,WAAW;MAC5C,QAAQ,MAAM,YAAa,WAAW,eAAgB,UAAU;MAChE,QAAQ,MAAM,QAAQ,WAAY,QAAS,WAAW,QAAQ;;MAE9D,IAAG,WAAW,kBAAiB;;QAG7B,QAAQ,MAAM,OAAO,WAAW;UAC9B,aAAa,SAAA,YAAS,GAAG;YACvB,SAAS,YAAY,EAAE;;;;;IAQ/B,OAAO;;;EAGT,KAAK,gBAAgB,UAAU,SAAS;IACtC,IAAI,QAAQ,UAAU,UAAU;MAC9B,IAAI,aAAa;MACjB,WAAW,SAAS,QAAQ,MAAM;MAClC,WAAW,QAAQ,QAAQ,MAAM;MACjC,WAAW,WAAW,QAAQ,SAAS;MACvC,WAAW,UAAU,QAAQ,QAAQ;MACrC,WAAW,QAAQ,QAAQ,MAAM;MACjC,WAAW,aAAa,QAAQ,MAAM;MACtC,WAAW,gBAAgB,QAAQ,MAAM,sBAAsB,QAAQ,MAAM;MAC7E,WAAW,eAAgB,QAAQ,MAAM,aAAa;MACtD,WAAW,QAAQ,QAAQ,MAAM;MACjC,OAAO;;;GAGX","file":"v2.nvd3-pie/adapter.js","sourcesContent":["import angular from 'angular';\r\n\r\n\r\nconst m = angular.module('app.widgets.v2.pie-chart-adapter', []);\r\n\r\nm.service('PieChartAdapter', function () {\r\n\r\n  this.onSelectSerie = (selection,settings,api) => {\r\n    let data = d3.select(api.getSVG()).data();\r\n    settings.data.forEach((s) => {\r\n      let f = selection.filter(l => l.key == s.label)[0]\r\n      if(f){\r\n        s.disabled =  f.disabled\r\n      }\r\n    })\r\n    return settings;\r\n  }\r\n \r\n \r\n this.applyDecoration = function (options, decoration, selector,api) {\r\n    if (angular.isDefined(decoration) && angular.isDefined(options)) {\r\n      options.chart.height = decoration.height;\r\n      options.title.text = decoration.title;\r\n      options.subtitle.text = decoration.subtitle;\r\n      options.caption.text = decoration.caption;\r\n      options.chart.donut = decoration.donut;\r\n      options.chart.donutRatio = decoration.donutRatio;\r\n      options.chart.donutLabelsOutside = decoration.labelsOutside;\r\n      options.chart.pieLabelsOutside = decoration.labelsOutside;\r\n      options.chart.labelType = (decoration.valueAsLabel) ? \"value\" : \"key\";\r\n      options.chart.color = (decoration.color) ? decoration.color : null;\r\n\r\n      if(decoration.enableEmitEvents){\r\n        \r\n       \r\n        options.chart.legend.dispatch = {\r\n          stateChange: function(e) {\r\n            selector.selectSerie(e.disabled);\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n\r\n    }\r\n    return options;\r\n  }\r\n\r\n  this.getDecoration = function (options) {\r\n    if (angular.isDefined(options)) {\r\n      var decoration = {}\r\n      decoration.height = options.chart.height;\r\n      decoration.title = options.title.text;\r\n      decoration.subtitle = options.subtitle.text;\r\n      decoration.caption = options.caption.text;\r\n      decoration.donut = options.chart.donut;\r\n      decoration.donutRatio = options.chart.donutRatio;\r\n      decoration.labelsOutside = options.chart.donutLabelsOutside || options.chart.pieLabelsOutside;\r\n      decoration.valueAsLabel = (options.chart.labelType == \"value\");\r\n      decoration.color = options.chart.color;\r\n      return decoration;\r\n    }\r\n  }  \r\n});"],"sourceRoot":"/source/"}