{"version":3,"sources":["v2.event-navigator/widget.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,kBAAkB,UAAU,KAAK,EAAE,OAAO,OAAO,IAAI,aAAa,IAAI,aAAa;;AAEvF,IAJO,UAAO,gBAAA,QAAM;;AAMpB,QALO;;AAGP,IAAM,UAAU,QAAQ,OAAO,2BAA2B,CAAC;;AAO3D,QAAQ,WAAW,8MAAqB,UAAU,QAAQ,OAAO,YACT,aAAY,cACZ,MAAK,QAAO,SAAQ,QACpB,QAAQ,QAAQ,OAAO,MACvB,UAAU,mBACV,SACE;;EAGxD,IAAI,UAAU,IAAI,aAAa;;EAI/B,QAAQ,OAAO,QAAQ;IACrB,MAAO;IACP,cAAe;IACf,QAAM,SAAA,SAAE;MACN,OAAO,OAAO;MACd,OAAO,eAAe;MACtB,MAAM,IAAI,QAAQ,SACf,QAAQ,UAAA,MAAQ;QACf,KAAK,QAAQ,UAAC,KAAQ;UACtB,IAAI,WAAW,IAAK,WAAY,IAAI,WAAW;UAC/C,IAAI,SAAS,QAAS,UAAC,GAAM;YAC3B,IAAI,KAAK,WAAW,QAAQ;YAC5B,IAAG,OAAO,KAAK,QAAQ,MAAM,GAAG,OAAO,KAAK,KAAK;;;;;;;;;;;;;;;MAerD,QAAQ,KAAK,WAAU,OAAO;;;IAIlC,WAAS,SAAA,UAAA,GAAG;MACV,IAAI,QAAQ,OAAO,KAAK,QAAQ;MAChC,OAAO,KAAK,OAAO,OAAM;MACzB,OAAO,aAAa,KAAK;MACzB,OAAO,iBAAiB;MACxB,OAAO,aAAa;MACpB,QAAQ,KAAK,WAAU,OAAO;;;IAGhC,aAAW,SAAA,YAAA,GAAG;MACZ,IAAI,QAAQ,OAAO,aAAa,QAAQ;MACxC,OAAO,aAAa,OAAO,OAAM;MACjC,OAAO,KAAK,KAAK;MACjB,QAAQ,KAAK,WAAU,OAAO;;;;;EAOlC,IAAI,YAAY,QACb,OAAO,YAAM;;IAEZ,IAAG,OAAO,OAAO,aAAa,OAAO,OAAO,UAAU,UACpD,OAAO,OAAO,UAAU,OAAO,SAAS,GAAE;;MAE1C,oBAAoB,gBAAgB;QAChC,SAAS,OAAO,OAAO;QACvB,QAAQ;;;MAGZ,OAAO,eAAe,OAAQ,OAAO,YAAa,OAAO,OAAO,UAAU,MAAM,OAAO;;MAEvF,oBAAoB,aAClB,OAAO,aAAa,IAAI,UAAC,MAAQ;QAC/B,OAAO;UACH,SAAS,OAAO,OAAO;UACvB,UAAW,KAAK;UAChB,QAAQ;UACR,MAAM;;;WAKX;;MAEH,oBAAoB,gBAAgB;QAChC,SAAS,OAAO,OAAO;QACvB,QAAQ;;;;IAKZ,OAAO;KAIV,QAAQ,WAAW,YAAM;IACxB,OAAO;KAGR,QAAQ,UAAU,UAAC,GAAE,MAAS;IAC7B,OAAO,KAAK,IAAK,UAAA,GAAC;MAxBlB,OAwBsB,WAAW,QAAQ;;IACzC,OAAO,eAAe;IACtB,QAAQ,KAAK,WAAU,OAAO;KAG/B,UAAU,YAAI;IAAC,OAAO;;;4CArBiB","file":"v2.event-navigator/widget.js","sourcesContent":["import angular from 'angular';\r\nimport 'angular-foundation';\r\n\r\n\r\nconst appTags = angular.module('app.widgets.v2.app-tags', ['mm.foundation']);\r\n\r\n\r\n\r\n\r\n\r\n\r\nappTags.controller('AppTagsController', function ($scope, $http, $translate,\r\n                                                        APIProvider,EventEmitter,\r\n                                                        i18n,config,appUrls,$modal,\r\n                                                        dialog, prompt, alert, user,\r\n                                                        appSkins, pageSubscriptions,\r\n                                                        $window\r\n                                                        ) {\r\n  \r\n\r\n  var emitter = new EventEmitter($scope);\r\n\r\n\r\n\r\n  angular.extend($scope, {\r\n    tags : [],\r\n    selectedTags : [],\r\n    update(){\r\n      $scope.tags = [];\r\n      $scope.selectedTags = [];\r\n      $http.get(appUrls.appList)\r\n        .success(apps => {\r\n          apps.forEach((app) => {\r\n          app.keywords = (app.keywords) ? app.keywords : [];  \r\n          app.keywords.forEach( (t) => {\r\n            let _t = $translate.instant(t)\r\n            if($scope.tags.indexOf(_t) < 0) $scope.tags.push(_t)\r\n          });\r\n        });\r\n          \r\n          // apps.forEach((c) =>{\r\n          //   if(c.i18n){\r\n          //     config.i18n = (config.i18n)? config.i18n : {}; \r\n          //     for(let locale in c.i18n){\r\n          //       config.i18n[locale] = (config.i18n[locale]) ? config.i18n[locale] : {};\r\n          //       angular.extend(config.i18n[locale],c.i18n[locale])  \r\n          //     }\r\n          //   }  \r\n          // })\r\n          // i18n.refresh();\r\n        });\r\n        emitter.emit(\"appTags\",$scope.selectedTags)\r\n       // emitter.emit(\"setApplication\",undefined);  \r\n    },\r\n\r\n    selectTag(t){\r\n      let index = $scope.tags.indexOf(t);\r\n      $scope.tags.splice(index,1);\r\n      $scope.selectedTags.push(t);\r\n      $scope.selectedObject = \"\";\r\n      $scope.$viewValue = \"\";\r\n      emitter.emit(\"appTags\",$scope.selectedTags)\r\n    },\r\n\r\n    unselectTag(t){\r\n      let index = $scope.selectedTags.indexOf(t);\r\n      $scope.selectedTags.splice(index,1);\r\n      $scope.tags.push(t);\r\n      emitter.emit(\"appTags\",$scope.selectedTags)\r\n    }\r\n\r\n  });  \r\n  \r\n  \r\n\r\n  new APIProvider($scope)\r\n    .config(() => {\r\n        \r\n      if($scope.widget.listeners && $scope.widget.listeners.length &&\r\n        $scope.widget.listeners.trim().length > 0){\r\n          \r\n        pageSubscriptions().removeListeners({\r\n            emitter: $scope.widget.instanceName,\r\n            signal: \"appTags\"\r\n        });\r\n\r\n        $scope.appListeners = ($scope.widget.listeners) ? $scope.widget.listeners.split(\",\") : [];\r\n          \r\n        pageSubscriptions().addListeners(\r\n          $scope.appListeners.map((item) =>{\r\n            return {\r\n                emitter: $scope.widget.instanceName,\r\n                receiver:  item.trim(),\r\n                signal: \"appTags\",\r\n                slot: \"appTags\"\r\n            }\r\n          })\r\n        );\r\n\r\n      }else{\r\n\r\n        pageSubscriptions().removeListeners({\r\n            emitter: $scope.widget.instanceName,\r\n            signal: \"appTags\"\r\n        });\r\n\r\n      }\r\n\r\n        $scope.update();\r\n\r\n    })\r\n    \r\n    .provide(\"refresh\", () => {\r\n      $scope.update();\r\n    })\r\n\r\n    .provide(\"setTag\", (e,tags) => {\r\n      tags = tags.map( t => $translate.instant(t) )\r\n      $scope.selectedTags = tags;\r\n      emitter.emit(\"appTags\",$scope.selectedTags);\r\n    })\r\n    \r\n    .translate(()=>{$scope.update()})\r\n\r\n   \r\n    \r\n})"],"sourceRoot":"/source/"}