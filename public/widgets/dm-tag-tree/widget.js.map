{"version":3,"sources":["dm-tag-tree/widget.js"],"names":[],"mappings":"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","file":"dm-tag-tree/widget.js","sourcesContent":["import angular from 'angular';\r\nimport 'dictionary';\r\n\r\n\r\nangular.module('app.widgets.dm-tag-tree', ['app.dictionary',\"app.dps\"])\r\n  .controller('DataManagerTagTreeController', function ($scope, $http, $dps, EventEmitter, \r\n    APIProvider, pageSubscriptions, $lookup, $translate, user, app) {\r\n    \r\n\r\n\r\n    const eventEmitter = new EventEmitter($scope);\r\n    $scope.lookup = $lookup;\r\n    $scope.breadcrums = [];\r\n    $scope.tagList = [];\r\n\r\n    $scope.collapsed = true;\r\n\r\n    $scope.changeState = function(){\r\n      $scope.collapsed = !$scope.collapsed;      \r\n    }\r\n\r\n\r\n    var addListener = function(listener){\r\n        var subscriptions = pageSubscriptions();\r\n        for (var i in subscriptions) {\r\n          if (subscriptions[i].emitter === listener.emitter \r\n            && subscriptions[i].receiver === listener.receiver\r\n            && subscriptions[i].signal === listener.signal\r\n            && subscriptions[i].slot === listener.slot\r\n            ) {\r\n            return;\r\n          }\r\n        }\r\n        subscriptions.push(listener);\r\n      };\r\n      \r\n    var removeListener = function(listener){\r\n        var subscriptions = pageSubscriptions();\r\n        for (var i in subscriptions) {\r\n          if (subscriptions[i].emitter === listener.emitter \r\n            && subscriptions[i].receiver === listener.receiver\r\n            && subscriptions[i].signal === listener.signal\r\n            && subscriptions[i].slot === listener.slot\r\n            ) {\r\n            subscriptions.splice(i, 1);\r\n            return\r\n          }\r\n        }\r\n      };\r\n\r\n    var prepareList = function(tag){\r\n      $scope.tagList = [];\r\n      for(let item in tag){\r\n        if(item.indexOf(\"_\") !==0 && item.indexOf(\"$\") !==0){\r\n          $scope.tagList.push(tag[item]); \r\n        }\r\n      }\r\n    }\r\n\r\n    $scope.down = function(tag){\r\n      $scope.breadcrums.push(tag);\r\n      prepareList(tag);\r\n      $scope.tag = tag;\r\n      eventEmitter.emit('setLookupKey', tag._tag, $scope.category);\r\n      // let tmp = {};\r\n      // tmp[\"dataset.topics\"] = [{startsWith:tag._path}];\r\n      // let query = [tmp];\r\n      // \r\n      let query = \"$[?(@.dataset.topics.contains(function(d){return d.startWith('{{}}')}))]\"\r\n                    .split(\"{{}}\")\r\n                    .join(tag._path);\r\n\r\n      eventEmitter.emit('searchQuery', query);\r\n    }\r\n\r\n    $scope.up = function(index){\r\n      $scope.down($scope.breadcrums.splice(index)[0]);\r\n    }\r\n\r\n    new APIProvider($scope)\r\n      .config( () => {\r\n        console.log(`widget ${$scope.widget.instanceName} is (re)configuring...`);\r\n        $scope.title = $scope.widget.title;\r\n        $scope.category = $scope.widget.category;\r\n        $scope.query = $scope.widget.query;\r\n\r\n\r\n        $scope.lookupListeners = ($scope.widget.lookupListeners) ? $scope.widget.lookupListeners.split(\",\") : [];\r\n        \r\n        pageSubscriptions().removeListeners({\r\n          emitter: $scope.widget.instanceName,\r\n          signal: \"setLookupKey\"\r\n        })\r\n\r\n        pageSubscriptions().addListeners(\r\n          $scope.lookupListeners.map((item) =>{\r\n            return {\r\n                emitter: $scope.widget.instanceName,\r\n                receiver: item.trim(),\r\n                signal: \"setLookupKey\",\r\n                slot: \"setLookupKey\"\r\n            }\r\n          })\r\n        );\r\n\r\n        // for(var i in $scope.lookupListeners){\r\n        //   $scope.lookupListeners[i] = $scope.lookupListeners[i].trim();\r\n        //   // console.log($scope.widget.instanceName,$scope.lookupListeners[i]);\r\n        //  addListener({\r\n        //         emitter: $scope.widget.instanceName,\r\n        //         receiver: $scope.lookupListeners[i],\r\n        //         signal: \"setLookupKey\",\r\n        //         slot: \"setLookupKey\"\r\n        //       });\r\n        // }\r\n\r\n        $scope.searchListeners = ($scope.widget.searchListeners) ? $scope.widget.searchListeners.split(\",\") : [];\r\n        \r\n        pageSubscriptions().removeListeners({\r\n          emitter: $scope.widget.instanceName,\r\n          signal: \"searchQuery\"\r\n        })\r\n\r\n        pageSubscriptions().addListeners(\r\n          $scope.searchListeners.map((item) =>{\r\n            return {\r\n                emitter: $scope.widget.instanceName,\r\n                receiver: item.trim(),\r\n                signal: \"searchQuery\",\r\n                slot: \"searchQuery\"\r\n            }\r\n          })\r\n        );\r\n        \r\n        // for(var i in $scope.searchListeners){\r\n        //   $scope.searchListeners[i] = $scope.searchListeners[i].trim();\r\n        //   // console.log($scope.widget.instanceName,$scope.searchListeners[i]);\r\n        //  addListener({\r\n        //         emitter: $scope.widget.instanceName,\r\n        //         receiver: $scope.searchListeners[i],\r\n        //         signal: \"searchQuery\",\r\n        //         slot: \"searchQuery\"\r\n        //       });\r\n        // }  \r\n\r\n        $scope.icon_class = $scope.widget.icon_class;\r\n        $scope.property = $scope.widget.property || $scope.property;\r\n         var status = (user.isOwner || user.isCollaborator) ? \"private\" : \"public\";   \r\n          // $http.post(\"./api/metadata/tag/tree\",{\"status\":status})\r\n          $dps.post(\"/api/metadata/tag/tree\",{\"status\":status})\r\n            .success(function(resp){\r\n              $scope.breadcrums = [];\r\n              $scope.tagList = [];\r\n              resp._tag = $scope.title;\r\n              $scope.result = resp;\r\n              $scope.breadcrums.push($scope.result);\r\n              prepareList($scope.result);\r\n              $scope.tag = $scope.result;\r\n              // $scope.down($scope.result);\r\n          })\r\n      })    \r\n\r\n      .provide('refresh', (evt) => {\r\n        var status = (user.isOwner || user.isCollaborator) ? \"private\" : \"public\";\r\n        // $http.post(\"./api/metadata/tag/tree\",{\"status\":status})\r\n        $dps.post(\"/api/metadata/tag/tree\",{\"status\":status})\r\n          .success(function(resp){\r\n              $scope.breadcrums = [];\r\n              $scope.tagList = [];\r\n              resp._tag = $scope.title;\r\n              $scope.result = resp;\r\n              $scope.breadcrums.push($scope.result);\r\n              prepareList($scope.result);\r\n              $scope.tag = $scope.result;\r\n          })\r\n      })\r\n      \r\n      .removal(() => {\r\n        console.log('TagsTotal widget is destroyed');\r\n      });\r\n  });\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":"/source/"}