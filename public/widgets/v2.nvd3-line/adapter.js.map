{"version":3,"sources":["v2.nvd3-line/adapter.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,kBAAkB,UAAU,KAAK,EAAE,OAAO,OAAO,IAAI,aAAa,IAAI,aAAa;;AAEvF,IAJO,UAAO,gBAAA,QAAM;;AAGpB,IAAM,IAAI,QAAQ,OAAO,qCAAqC;;AAE9D,EAAE,QAAQ,oBAAoB,YAAY;;EAEtC,KAAK,gBAAgB,UAAC,WAAU,UAAS,KAAQ;IAC/C,IAAI,OAAO,GAAG,OAAO,IAAI,UAAU;IACnC,SAAS,KAAK,QAAQ,UAAC,GAAM;MAC3B,IAAI,IAAI,UAAU,OAAO,UAAA,GAAC;QAI1B,OAJ8B,EAAE,OAAO,EAAE;SAAK;MAC9C,IAAG,GAAE;QACH,EAAE,WAAY,EAAE;;;IAGpB,OAAO;;;EAGV,KAAK,kBAAkB,UAAU,SAAS,YAAY,UAAS,KAAK;IACnE,IAAI,QAAQ,UAAU,eAAe,QAAQ,UAAU,UAAU;MAC/D,QAAQ,MAAM,SAAS,WAAW;MAClC,QAAQ,MAAM,OAAO,WAAW;MAChC,QAAQ,SAAS,OAAO,WAAW;MACnC,QAAQ,QAAQ,OAAO,WAAW;MAClC,QAAQ,MAAM,MAAM,YAAY,WAAW;MAC3C,QAAQ,MAAM,MAAM,YAAY,WAAW;MAC3C,QAAQ,MAAM,MAAM,gBAAgB,WAAW;MAC/C,QAAQ,MAAM,eAAe,WAAW;MACxC,QAAQ,MAAM,eAAe,WAAW;MACxC,QAAQ,MAAM,SAAS,WAAW;;MAElC,QAAQ,MAAM,aACZ,QAAS,UAAU,WAAW,cAAe,WAAW,aAAa;;MAEvE,QAAQ,MAAM,cAAc,WAAW;;MAEvC,QAAQ,MAAM,QAAQ,WAAY,QAAS,WAAW,QAAQ;;MAE9D,QAAQ,MAAM,MAAM,QAAQ,WAAY,aAAc,UAAU,GAAG;QACjE,OAAO,EAAE;;UACP;;MAEJ,IAAG,WAAW,kBAAiB;QAC7B,QAAQ,MAAM,OAAO,WAAW;UAC9B,aAAa,SAAA,YAAS,GAAG;YACvB,SAAS,YAAY,EAAE;;;;;IAO/B,OAAO;;;EAGT,KAAK,gBAAgB,UAAU,SAAS;IACtC,IAAI,QAAQ,UAAU,UAAU;MAC9B,QAAQ,IAAI;MACZ,IAAI,aAAa;MACjB,WAAW,SAAS,QAAQ,MAAM;MAClC,WAAW,QAAQ,QAAQ,MAAM;MACjC,WAAW,WAAW,QAAQ,SAAS;MACvC,WAAW,UAAU,QAAQ,QAAQ;MACrC,WAAW,YAAY,QAAQ,MAAM,MAAM;MAC3C,WAAW,YAAY,QAAQ,MAAM,MAAM;MAC3C,WAAW,aAAa,QAAQ,MAAM;MACtC,WAAW,eAAe,QAAQ,MAAM;MACxC,WAAW,gBAAgB,QAAQ,MAAM,MAAM;MAC/C,WAAW,SAAS,QAAQ,MAAM;MAClC,WAAW,QAAQ,QAAQ,MAAM;MACjC,WAAW,gBAAgB,QAAQ,MAAM;MACzC,WAAW,aAAa,QAAQ,MAAM;;MAGtC,WAAW,aAAa,QAAQ,UAAU,QAAQ,MAAM,MAAM;MAC9D,OAAO;;;GAGX","file":"v2.nvd3-line/adapter.js","sourcesContent":["import angular from 'angular';\r\n\r\n\r\nconst m = angular.module('app.widgets.v2.line-chart-adapter', []);\r\n\r\nm.service('LineChartAdapter', function () {\r\n\r\n    this.onSelectSerie = (selection,settings,api) => {\r\n      let data = d3.select(api.getSVG()).data();\r\n      settings.data.forEach((s) => {\r\n        let f = selection.filter(l => l.key == s.key)[0]\r\n        if(f){\r\n          s.disabled =  f.disabled\r\n        }\r\n      })\r\n      return settings;\r\n    } \r\n\r\n   this.applyDecoration = function (options, decoration, selector,api) {\r\n    if (angular.isDefined(decoration) && angular.isDefined(options)) {\r\n      options.chart.height = decoration.height;\r\n      options.title.text = decoration.title;\r\n      options.subtitle.text = decoration.subtitle;\r\n      options.caption.text = decoration.caption;\r\n      options.chart.xAxis.axisLabel = decoration.xAxisName;\r\n      options.chart.yAxis.axisLabel = decoration.yAxisName;\r\n      options.chart.xAxis.staggerLabels = decoration.staggerLabels;\r\n      options.chart.rotateLabels = decoration.xAxisAngle;\r\n      options.chart.reduceXTicks = decoration.reduceXTicks;\r\n      options.chart.isArea = decoration.isArea;\r\n      // console.log(\"apply showPoints for \"+options.chart.lines.scatter)\r\n      options.chart.showPoints = \r\n        (angular.isDefined(decoration.showPoints)) ? decoration.showPoints : true;\r\n\r\n      options.chart.interpolate = decoration.interpolation;\r\n\r\n      options.chart.color = (decoration.color) ? decoration.color : null;\r\n\r\n      options.chart.lines.label = (decoration.showLabels) ? function (d) {\r\n        return d.label// return d.y.toFixed(2)\r\n      } : undefined;\r\n\r\n      if(decoration.enableEmitEvents){\r\n        options.chart.legend.dispatch = {\r\n          stateChange: function(e) {\r\n            selector.selectSerie(e.disabled);\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n    return options;\r\n  }\r\n\r\n  this.getDecoration = function (options) {\r\n    if (angular.isDefined(options)) {\r\n      console.log(options);\r\n      var decoration = {}\r\n      decoration.height = options.chart.height;\r\n      decoration.title = options.title.text;\r\n      decoration.subtitle = options.subtitle.text;\r\n      decoration.caption = options.caption.text;\r\n      decoration.xAxisName = options.chart.xAxis.axisLabel;\r\n      decoration.yAxisName = options.chart.yAxis.axisLabel;\r\n      decoration.xAxisAngle = options.chart.rotateLabels;\r\n      decoration.reduceXTicks = options.chart.reduceXTicks;\r\n      decoration.staggerLabels = options.chart.xAxis.staggerLabels;\r\n      decoration.isArea = options.chart.isArea;\r\n      decoration.color = options.chart.color;\r\n      decoration.interpolation = options.chart.interpolate;\r\n      decoration.showPoints = options.chart.showPoints;\r\n\r\n\r\n      decoration.showLabels = angular.isDefined(options.chart.lines.label);\r\n      return decoration;\r\n    }\r\n  };\r\n});"],"sourceRoot":"/source/"}