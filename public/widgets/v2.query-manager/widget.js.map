{"version":3,"sources":["v2.query-manager/widget.js"],"names":[],"mappings":"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","file":"v2.query-manager/widget.js","sourcesContent":["import angular from 'angular';\r\nimport \"widgets/wizard/wizard\";\r\nimport \"widgets/v2.steps/select-dataset\";\r\nimport \"widgets/v2.steps/make-query\";\r\nimport \"md5\";\r\nimport \"custom-react-directives\";\r\n\r\n\r\nlet m = angular.module('app.widgets.v2.query-manager', [\r\n  \"custom-react-directives\",\r\n  \"app.widgets.wizard\",\r\n  \"app.widgets.v2.steps.select-dataset\",\r\n  \"app.widgets.v2.steps.make-query\",\r\n  \"app.dps\"\r\n]);\r\n\r\nm.service(\"md5\", function(){return md5});\r\n\r\nm.factory(\"Queries\",function(){\r\n  return {\r\n    scope: undefined,\r\n    \r\n    init: (scope) => {\r\n      this.scope = scope;\r\n      scope.widget.queries = (scope.widget.queries) ? scope.widget.queries : [];\r\n    },\r\n\r\n\r\n    add: (query, type, title) => {\r\n      let q = {\r\n        $id: md5(angular.toJson(query)),\r\n        $listeners: 0,\r\n        $type: type,\r\n        $title: title,\r\n        context: query\r\n      }\r\n      let oq = this.scope.widget.queries.filter((item) => item.$id == q.$id)[0]\r\n      if(oq) {\r\n        return oq\r\n      }else{\r\n        this.scope.widget.queries.push(q);\r\n        return q;\r\n      }\r\n    },\r\n\r\n    remove: (queryID) => {\r\n      let query = this.scope.widget.queries.filter((item) => item.$id == queryID)[0];\r\n      if(query){ // && (query.$listeners.length == 0)){\r\n        this.scope.widget.queries = this.scope.widget.queries.filter((item) => item.$id != queryID)\r\n      }\r\n    },\r\n\r\n    get : (queryID) => {\r\n      let query = this.scope.widget.queries.filter((item) => item.$id == queryID)[0];\r\n      if( query ) query.$listeners++;\r\n      return query;\r\n    },\r\n\r\n    release: (queryID) => {\r\n      let query = this.scope.widget.queries.filter((item) => item.$id == queryID)[0];\r\n      if( query ) query.$listeners--;\r\n    },\r\n\r\n    getQuery : (query) => {\r\n      let id = md5(angular.toJson(query));\r\n      return this.scope.widget.queries.filter((item) => item.$id == id)[0]\r\n    }\r\n  }\r\n});\r\n\r\n\r\nm._projectionWizard = undefined;\r\n\r\nm.factory(\"ProjectionWizard\",[\r\n  \"$http\",\r\n  \"$dps\",\r\n  \"$modal\", \r\n  \"Wizard\",\r\n  \"SelectDataset\",\r\n  \"MakeQuery\",\r\n  \"i18n\",\r\n    function (  \r\n          $http,\r\n          $dps,\r\n          $modal, \r\n          Wizard,\r\n          SelectDataset,\r\n          MakeQuery,\r\n          i18n) {\r\n      \r\n      if (!m._projectionWizard){\r\n        m._projectionWizard = \r\n         new Wizard($modal)\r\n            .setTitle(\"Data Cube Projection Wizard\")\r\n            .setIcon(\"./widgets/v2.query-manager/projection.png\")\r\n            .push(SelectDataset)\r\n            .push(MakeQuery)\r\n            .onStart(function(wizard){\r\n              wizard.context = {};\r\n            })\r\n            .onCompleteStep( function(wizard,step){\r\n              if(step.title == \"Dataset\"){\r\n                wizard.enable(step.index+1);\r\n              }\r\n            })\r\n            .onProcessStep( function(wizard,step){\r\n              if(step.title == \"Dataset\"){\r\n                wizard.disable(wizard.getAboveIndexes(step));\r\n              }\r\n            })\r\n      }      \r\n\r\n      return m._projectionWizard;  \r\n\r\n}]);\r\n\r\n\r\n\r\n\r\nm.controller(\"PreparationDialogController\", function (\r\n    $scope,\r\n    $http,\r\n    $dps,\r\n    $modal,\r\n    dialog,\r\n    source,\r\n    $modalInstance,\r\n    Queries,\r\n    pageWidgets,\r\n    app,\r\n    i18n\r\n    ){\r\n\r\n    $scope.source = source;\r\n    $scope.script = [];\r\n    $scope.operations = [];\r\n    $scope.cursor = -1;\r\n\r\n    $scope.pushOp = (o) => {\r\n      if( $scope.cursor >= 0 && $scope.cursor < ($scope.script.length-1)){\r\n        $scope.script.splice($scope.cursor+1,$scope.script.length - $scope.cursor-1)\r\n      }\r\n      $scope.script.push(o);\r\n      $scope.cursor = $scope.script.length-1;\r\n      if(!o.send) $scope.runScript(); \r\n    }\r\n\r\n    $scope.moveCursor = (value) => {\r\n      $scope.cursor = value;\r\n      $scope.runScript();\r\n    }\r\n\r\n    $scope.addPreparation = () => {\r\n\r\n      let queries = [];\r\n\r\n          pageWidgets()\r\n            .filter((item) => item.type ==\"v2.query-manager\")\r\n            .map((item) => item.queries)\r\n            .forEach((item) => {queries = queries.concat(item)})\r\n\r\n     \r\n            \r\n      dialog({\r\n        title:\"Enter Table Name\",\r\n        fields:{\r\n          name:{\r\n            title:\"Table Name\",\r\n            type:\"text\",\r\n            value:\"\"\r\n          }\r\n        },\r\n        validate: (form) => {\r\n          let f1 = form.fields.name.value.length > 0;\r\n          let f2 = queries.map((item) => item.$title).indexOf(form.fields.name.value) == -1;\r\n          return (f1&&f2)\r\n        }\r\n\r\n      }).then((form) => {\r\n        $dps\r\n          .post(\"/api/data/script\",{\r\n            \"data\"  : $scope.script.map(item => item.shortName).join(\";\")+\";save()\",\r\n            \"locale\": i18n.locale()\r\n          })\r\n          .success(function (resp) {\r\n              console.log(resp)\r\n              Queries.add(\r\n                angular.copy({\r\n                  queryResultId: resp.data.data_id, \r\n                  script:$scope.script\r\n                 }), \"preparation\", form.fields.name.value);\r\n              app.markModified();\r\n              $modalInstance.close();\r\n          })\r\n      })\r\n      \r\n    }\r\n\r\n    $scope.close = () => {\r\n       $modalInstance.close();  \r\n    }\r\n\r\n\r\n    $scope.avaibleAggregations = \r\n    [\r\n        {title:\"min\",value:false},\r\n        {title:\"max\",value:false},\r\n        {title:\"avg\",value:false},\r\n        {title:\"std\",value:false},\r\n        {title:\"sum\",value:false}\r\n    ];\r\n    \r\n\r\n    $scope.operations.push({\r\n      title:\"Query data\",\r\n      action: () => {\r\n      }\r\n    });\r\n\r\n   \r\n\r\n    $scope.operations.push({\r\n      title:\"Reduce Nulls in Columns\",\r\n      action: () => {\r\n        dialog({\r\n          title: \"Reduce Nulls in Columns\",\r\n          fields:{\r\n            mode:{\r\n              title:\"Mode\",\r\n              type:\"select\",\r\n              value:'',\r\n              options:[\r\n                {title:\"Remove column then it contains one or more null values\",value:\"Has Null\"},\r\n                {title:\"Remove column then it contains all null values\",value:\"All Nulls\"}\r\n              ]\r\n            }\r\n          }\r\n        }).then((form) =>{\r\n          $scope.pushOp({\r\n            shortName: \"reduce(mode:'\"+form.fields.mode.value+\"',direction : 'Columns')\",//\"Reduce Columns (\"+form.fields.mode.value+\")\",\r\n            reduce : {\r\n              \"enable\" : true,\r\n              \"mode\" : form.fields.mode.value,\r\n              \"direction\" : \"Columns\"\r\n            }\r\n          })\r\n        })\r\n      }  \r\n    });\r\n\r\n    $scope.operations.push({\r\n      title:\"Reduce Nulls in Rows\",\r\n      action: () => {\r\n        dialog({\r\n          title: \"Reduce Nulls in Rows\",\r\n          fields:{\r\n            mode:{\r\n              title:\"Mode\",\r\n              value:'',\r\n              type:\"select\",\r\n              options:[\r\n                {title:\"Remove row then it contains one or more null values\",value:\"Has Null\"},\r\n                {title:\"Remove row then it contains all null values\",value:\"All Nulls\"}\r\n              ]\r\n            }\r\n          }\r\n        }).then((form) =>{\r\n          $scope.pushOp({\r\n            shortName: \"reduce(mode:'\"+form.fields.mode.value+\"',direction : 'Rows')\",//\"Reduce Rows (\"+form.fields.mode.value+\")\",\r\n            reduce : {\r\n              \"enable\" : true,\r\n              \"mode\" : form.fields.mode.value,\r\n              \"direction\" : \"Rows\"\r\n            }\r\n          })\r\n        })\r\n      }  \r\n    });\r\n\r\n    $scope.operations.push({\r\n      title:\"Principle Components from Rows\",\r\n      action: () => {\r\n        dialog({\r\n          title:\"Principle Components from Rows\",\r\n          fields:{\r\n            mode:{\r\n              title:\"Result type\",\r\n              type:\"select\",\r\n              value:'',\r\n              options:[\"Scores\",\"Eigen Values\"]\r\n            }\r\n          }\r\n        }).then((form) => {\r\n          $scope.pushOp({\r\n            shortName: \"pca(result:'\"+form.fields.mode.value+\"',direction : 'Rows')\",//\"PCA (\"+form.fields.mode.value+\") from Rows\",\r\n            pca : {\r\n              \"enable\" : true,\r\n              \"direction\" : \"Rows\",\r\n              \"result\" : form.fields.mode.value\r\n            }  \r\n          });  \r\n        })\r\n      }\r\n    });\r\n\r\n    $scope.operations.push({\r\n      title:\"Principle Components from Columns\",\r\n       action: () => {\r\n          dialog({\r\n            title:\"Principle Components from Columns\",\r\n            fields:{\r\n              mode:{\r\n                title:\"Result type\",\r\n                type:\"select\",\r\n                value:'',\r\n                options:[\"Scores\",\"Eigen Values\"]\r\n              }\r\n            }\r\n          }).then((form) => {\r\n            $scope.pushOp({\r\n              shortName: \"pca(result:'\"+form.fields.mode.value+\"',direction : 'Columns')\",//\"PCA (\"+form.fields.mode.value+\") from Columns\",\r\n              pca : {\r\n                \"enable\" : true,\r\n                \"direction\" : \"Columns\",\r\n                \"result\" : form.fields.mode.value\r\n              }  \r\n            });  \r\n          })\r\n        }\r\n    });\r\n\r\n    $scope.operations.push({\r\n      title:\"Clasterize Rows\",\r\n      action: () => {\r\n        dialog({\r\n          title:\"Clasterize Rows\",\r\n          fields:{\r\n            count:{\r\n              title:\"Count\",\r\n              type:\"number\",\r\n              value:2,\r\n              min:2,\r\n              max:10\r\n            }\r\n          }\r\n\r\n        }).then((form)=>{\r\n          $scope.pushOp({\r\n            shortName: \"cluster(count:'\"+form.fields.count.value+\"',direction : 'Rows')\",//\"Clusters (\"+form.fields.count.value+\") for Rows\",\r\n            cluster:{\r\n              enable    :true,\r\n              direction :\"Rows\",\r\n              count     : form.fields.count.value\r\n            }\r\n          })  \r\n        })\r\n      }\r\n    });\r\n\r\n    $scope.operations.push({\r\n      title:\"Clasterize Columns\",\r\n      action: () => {\r\n        dialog({\r\n          title:\"Clasterize Columns\",\r\n          fields:{\r\n            count:{\r\n              title:\"Count\",\r\n              type:\"number\",\r\n              value:2,\r\n              min:2,\r\n              max:10\r\n            }\r\n          }\r\n\r\n        }).then((form)=>{\r\n          $scope.pushOp({\r\n            shortName: \"cluster(count:'\"+form.fields.count.value+\"',direction : 'Columns')\",//\"Clusters (\"+form.fields.count.value+\") for Columns\",\r\n            cluster:{\r\n              enable    :true,\r\n              direction :\"Columns\",\r\n              count     : form.fields.count.value\r\n            }\r\n          })  \r\n        })\r\n      }\r\n    });\r\n\r\n\r\n    $scope.operations.push({\r\n      title:\"Histogram for Rows\",\r\n      action: () => {\r\n        dialog({\r\n          title:\"Histogram for Rows\",\r\n          fields:{\r\n            beans:{\r\n              title:\"Beans\",\r\n              type:\"number\",\r\n              value:5,\r\n              min:2,\r\n              max:20\r\n            },\r\n            cumulate:{\r\n              title: \"Cumulate\",\r\n              type:\"checkbox\",\r\n              value:false\r\n            }\r\n          }\r\n\r\n        }).then((form) => {\r\n           $scope.pushOp({\r\n              shortName: \"cls(beans:\"+form.fields.beans.value+\",cumulate:\"+form.fields.cumulate.value+\",direction : 'Rows')\",//,((form.fields.cumulate.value)? \"Cumulate \": \"\")+\"Histogram for Rows (\"+form.fields.beans.value+\" beans)\",\r\n              histogram : {\r\n                \"enable\" : true,\r\n                \"direction\" : \"Rows\",\r\n                \"cumulate\" : form.fields.cumulate.value,\r\n                \"beans\" : form.fields.beans.value\r\n              }\r\n           }) \r\n        })\r\n      }\r\n    });\r\n\r\n    $scope.operations.push({\r\n      title:\"Histogram for Columns\",\r\n      action: () => {\r\n        dialog({\r\n          title:\"Histogram for Columns\",\r\n          fields:{\r\n            beans:{\r\n              title:\"Beans\",\r\n              type:\"number\",\r\n              value:5,\r\n              min:2,\r\n              max:20\r\n            },\r\n            cumulate:{\r\n              title: \"Cumulate\",\r\n              type:\"checkbox\",\r\n              value:false\r\n            }\r\n          }\r\n\r\n        }).then((form) => {\r\n           $scope.pushOp({\r\n              shortName: \"cls(beans:\"+form.fields.beans.value+\",cumulate:\"+form.fields.cumulate.value+\",direction : 'Columns')\",//((form.fields.cumulate.value)? \"Cumulate \": \"\")+\"Histogram for Columns (\"+form.fields.beans.value+\" beans)\",\r\n              histogram : {\r\n                \"enable\" : true,\r\n                \"direction\" : \"Columns\",\r\n                \"cumulate\" : form.fields.cumulate.value,\r\n                \"beans\" : form.fields.beans.value\r\n              }\r\n           }) \r\n        })\r\n      }\r\n    });\r\n\r\n\r\n    $scope.operations.push({\r\n      title:\"Correlations for Rows\",\r\n      action: () => {\r\n        $scope.pushOp({\r\n          shortName: \"corr(direction:'Rows')\",//\"Correlations for Rows\",\r\n          correlation : {\r\n            \"enable\" : true,\r\n            \"direction\" : \"Rows\"\r\n          }    \r\n        })\r\n      }\r\n    });\r\n\r\n    $scope.operations.push({\r\n      title:\"Correlations for Columns\",\r\n      action: () => {\r\n        $scope.pushOp({\r\n          shortName: \"corr(direction:'Columns')\",//\"Correlations for Columns\",\r\n          correlation : {\r\n            \"enable\" : true,\r\n            \"direction\" : \"Columns\"\r\n          }    \r\n        })\r\n      }\r\n    }); \r\n    \r\n    $scope.operations.push({\r\n      title:\"Normalize Rows\",\r\n      action: () => {\r\n        \r\n        dialog({\r\n          title:\"Normalize data for Each Row\",\r\n          fields:{\r\n            mode:{\r\n              title:\"Normalization Mode\",\r\n              type:\"select\",\r\n              value:\"\",\r\n              options:[\"Range to [0,1]\",\"Standartization\",\"Logistic\"]\r\n            }\r\n          }\r\n        }).then((form) => {\r\n          $scope.pushOp({\r\n            shortName: \"norm(direction:'Rows', mode:'\"+form.fields.mode.value+\"')\",//\"Normalize Rows(\"+form.fields.mode.value+\")\",\r\n            normalization : {\r\n              \"enable\" : true,\r\n              \"mode\" : form.fields.mode.value,\r\n              \"direction\" : \"Rows\"\r\n            }\r\n          })  \r\n        })\r\n      }\r\n    });\r\n\r\n    $scope.operations.push({\r\n      title:\"Normalize Columns\",\r\n     action: () => {\r\n        \r\n        dialog({\r\n          title:\"Normalize data for Each Column\",\r\n          fields:{\r\n            mode:{\r\n              title:\"Normalization Mode\",\r\n              type:\"select\",\r\n              value:\"\",\r\n              options:[\"Range to [0,1]\",\"Standartization\",\"Logistic\"]\r\n            }\r\n          }\r\n        }).then((form) => {\r\n          $scope.pushOp({\r\n            shortName: \"norm(direction:'Columns', mode:'\"+form.fields.mode.value+\"')\",//\"Normalize Columns(\"+form.fields.mode.value+\")\",\r\n            normalization : {\r\n              \"enable\" : true,\r\n              \"mode\" : form.fields.mode.value,\r\n              \"direction\" : \"Columns\"\r\n            }\r\n          })  \r\n        })\r\n      }\r\n    });\r\n\r\n    $scope.operations.push({\r\n      title:\"Aggregate Rows\",\r\n      action: () => {\r\n        dialog({\r\n          title: \"Aggregate Rows\",\r\n          fields:{\r\n            agg:{\r\n              title: \"For Each Row Add Aggregation\",\r\n              type: \"checkgroup\",\r\n              value: $scope.avaibleAggregations\r\n            }\r\n          },    \r\n          validate: (form) => {\r\n              let oneOrMore = false;\r\n              form.fields.agg.value.forEach((item) => {\r\n                oneOrMore |= item.value\r\n              })\r\n              return oneOrMore;\r\n          }\r\n        }).then((form)=>{\r\n          let aggs = $scope.avaibleAggregations\r\n            .filter( (item,index) => form.fields.agg.value[index].value)\r\n            .map((item) => item.title)\r\n          $scope.pushOp({\r\n            shortName: \"aggregate(direction:'Rows', data:\"+JSON.stringify(aggs)+\")\",//\"Aggregate Rows(\"+aggs.join(\",\")+\")\",\r\n            aggregation : {\r\n              \"enable\" : true,\r\n              \"direction\" : \"Rows\",\r\n              \"data\" : aggs\r\n            }\r\n          })  \r\n        })\r\n      }\r\n    });\r\n\r\n    $scope.operations.push({\r\n      title:\"Aggregate Columns\",\r\n      action: () => {\r\n        dialog({\r\n          title: \"Aggregate Columns\",\r\n          fields:{\r\n            agg:{\r\n              title: \"For Each Column Add Aggregation\",\r\n              type: \"checkgroup\",\r\n              value: $scope.avaibleAggregations\r\n            }\r\n          },    \r\n          validate: (form) => {\r\n              let oneOrMore = false;\r\n              form.fields.agg.value.forEach((item) => {\r\n                oneOrMore |= item.value\r\n              })\r\n              return oneOrMore;\r\n          }\r\n        }).then((form)=>{\r\n          let aggs = $scope.avaibleAggregations\r\n            .filter( (item,index) => form.fields.agg.value[index].value)\r\n            .map((item) => item.title)\r\n          $scope.pushOp({\r\n            shortName: \"aggregate(direction:'Columns', data:\"+JSON.stringify(aggs)+\")\",//\"Aggregate Columns(\"+aggs.join(\",\")+\")\",\r\n            aggregation : {\r\n              \"enable\" : true,\r\n              \"direction\" : \"Columns\",\r\n              \"data\" : aggs\r\n            }\r\n          })  \r\n        })\r\n      }\r\n    }); \r\n\r\n    $scope.operations.push({\r\n      title:\"Rank for Rows\",\r\n      action: () => {\r\n\r\n        let rows =  \r\n          $scope.resultTable.header\r\n            .map((item) => item.metadata.map((m) => m.label).join(\".\"));\r\n       \r\n        dialog({\r\n          title:\"Rank for Rows\",\r\n          fields:{\r\n            asc:{\r\n              title:\"Order\",\r\n              type:\"select\",\r\n              value:\"A-Z\",\r\n              options:[\"A-Z\",\"Z-A\"]\r\n            },\r\n            rows:{\r\n              title:\"Columns\",\r\n              type:\"checkgroup\",\r\n              value:rows\r\n            }\r\n          },\r\n          validate: (form) =>{\r\n            let oneOrMore = false;\r\n              form.fields.rows.value.forEach((item) => {\r\n                oneOrMore |= item.value\r\n              })\r\n              return oneOrMore;\r\n          }\r\n\r\n        }).then((form) => {\r\n          let indexes; \r\n          $scope.pushOp({\r\n            shortName: \"rank(direction:'Columns',asc:'\"+form.fields.asc.value+\"',indexes:\"+\r\n              JSON.stringify(\r\n                form.fields.rows.value\r\n                  .map((item,index) => (item.value) ? index : -1)\r\n                  .filter((item) => item >= 0)\r\n              )+\")\",\r\n            rank : {\r\n              \"enable\" : true,\r\n              \"direction\" : \"Columns\",\r\n              \"asc\":form.fields.asc.value,\r\n              \"indexes\" : form.fields.rows.value\r\n                  .map((item,index) => (item.value) ? index : -1)\r\n                  .filter((item) => item >= 0)\r\n            }\r\n          })  \r\n        })\r\n      }\r\n    });\r\n\r\n    $scope.operations.push({\r\n      title:\"Rank for Columns\",\r\n     action: () => {\r\n\r\n        let rows =  \r\n          $scope.resultTable.body\r\n            .map((item) => item.metadata.map((m) => m.label).join(\".\"));\r\n       \r\n        dialog({\r\n          title:\"Rank for Columns\",\r\n          fields:{\r\n            asc:{\r\n              title:\"Order\",\r\n              type:\"select\",\r\n              value:\"A-Z\",\r\n              options:[\"A-Z\",\"Z-A\"]\r\n            },\r\n            rows:{\r\n              title:\"Rows\",\r\n              type:\"checkgroup\",\r\n              value:rows\r\n            }\r\n          },\r\n          validate: (form) =>{\r\n            let oneOrMore = false;\r\n              form.fields.rows.value.forEach((item) => {\r\n                oneOrMore |= item.value\r\n              })\r\n              return oneOrMore;\r\n          }\r\n\r\n        }).then((form) => {\r\n          let indexes; \r\n          $scope.pushOp({\r\n            shortName: \"rank(direction:'Columns',asc:'\"+form.fields.asc.value+\"',indexes:\"+\r\n              JSON.stringify(\r\n                form.fields.rows.value\r\n                  .map((item,index) => (item.value) ? index : -1)\r\n                  .filter((item) => item >= 0)\r\n              )+\")\",\r\n            rank : {\r\n              \"enable\" : true,\r\n              \"direction\" : \"Rows\",\r\n              \"asc\":form.fields.asc.value,\r\n              \"indexes\" : form.fields.rows.value\r\n                  .map((item,index) => (item.value) ? index : -1)\r\n                  .filter((item) => item >= 0)\r\n            }\r\n          })  \r\n        })\r\n      }\r\n    });\r\n\r\n    $scope.operations.push({\r\n      title:\"Merge Rows\",\r\n      action: () => {\r\n\r\n        let rows =  \r\n          $scope.resultTable.body\r\n            .map((item,index) => {\r\n              return {\r\n                title:item.metadata.map((m) => m.label).join(\".\"),\r\n                value:index\r\n              }  \r\n            });\r\n        \r\n        dialog({\r\n          \r\n          title:\"Merge Rows\",\r\n          fields:{\r\n            master:{\r\n              title:\"Master row\",\r\n              type:\"select\",\r\n              options:rows\r\n            },\r\n            slave:{\r\n              title:\"Slave row\",\r\n              type:\"select\",\r\n              options:rows\r\n            }\r\n          }\r\n\r\n        }).then((form) => {\r\n          let indexes; \r\n          $scope.pushOp({\r\n            shortName: \"merge(direction:'Rows',master:\"+form.fields.master.value+\",slave:\"+form.fields.slave.value+\")\",//\"Merge Rows(\"+form.fields.master.value+\",\"+form.fields.slave.value+\")\",\r\n            merge : {\r\n              \"enable\" : true,\r\n              \"direction\" : \"Rows\",\r\n              \"master\" : form.fields.master.value,\r\n              \"slave\" : form.fields.slave.value\r\n            }\r\n          })  \r\n        })\r\n      }\r\n    });\r\n\r\n    $scope.operations.push({\r\n      title:\"Merge Columns\",\r\n      action: () => {\r\n\r\n        let rows =  \r\n          $scope.resultTable.header\r\n            .map((item,index) => {\r\n              return {\r\n                title:item.metadata.map((m) => m.label).join(\".\"),\r\n                value:index\r\n              }  \r\n          });\r\n        \r\n        dialog({\r\n          \r\n          title:\"Merge Columns\",\r\n          fields:{\r\n            master:{\r\n              title:\"Master column\",\r\n              type:\"select\",\r\n              options:rows\r\n            },\r\n            slave:{\r\n              title:\"Slave column\",\r\n              type:\"select\",\r\n              options:rows\r\n            }\r\n          }\r\n\r\n        }).then((form) => {\r\n          let indexes; \r\n          $scope.pushOp({\r\n            shortName:  \"merge(direction:'Columns',master:\"+form.fields.master.value+\",slave:\"+form.fields.slave.value+\")\",//\"Merge Columns(\"+form.fields.master.value+\",\"+form.fields.slave.value+\")\",\r\n            merge : {\r\n              \"enable\" : true,\r\n              \"direction\" : \"Columns\",\r\n              \"master\" : form.fields.master.value,\r\n              \"slave\" : form.fields.slave.value\r\n            }\r\n          })  \r\n        })\r\n      }\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    $scope.operations.push({\r\n      title:\"Format numbers\",\r\n      action: () => {\r\n        dialog({\r\n          title:\"Format numbers\",\r\n          fields:{\r\n            precision:{\r\n              title:\"Float Precision\",\r\n              type:\"number\",\r\n              value:2,\r\n              min:0,\r\n              max:5\r\n            }\r\n          }\r\n        }).then((form) => {\r\n          $scope.pushOp({\r\n            shortName: \"format(precision:\"+form.fields.precision.value+\")\",//\"Number precision: \"+form.fields.precision.value,\r\n            precision:form.fields.precision.value\r\n          })\r\n        })\r\n\r\n      }\r\n    });\r\n\r\n    $scope.operations.push({\r\n      title:\"Transpose Table\",\r\n      action: () => {\r\n        $scope.pushOp({\r\n          shortName:\"transpose()\",\r\n          transpose:true\r\n        })\r\n      }\r\n    }); \r\n\r\n     $scope.operations.push({\r\n      title:\"Inputation\",\r\n      action: () => {\r\n        $scope.pushOp({\r\n          shortName: \"imput(direction:'Row', mode:'fill', from:'left'\",//\"Inputation\",\r\n          inputation : {\r\n              \"enable\" : true,\r\n              \"direction\": \"Row\",\r\n              \"mode\": \"fill\",\r\n              \"from\":\"left\"\r\n          }    \r\n        })\r\n      }\r\n    }); \r\n\r\n    $scope.operations.push({\r\n      title:\"Sort Rows\",\r\n      action: () => {\r\n        \r\n        let criterias = $scope.resultTable.body[0].metadata\r\n          .map((m,index) => {\r\n            return { \"title\" : m.dimensionLabel, \"value\": (-index-1)}\r\n          }).concat(\r\n            $scope.resultTable.header.map((item,index) => {\r\n              return { \"title\" : item.metadata.map((m) => m.label).join(\".\"), \"value\" : index }\r\n            })\r\n          );\r\n\r\n        dialog({\r\n          title:\"Sort Rows\",\r\n          fields:{\r\n            asc:{\r\n              title:\"Order\",\r\n              type:\"select\",\r\n              value:\"A-Z\",\r\n              options:[\"A-Z\",\"Z-A\"]\r\n            },\r\n            index:{\r\n              title:\"Criteria\",\r\n              type:\"select\",\r\n              value:'',\r\n              options: criterias\r\n            }\r\n          }\r\n        }).then((form) =>{\r\n          $scope.pushOp({\r\n            shortName:\"order(direction:'Row', asc:'\"+form.fields.asc.value+\"', index:\"+form.fields.index.value+\")\",\r\n            // \"Sort Rows \"+form.fields.asc.value+\" order by \"\r\n            //   +criterias.filter((item) => { return (item.value - form.fields.index.value) == 0 })[0].title,\r\n            order:{\r\n              enable    :true,\r\n              direction :\"Rows\",\r\n              asc       :form.fields.asc.value,\r\n              index     :form.fields.index.value\r\n            }\r\n          })  \r\n        })\r\n\r\n      }\r\n    });\r\n\r\n $scope.operations.push({\r\n      title:\"Sort Columns\",\r\n      action: () => {\r\n        \r\n        let criterias = $scope.resultTable.header[0].metadata\r\n          .map((m,index) => {\r\n            return { \"title\" : m.dimensionLabel, \"value\": (-index-1)}\r\n          }).concat(\r\n            $scope.resultTable.body.map((item,index) => {\r\n              return { \"title\" : item.metadata.map((m) => m.label).join(\".\"), \"value\" : index }\r\n            })\r\n          );\r\n\r\n        dialog({\r\n          title:\"Sort Columns\",\r\n          fields:{\r\n            asc:{\r\n              title:\"Order\",\r\n              type:\"select\",\r\n              value:\"A-Z\",\r\n              options:[\"A-Z\",\"Z-A\"]\r\n            },\r\n            index:{\r\n              title:\"Criteria\",\r\n              type:\"select\",\r\n              value:'',\r\n              options: criterias\r\n            }\r\n          }\r\n        }).then((form) =>{\r\n          $scope.pushOp({\r\n            shortName: \"order(direction:'Columns', asc:'\"+form.fields.asc.value+\"', index:\"+form.fields.index.value+\")\",\r\n            // \"Sort Columns \"+form.fields.asc.value+\" order by \"\r\n            //   +criterias.filter((item) => item.value == form.fields.index.value)[0].title,\r\n            order:{\r\n              enable    :true,\r\n              direction :\"Columns\",\r\n              asc       :form.fields.asc.value,\r\n              index     :form.fields.index.value\r\n            }\r\n          })  \r\n        })\r\n\r\n      }\r\n    });\r\n\r\n    $scope.operations.push({\r\n      title:\"Reduce Row Metadata\",\r\n     \r\n      action: () => {\r\n\r\n        \r\n        dialog({\r\n          title:\"Reduce Row Metadata\",\r\n          fields:{\r\n            rows:{\r\n              title:\"Metadata Item\",\r\n              type:\"checkgroup\",\r\n              value:$scope.resultTable.body[0].metadata.map((item) => item.dimensionLabel)\r\n            }\r\n          },\r\n          validate: (form) =>{\r\n            let oneOrMore = false;\r\n              form.fields.rows.value.forEach((item) => {\r\n                oneOrMore |= item.value\r\n              })\r\n              return oneOrMore;\r\n          }\r\n\r\n        }).then((form) => {\r\n           $scope.pushOp({\r\n              shortName: \"reduceMeta(useRowMetadata:\"+JSON.stringify(form.fields.rows.value.map((item) => item.value))+\")\",\r\n              // \"Use Row Metadata(\"+\r\n              //   form.fields.rows.value\r\n              //   .filter((item) => item.value)\r\n              //   .map((item) => item.title)\r\n              //   .join(\",\")\r\n              //   +\")\",\r\n              useRowMetadata : form.fields.rows.value.map((item) => item.value)\r\n           }) \r\n        })\r\n\r\n      }\r\n    });\r\n\r\n    $scope.operations.push({\r\n      title:\"Reduce Column Metadata\",\r\n     \r\n      action: () => {\r\n\r\n        \r\n        dialog({\r\n          title:\"Reduce Column Metadata\",\r\n          fields:{\r\n            rows:{\r\n              title:\"Metadata Item\",\r\n              type:\"checkgroup\",\r\n              value:$scope.resultTable.header[0].metadata.map((item) => item.dimensionLabel)\r\n            }\r\n          },\r\n          validate: (form) =>{\r\n            let oneOrMore = false;\r\n              form.fields.rows.value.forEach((item) => {\r\n                oneOrMore |= item.value\r\n              })\r\n              return oneOrMore;\r\n          }\r\n\r\n        }).then((form) => {\r\n           $scope.pushOp({\r\n              shortName: \"reduceMeta(useColumnMetadata:\"+JSON.stringify(form.fields.rows.value.map((item) => item.value))+\")\",\r\n              // \"Use Column Metadata(\"+\r\n              //   form.fields.rows.value\r\n              //   .filter((item) => item.value)\r\n              //   .map((item) => item.title)\r\n              //   .join(\",\")\r\n              //   +\")\",\r\n              useColumnMetadata : form.fields.rows.value.map((item) => item.value)\r\n           }) \r\n        })\r\n\r\n      }\r\n    });\r\n\r\n    $scope.operations.push({\r\n      title:\"Limit Rows\",\r\n      action: () => {\r\n        dialog({\r\n          title:\"Limit Rows\",\r\n          fields:{\r\n            start:{\r\n              title:\"Start Position\",\r\n              type:\"number\",\r\n              value:1,\r\n              min:1,\r\n              max:$scope.resultTable.body.length\r\n            },\r\n            length:{\r\n              title:\"Row Count\",\r\n              type:\"number\",\r\n              value:1,\r\n              min:1\r\n            }\r\n          }\r\n\r\n        }).then((form) => {\r\n           $scope.pushOp({\r\n              shortName:\"limit(start:\"+form.fields.start.value+\", length:\"+ form.fields.length.value+\")\",\r\n              limit : {\r\n                \"enable\" : true,\r\n                \"start\" : form.fields.start.value,\r\n                \"length\":form.fields.length.value,\r\n              }\r\n           }) \r\n        })\r\n\r\n      }\r\n    });\r\n\r\n    // $dps\r\n    //   .get(\"/api/data/process/\"+source.context.queryResultId)\r\n    //   .success(function (resp) {\r\n    //       $scope.resultTable = resp.value;\r\n    //       $scope.data_id = resp.data_id;\r\n    //       $scope.pushOp({\r\n    //         shortName: \"source(table:'\"+source.context.queryResultId+\"')\",//\"Select \"+source.$title+\"(\"+ source.context.queryResultId +\")\",\r\n    //         select:{\r\n    //           \"source\":source.$title\r\n    //         }\r\n    //       })\r\n          \r\n    // });\r\n\r\n    \r\n    $scope.runScript = () =>{\r\n      let script = $scope.script.filter((item,index) => index<=$scope.cursor)\r\n      $scope.resultTable = undefined;\r\n\r\n      console.log(\"RUN SCRIPT\", script.map(item => item.shortName).join(\";\"))//+\";save()\")\r\n      \r\n\r\n      $dps\r\n          .post(\"/api/data/script\",{\r\n            \"data\"  : script.map(item => item.shortName).join(\";\"),//+\";save()\",\r\n            \"locale\": i18n.locale()\r\n          })\r\n          .success(function (resp) {\r\n            console.log(resp)\r\n              $scope.resultTable = resp.data;\r\n              // $scope.data_id = resp.data.data_id;\r\n\r\n          })\r\n    }   \r\n\r\n    $scope.addOp = ()=>{\r\n      dialog({\r\n        title:\"Add Operation\",\r\n        fields:{\r\n          operation:{\r\n            title:\"Operation\",\r\n            type:\"select\",\r\n            options:$scope.operations.map((item, index) => {return {title:item.title,value:index}}) \r\n          }\r\n        }\r\n      }).then((form) => {\r\n        $scope.operations[form.fields.operation.value].action();\r\n      })\r\n    }\r\n\r\n    setTimeout(function(){\r\n      $scope.pushOp({\r\n            shortName: \"source(table:'\"+source.context.queryResultId+\"')\"\r\n          })  \r\n    },0)\r\n    \r\n\r\n})\r\n\r\n\r\nm.controller(\"JoinDialogController\", function(\r\n  $scope, \r\n  $modalInstance,\r\n  $http,\r\n  $dps,\r\n  pageWidgets,\r\n  source,\r\n  dialog,\r\n  Queries,\r\n  app,\r\n  i18n){\r\n\r\n    $scope.queries = [];\r\n\r\n    pageWidgets()\r\n      .filter((item) => item.type ==\"v2.query-manager\")\r\n      .map((item) => item.queries)\r\n      .forEach((item) => {$scope.queries = $scope.queries.concat(item)})\r\n\r\n    $scope.t1_data_id = source.context.queryResultId;\r\n    $scope.t1_title = source.$title;\r\n\r\n    $dps\r\n        .get(\"/api/data/process/\"+$scope.t1_data_id)\r\n        .success(function (resp) {\r\n            $scope.t1 = resp.value;\r\n            $scope.t1_data_id = resp.id;\r\n            $scope.t1_meta = ($scope.t1.body.length>0) \r\n              ? $scope.t1.body[0].metadata.map((item,index)=>{return {\r\n                title:item.dimensionLabel,\r\n                value:index\r\n              }})\r\n              : [];\r\n        })    \r\n\r\n    \r\n    function _init(){\r\n      $scope.test = [];\r\n      $scope.t2_title = undefined;\r\n      $scope.t2 = undefined;\r\n      $scope.t2_data_id = undefined;\r\n    }  \r\n\r\n    _init();\r\n\r\n\r\n    var queryTest = () => {\r\n      \r\n      if(!$scope.t2_title) {\r\n        $scope.complete = false;\r\n        return\r\n      }  \r\n      if(!$scope.mode){\r\n        $scope.complete = false;\r\n        return\r\n      }\r\n      if(!$scope.t1_data_id){\r\n        $scope.complete = false;\r\n        return\r\n      }\r\n      if(!$scope.t2_data_id){\r\n        $scope.complete = false;\r\n        return\r\n      }\r\n      $scope.complete = true;\r\n      $scope.getJoin();\r\n    }\r\n\r\n\r\n      \r\n    $scope.selectQuery = (q) => {\r\n      _init();\r\n\r\n      $scope.t2_title = q.$title;\r\n\r\n      $dps\r\n        .get(\"/api/data/process/\"+q.context.queryResultId)\r\n        .success(function (resp) {\r\n            $scope.t2 = resp.value;\r\n            $scope.t2_data_id = resp.id;\r\n            $scope.t2_meta = ($scope.t2.body.length>0) \r\n              ? $scope.t2.body[0].metadata.map((item,index)=>{return {\r\n                title:item.dimensionLabel,\r\n                value:index\r\n              }})\r\n              : [];\r\n             queryTest()    \r\n        })\r\n         \r\n    } \r\n\r\n    $scope.addRowTest = () => {\r\n      dialog({\r\n        title:\"Add Row Test\",\r\n        fields:{\r\n          t1:{\r\n            title:\"Table 1 Row Meta\",\r\n            type:\"select\",\r\n            value:'',\r\n            options:$scope.t1_meta\r\n          },\r\n          t2:{\r\n            title:\"Table 2 Row Meta\",\r\n            type:\"select\",\r\n            value:'',\r\n            options:$scope.t2_meta\r\n          }\r\n        }\r\n      }).then((form) => {\r\n        $scope.test.push([form.fields.t1.value, form.fields.t2.value])\r\n        queryTest()\r\n      })\r\n    } \r\n\r\n    $scope.deleteRowTest = (index) => {\r\n      $scope.test.splice(index,1)\r\n      queryTest()\r\n    }\r\n\r\n    $scope.selectMode = (m) => {\r\n      $scope.mode = m;\r\n      queryTest();\r\n    }\r\n\r\n    $scope.condition = () => {\r\n      return $scope.test.map((t) => {\r\n        return  \"( \"\r\n                +$scope.t1_title\r\n                +\".\"\r\n                +$scope.t1_meta[t[0]].title\r\n                +\" = \"\r\n                +$scope.t2_title\r\n                +\".\"\r\n                +$scope.t2_meta[t[1]].title\r\n                +\" )\"\r\n      }).join(\" AND \");\r\n    }\r\n\r\n\r\n    $scope.getJoin = () => {\r\n\r\n      $scope.resultTable = undefined;\r\n      $scope.loaded = true;\r\n      $dps\r\n          .post(\"/api/data/script\",{\r\n            \"data\"  : \r\n               \"source(table:'\"+$scope.t2_data_id+\"')\"\r\n              +\"set('t1')\"\r\n              + \"source(table:'\"+$scope.t1_data_id+\"')\"\r\n              +\"join(with:'{{t1}}', mode:'\"+$scope.mode+\"', on:\"+JSON.stringify($scope.test)+\")\"\r\n              +\"cache()\",\r\n            \"locale\": i18n.locale()\r\n          })\r\n\r\n      // $dps\r\n      //     .post(\"/api/data/process/\",\r\n      //       {\r\n      //         \"cache\": false,\r\n      //         \"data_id\": [$scope.t1_data_id,$scope.t2_data_id],\r\n      //         \"params\": {\r\n      //           join:{\r\n      //             enable : true,\r\n      //             mode : $scope.mode,\r\n      //             test:$scope.test\r\n      //           }  \r\n      //         },\r\n      //         \"proc_name\": \"post-process\",\r\n      //         \"response_type\": \"data\"\r\n      //       }    \r\n      //     )\r\n          .success(function (resp) {\r\n              $scope.resultTable = resp.data.data;\r\n              $scope.loaded = false;\r\n              $scope.data_id = resp.data.data_id;\r\n          })\r\n\r\n    }\r\n\r\n    $scope.save = () => {\r\n\r\n      dialog({\r\n        title:\"Enter Table Name\",\r\n        fields:{\r\n          name:{\r\n            title:\"Table Name\",\r\n            type:\"text\",\r\n            value:\"\"\r\n          }\r\n        },\r\n        validate: (form) => {\r\n          let f1 = form.fields.name.value.length > 0;\r\n          let f2 = $scope.queries.map((item) => item.$title).indexOf(form.fields.name.value) == -1;\r\n          return (f1&&f2)\r\n        }\r\n\r\n      }).then((form) => {\r\n\r\n        Queries.add(\r\n          angular.copy({\r\n            queryResultId: $scope.data_id, \r\n            }), \"preparation\", form.fields.name.value);\r\n        app.markModified();\r\n        $modalInstance.close();  \r\n      })\r\n    }\r\n\r\n    $scope.cancel = () => {$modalInstance.close()}\r\n})\r\n\r\n\r\n\r\n\r\nm.controller('QueryManagerController', function (\r\n    $scope,\r\n    $http,\r\n    $dps,\r\n    $modal, \r\n    APIProvider,\r\n    EventEmitter,\r\n    pageSubscriptions,\r\n    Queries,\r\n    app,\r\n    confirm,\r\n    dialog,\r\n    pageWidgets,\r\n    ProjectionWizard\r\n    ){\r\n\r\n    $scope.addProjection = (context,title) => {\r\n      Queries.add(angular.copy(context), \"projection\", title);\r\n      app.markModified();\r\n    }\r\n\r\n    $scope.addPreparation = (context,title) => {\r\n      Queries.add(angular.copy(context), \"preparation\", title);\r\n      app.markModified();\r\n    }\r\n\r\n    $scope.getQuery = (context) => Queries.getQuery( context );\r\n\r\n    $scope.invokeAddProjectionWizard = () => {\r\n      $scope.wizard = ProjectionWizard;\r\n      $scope.wizard.start($scope);\r\n    }\r\n\r\n\r\n    \r\n     $scope.invokeAddJoinWizard = () => {\r\n      \r\n      let queries = [];\r\n\r\n          pageWidgets()\r\n            .filter((item) => item.type ==\"v2.query-manager\")\r\n            .map((item) => item.queries)\r\n            .forEach((item) => {queries = queries.concat(item)})\r\n\r\n      dialog({\r\n        title:\"Select Join Source\",\r\n        note:\"One from available sources shuld be selected\", \r\n        fields:{\r\n          source:{\r\n            title:\"Source\",\r\n            type:\"select\",\r\n            options: queries.map((item,index) => {return {title:item.$title,value:index}})\r\n          }\r\n        }\r\n      }).then((form) =>{\r\n        $modal.open({\r\n          templateUrl: '/widgets/v2.query-manager/join-dialog.html',\r\n          // windowClass: 'dialog-modal',\r\n          backdrop: 'static',\r\n          controller: 'JoinDialogController',\r\n          resolve: {\r\n            source: () => queries[form.fields.source.value]\r\n          }\r\n        })\r\n      })\r\n    }   \r\n\r\n    $scope.invokeAddPreparationWizard = () => {\r\n      \r\n      let queries = [];\r\n\r\n          pageWidgets()\r\n            .filter((item) => item.type ==\"v2.query-manager\")\r\n            .map((item) => item.queries)\r\n            .forEach((item) => {queries = queries.concat(item)})\r\n\r\n      dialog({\r\n        title:\"Select Preparation Source\",\r\n        note:\"One from available sources shuld be selected\", \r\n        fields:{\r\n          source:{\r\n            title:\"Source\",\r\n            type:\"select\",\r\n            options: queries.map((item,index) => {return {title:item.$title,value:index}})\r\n          }\r\n        }\r\n      }).then((form) =>{\r\n       \r\n        $modal.open({\r\n            templateUrl: 'widgets/v2.query-manager/preparation-dialog.html',\r\n            controller: 'PreparationDialogController',\r\n            backdrop: 'static',\r\n            resolve: {\r\n              source: function () {\r\n                    return queries[form.fields.source.value];\r\n                }\r\n              }\r\n           })\r\n          .result.then(function (newQuery) {\r\n\r\n          });\r\n      })\r\n    }\r\n\r\n    $scope.select = (query) => {\r\n        $scope.preview = undefined;\r\n        $scope.selected = query;\r\n        $scope.selectedScript = (query.context.script)\r\n          ? \"Script: \"+ query.context.script\r\n              .map((item) => item.shortName).join(\". \")\r\n              +\". Data ID: \"\r\n              +query.context.queryResultId\r\n          : \"Data ID: \"+query.context.queryResultId; \r\n       \r\n       $dps\r\n        .get(\"/api/data/process/\"+query.context.queryResultId)\r\n        .success(function (resp) {\r\n            $scope.preview = resp.value;\r\n\r\n        })\r\n    }\r\n\r\n    $scope.del = (query) => {\r\n      confirm(\"Delete query \"+query.$title+\" ?\").then(() => {\r\n        Queries.remove(query.$id);\r\n        app.markModified();\r\n      })\r\n    }\r\n\r\n    $scope.getQueries = () => $scope.widget.queries;\r\n    \r\n    this.getQueries = $scope.getQueries;\r\n\r\n    new APIProvider($scope)\r\n      .config(() => {\r\n        Queries.init($scope)\r\n      })\r\n  });\r\n\r\n\r\n\r\n\r\n  "],"sourceRoot":"/source/"}