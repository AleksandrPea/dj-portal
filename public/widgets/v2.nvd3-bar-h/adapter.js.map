{"version":3,"sources":["v2.nvd3-bar-h/adapter.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,kBAAkB,UAAU,KAAK,EAAE,OAAO,OAAO,IAAI,aAAa,IAAI,aAAa;;AAEvF,IAJO,UAAO,gBAAA,QAAM;;AAGpB,IAAM,IAAI,QAAQ,OAAO,qCAAqC;;AAE9D,EAAE,QAAQ,oBAAoB,YAAY;;EAExC,KAAK,gBAAgB,UAAC,WAAU,UAAS,KAAQ;IAC/C,IAAI,OAAO,GAAG,OAAO,IAAI,UAAU;IACnC,SAAS,KAAK,QAAQ,UAAC,GAAM;MAC3B,IAAI,IAAI,UAAU,OAAO,UAAA,GAAC;QAIxB,OAJ4B,EAAE,OAAO,EAAE;SAAK;MAC9C,IAAG,GAAE;QACH,EAAE,WAAY,EAAE;;;IAGpB,OAAO;;;EAGT,KAAK,iBAAiB,KAAK;;EAE3B,KAAK,kBAAkB,UAAU,SAAS,YAAY,UAAS,KAAK;IAClE,IAAI,QAAQ,UAAU,eAAe,QAAQ,UAAU,UAAU;;MAE/D,QAAQ,MAAM,SAAS,WAAW;MAClC,QAAQ,MAAM,OAAO,WAAW;MAChC,QAAQ,SAAS,OAAO,WAAW;MACnC,QAAQ,QAAQ,OAAO,WAAW;MAClC,QAAQ,MAAM,MAAM,YAAY,WAAW;MAC3C,QAAQ,MAAM,MAAM,YAAY,WAAW;;;;MAI3C,QAAQ,MAAM,eAAe,WAAW;MACxC,QAAQ,MAAM,UAAU,WAAW;MACnC,QAAQ,MAAM,QAAQ,WAAY,QAAS,WAAW,QAAQ;;MAE7D,IAAG,WAAW,kBAAiB;;QAE9B,IAAG,KAAI;;UAEL,IAAI,QAAQ,YAAU;YAClB,GACG,OAAO,IAAI,UACX,UAAU,YACV,MAAM,UAAU;;;;QAKzB,QAAQ,MAAM,OAAO,WAAW;UAC9B,aAAa,SAAA,YAAS,GAAG;YACvB,SAAS,YAAY,EAAE;;;;QAI3B,QAAQ,MAAM,SAAS,WAAW;UAChC,cAAe,SAAA,aAAS,GAAG;YACzB,SAAS,aAAa,EAAE,MAAM;YAC9B,IAAI,SAAS,GACV,OAAO,IAAI,UACX,OAAO,SACP,UAAU,QACV,MAAM,QAAO,UAAS,GAAE;cACvB,IAAI,IAAI,SAAS,OAAO;cACxB,OAAQ,KAAK,EAAE,WAAY,YAAW;eAEvC,MAAM,eAAc,UAAS,GAAE;cAC9B,IAAI,IAAI,SAAS,OAAO;cACxB,OAAO,KAAM,EAAE,WAAY,WAAU;;;;UAI3C,iBAAiB,SAAA,gBAAS,GAAG;YAC3B,SAAS,gBAAgB,EAAE,MAAM;YACjC,IAAI,SAAS,GACV,OAAO,IAAI,UACX,OAAO,SACP,UAAU,QACV,MAAM,QAAO,UAAS,GAAE;cACvB,IAAI,IAAI,SAAS,OAAO;cACxB,OAAO,KAAM,EAAE,WAAY,YAAW;eAEvC,MAAM,eAAc,UAAS,GAAE;cAC9B,IAAI,IAAI,SAAS,OAAO;cACxB,OAAO,KAAM,EAAE,WAAY,WAAU;;;;;;IAOjD,OAAO;;;EAGT,KAAK,gBAAgB,UAAU,SAAS;IACtC,IAAI,QAAQ,UAAU,UAAU;MAC9B,IAAI,aAAa;MACjB,WAAW,SAAS,QAAQ,MAAM;MAClC,WAAW,QAAQ,QAAQ,MAAM;MACjC,WAAW,WAAW,QAAQ,SAAS;MACvC,WAAW,UAAU,QAAQ,QAAQ;MACrC,WAAW,YAAY,QAAQ,MAAM,MAAM;MAC3C,WAAW,YAAY,QAAQ,MAAM,MAAM;;;;MAI3C,WAAW,QAAQ,QAAQ,MAAM;MACjC,WAAW,eAAe,QAAQ,MAAM;MACxC,WAAW,UAAU,QAAQ,MAAM;MACnC,OAAO;;;GAGX","file":"v2.nvd3-bar-h/adapter.js","sourcesContent":["import angular from 'angular';\r\n\r\n\r\nconst m = angular.module('app.widgets.v2.hbar-chart-adapter', []);\r\n\r\nm.service('HBarChartAdapter', function () {\r\n\r\n  this.onSelectSerie = (selection,settings,api) => {\r\n    let data = d3.select(api.getSVG()).data();\r\n    settings.data.forEach((s) => {\r\n      let f = selection.filter(l => l.key == s.key)[0]\r\n      if(f){\r\n        s.disabled =  f.disabled\r\n      }\r\n    })\r\n    return settings;\r\n  }\r\n\r\n  this.onSelectObject = this.onSelectSerie;\r\n  \r\n  this.applyDecoration = function (options, decoration, selector,api) {\r\n    if (angular.isDefined(decoration) && angular.isDefined(options)) {\r\n      //console.log(options)\r\n      options.chart.height = decoration.height;\r\n      options.title.text = decoration.title;\r\n      options.subtitle.text = decoration.subtitle;\r\n      options.caption.text = decoration.caption;\r\n      options.chart.xAxis.axisLabel = decoration.xAxisName;\r\n      options.chart.yAxis.axisLabel = decoration.yAxisName;\r\n      // options.chart.xAxis.staggerLabels = decoration.staggerLabels;\r\n      // options.chart.rotateLabels = decoration.xAxisAngle;\r\n      // options.chart.reduceXTicks = decoration.reduceXTicks;\r\n      options.chart.showControls = decoration.showControls;\r\n      options.chart.stacked = decoration.stacked;\r\n      options.chart.color = (decoration.color) ? decoration.color : null;\r\n\r\n       if(decoration.enableEmitEvents){\r\n        \r\n        if(api){\r\n          \r\n          api.onReady(function(){\r\n              d3\r\n                .select(api.getSVG())\r\n                .selectAll(\"g.nv-bar\")\r\n                .style(\"cursor\", \"pointer\");  \r\n            })\r\n          \r\n        }\r\n\r\n        options.chart.legend.dispatch = {\r\n          stateChange: function(e) {\r\n            selector.selectSerie(e.disabled);\r\n          }\r\n        }\r\n\r\n        options.chart.multibar.dispatch = {\r\n          elementClick : function(e) {\r\n            selector.selectObject(e.point.label);\r\n            var labels = d3\r\n              .select(api.getSVG())\r\n              .select(\".nv-x\")\r\n              .selectAll(\"text\")\r\n              .style(\"fill\",function(d){\r\n                var o = selector.object(d);\r\n                return (o && o.disabled) ? \"#000000\": \"#f04124\"\r\n              })\r\n              .style(\"font-weight\",function(d){\r\n                var o = selector.object(d);\r\n                return (o && o.disabled) ? \"normal\": \"bold\"\r\n              })\r\n          },\r\n          \r\n          elementDblClick: function(e) {\r\n            selector.selectOneObject(e.point.label);\r\n            var labels = d3\r\n              .select(api.getSVG())\r\n              .select(\".nv-x\")\r\n              .selectAll(\"text\")\r\n              .style(\"fill\",function(d){\r\n                var o = selector.object(d);\r\n                return (o && o.disabled) ? \"#000000\": \"#f04124\"\r\n              })\r\n              .style(\"font-weight\",function(d){\r\n                var o = selector.object(d);\r\n                return (o && o.disabled) ? \"normal\": \"bold\"\r\n              })\r\n          }\r\n        }\r\n\r\n      }\r\n    }\r\n    return options;\r\n  }\r\n\r\n  this.getDecoration = function (options) {\r\n    if (angular.isDefined(options)) {\r\n      var decoration = {}\r\n      decoration.height = options.chart.height;\r\n      decoration.title = options.title.text;\r\n      decoration.subtitle = options.subtitle.text;\r\n      decoration.caption = options.caption.text;\r\n      decoration.xAxisName = options.chart.xAxis.axisLabel;\r\n      decoration.yAxisName = options.chart.yAxis.axisLabel;\r\n      // decoration.xAxisAngle = options.chart.rotateLabels;\r\n      // decoration.reduceXTicks = options.chart.reduceXTicks;\r\n      // decoration.staggerLabels = options.chart.xAxis.staggerLabels;\r\n      decoration.color = options.chart.color;\r\n      decoration.showControls = options.chart.showControls;\r\n      decoration.stacked = options.chart.stacked;\r\n      return decoration;\r\n    }\r\n  }\r\n});"],"sourceRoot":"/source/"}