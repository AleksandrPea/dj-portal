{"version":3,"sources":["v2.app-description/widget.js"],"names":[],"mappings":"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","file":"v2.app-description/widget.js","sourcesContent":["import angular from 'angular';\r\n\r\nangular.module('app.widgets.v2.app-description', [])\r\n  .controller('AppDescController', function (\r\n      $scope, \r\n      APIProvider,\r\n      EventEmitter,\r\n      config,\r\n      author,\r\n      pageSubscriptions,\r\n      i18n,\r\n      $http,\r\n      appUrls,\r\n      $translate,\r\n      prompt, alert, user, dialog\r\n\r\n  ) {\r\n\r\n\r\n    $scope.visibility = true;\r\n    $scope.formatDate = i18n.formatDate;\r\n    \r\n    var emitter = new EventEmitter($scope);\r\n\r\n    $http.get(appUrls.appList)\r\n        .success(apps => {\r\n          apps.forEach((c) =>{\r\n            if(c.i18n){\r\n              config.i18n = (config.i18n)? config.i18n : {}; \r\n              for(let locale in c.i18n){\r\n                config.i18n[locale] = (config.i18n[locale]) ? config.i18n[locale] : {};\r\n                angular.extend(config.i18n[locale],c.i18n[locale])  \r\n              }\r\n            }  \r\n          })\r\n          i18n.refresh();\r\n        });\r\n\r\n    $scope.refresh = function(){\r\n      emitter.emit(\"refresh\")\r\n    };\r\n\r\n    $scope.renameApp = function(app) {\r\n      dialog({\r\n        title:`${$translate.instant('WIDGET.V2.APP-DESCRIPTION.RENAME')}`,\r\n        fields:{\r\n          oldName:{\r\n            title:`${$translate.instant('WIDGET.V2.APP-DESCRIPTION.NAME')}:`, \r\n            type:'text', \r\n            value: app.name, \r\n            editable:false\r\n          },\r\n          newName:{\r\n            title:`${$translate.instant('WIDGET.V2.APP-DESCRIPTION.NEW_NAME')}:`, \r\n            type:'text', \r\n            value: '', \r\n            editable:true,\r\n            required:true\r\n          }\r\n        }  \r\n      }).then ((form) => {\r\n        let newAppName = form.fields.newName.value;\r\n      // })\r\n\r\n      // prompt(`${$translate.instant('WIDGET.V2.APP-DESCRIPTION.NEW_NAME')}:`)\r\n      //   .then(newAppName => {\r\n            $http.get(appUrls.api.rename(app.id, newAppName))\r\n              .success(()=>{\r\n                $scope.refresh();\r\n              })\r\n              .error((data, error) => {\r\n                this.restoreApps();\r\n                alert.error($translate.instant('WIDGET.V2.APP-DESCRIPTION.ERROR_RENAMING_APP', {error, data}));\r\n              });\r\n          });\r\n    };\r\n\r\n    $scope.deleteApp = function(app) {\r\n      dialog({\r\n        title: $translate.instant('WIDGET.V2.APP-DESCRIPTION.TYPE_APP_NAME_TO_CONFIRM_DELETION'),\r\n        fields:{\r\n           name:{\r\n                  title:`${$translate.instant('WIDGET.V2.APP-DESCRIPTION.NAME')}:`, \r\n                  type:'text', \r\n                  value: '', \r\n                  editable:true,\r\n                  required:true\r\n                }\r\n        }\r\n      }).then((form) => {\r\n        let confirmName = form.fields.name.value;\r\n      // prompt($translate.instant('WIDGET.V2.APP-DESCRIPTION.TYPE_APP_NAME_TO_CONFIRM_DELETION'))\r\n      //   .then(confirmName => {\r\n          if (confirmName !== app.name) {\r\n            alert.error($translate.instant('WIDGET.V2.APP-DESCRIPTION.WRONG_NAME_APP_NOT_DELETED'));\r\n            return;\r\n          }\r\n\r\n          $http.get(appUrls.api.destroy(app.id))\r\n          .success(() => {\r\n            $scope.refresh();\r\n          })\r\n          .error((data, error) => {\r\n            $scope.refresh();\r\n            alert.error($translate.instant('WIDGET.V2.APP-DESCRIPTION.ERROR_DELETING_APP'));\r\n          });\r\n        });\r\n    };\r\n\r\n    $scope.isAdmin = function(){\r\n      return user.isAdmin\r\n    }\r\n\r\n    $scope.isOwner = function(app) {\r\n      if (!user.id) {\r\n        return false;\r\n      }\r\n      if (!app.owner) {\r\n        return true;\r\n      }\r\n      return app.owner.id === user.id;\r\n    };\r\n\r\n    $scope.isCollaborator = function(app) {\r\n      if (!user.id) {\r\n        return false;\r\n      }\r\n      if (!app.collaborations) {\r\n        return false;\r\n      }\r\n      return angular.isUndefined(app.collaborations.find(c => c.user.id === user.id));\r\n    };\r\n\r\n    $scope.selectTag = (tag)=>{\r\n      emitter.emit(\"setTag\",[tag])\r\n    }\r\n    \r\n    new APIProvider($scope)\r\n      .config(() => {\r\n        $scope.author = author;\r\n        $scope.config = config;\r\n        // $scope.app = ($scope.app)? $scope.app : config;\r\n        \r\n        if($scope.widget.tagListeners){\r\n          pageSubscriptions().removeListeners({\r\n            emitter: $scope.widget.instanceName,\r\n            signal: \"setTag\"\r\n          })\r\n          $scope.tagListeners = ($scope.widget.tagListeners) ? $scope.widget.tagListeners.split(\",\") : [];\r\n          \r\n          pageSubscriptions().addListeners(\r\n            $scope.tagListeners.map((item) =>{\r\n              return {\r\n                  emitter: $scope.widget.instanceName,\r\n                  receiver: item.trim() ,\r\n                  signal: \"setTag\",\r\n                  slot: \"setTag\"\r\n              }\r\n            })\r\n          );\r\n\r\n        }  \r\n\r\n        if($scope.widget.appWidget){\r\n          \r\n          pageSubscriptions().removeListeners({\r\n            receiver: $scope.widget.instanceName,\r\n            signal: \"setApplication\"\r\n          })\r\n\r\n          pageSubscriptions().removeListeners({\r\n            sender: $scope.widget.instanceName,\r\n            signal: \"refresh\"\r\n          })\r\n\r\n          $scope.widget.appListeners = ($scope.widget.appWidget) ? $scope.widget.appWidget.split(\",\") : [];\r\n          \r\n          pageSubscriptions().addListeners(\r\n            $scope.widget.appListeners.map((item) =>{\r\n              return {\r\n                  emitter: item.trim(),\r\n                  receiver:  $scope.widget.instanceName,\r\n                  signal: \"setApplication\",\r\n                  slot: \"setApplication\"\r\n              }\r\n            })\r\n          );\r\n\r\n          pageSubscriptions().addListeners(\r\n            $scope.widget.appListeners.map((item) =>{\r\n              return {\r\n                  emitter: $scope.widget.instanceName,\r\n                  receiver:  item.trim(),\r\n                  signal: \"refresh\",\r\n                  slot: \"refresh\"\r\n              }\r\n            })\r\n          );\r\n        }  \r\n\r\n\r\n      })\r\n\r\n      .provide(\"setApplication\", (evt, app) => {\r\n        console.log(\"set app\", evt, app)\r\n          $scope.app = app;\r\n      })\r\n\r\n      // .translate(() => {\r\n      //   // console.log('translate app desc')\r\n      //   // if(!$scope.app) $scope.app = $scope.app\r\n      // })\r\n      \r\n  });\r\n"],"sourceRoot":"/source/"}