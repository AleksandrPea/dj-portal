{"version":3,"sources":["table/data-widget.js"],"names":[],"mappings":"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","file":"table/data-widget.js","sourcesContent":["define([\r\n    'angular',\r\n    'angular-oclazyload',\r\n    'widgets/data-util/adapter'\r\n  ],\r\n  function (angular) {\r\n\r\n\r\n    var m = angular.module('app.widgets.data-widget',\r\n      ['oc.lazyLoad',\r\n        'app.widgets.data-util.adapter'\r\n      ]);\r\n\r\n\r\n    m.factory('DataWidget', ['$ocLazyLoad', 'APIProvider', 'APIUser', 'adapter', 'pageSubscriptions',\r\n\r\n      function ($ocLazyLoad, APIProvider, APIUser, adapter, pageSubscriptions) {\r\n\r\n        $ocLazyLoad.load({\r\n          files: [\r\n            '/widgets/table/data-widget.css'\r\n          ]\r\n        });\r\n\r\n        var DataWidget = function ($scope, params) {\r\n\r\n          //$scope.widget.decoration.colorize = false;\r\n          //$scope.widget.decoration.colorizeMode = \"None\";\r\n          //$scope.widget.decoration.opacity = 0.5;\r\n\r\n          $scope.APIProvider = new APIProvider($scope);\r\n          $scope.APIUser = new APIUser($scope);\r\n\r\n          $scope.removeSubscriptions = function () {\r\n            var subscriptions = pageSubscriptions();\r\n            for (var i in subscriptions) {\r\n              if (subscriptions[i].emitter == $scope.widget.instanceName\r\n                || subscriptions[i].receiver == $scope.widget.instanceName\r\n              )   subscriptions.splice(i, 1);\r\n\r\n            }\r\n          };\r\n\r\n          $scope.dataValue = function (arg) {\r\n            if (angular.isString(arg)) return arg;\r\n            if (angular.isNumber(arg)) return arg.toFixed(2);\r\n            return \" - \";\r\n          };\r\n\r\n          $scope.tableExist = function () {\r\n            return angular.isDefined($scope.table)\r\n          };\r\n\r\n          $scope.configExist = function () {\r\n            return angular.isDefined($scope.widget.data)\r\n          };\r\n\r\n\r\n          $scope.RGBA = function (hex, opacity) {\r\n            if (angular.isUndefined(hex)) return \"rgba(\" + 256 + \",\" + 256 + \",\" + 256 + \",\" + 1.0 + \")\";\r\n\r\n            var color = parseInt(hex.slice(1), 16);\r\n            var r, g, b;\r\n            if (hex.length === 4) {\r\n              r = (color & 3840) >> 4;\r\n              r = r >> 4 | r;\r\n              g = color & 240;\r\n              g = g >> 4 | g;\r\n              b = color & 15;\r\n              b = b << 4 | b;\r\n            } else if (hex.length === 7) {\r\n              r = (color & 16711680) >> 16;\r\n              g = (color & 65280) >> 8;\r\n              b = color & 255;\r\n            }\r\n            return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + opacity + \")\"\r\n          };\r\n\r\n          $scope.getCellBackground = function (row, col, value) {\r\n            if (angular.isUndefined(value))return \"transparent\";\r\n            if ($scope.widget.decoration.colorize == false) return \"transparent\";\r\n            if (!$scope.widget.decoration.color) return \"transparent\";\r\n            var range;\r\n            switch ($scope.widget.decoration.colorizeMode) {\r\n              case \"Rows\":\r\n                range = $scope.widget.decoration.ranges.rows[row.label];\r\n                break;\r\n              case \"Columns\":\r\n                col = Object.keys(row.values).sort(function (a, b) {\r\n                  return (a < b) ? -1 : 1\r\n                })[col];\r\n                range = $scope.widget.decoration.ranges.columns[col];\r\n                break;\r\n              case \"All Cells\":\r\n                range = $scope.widget.decoration.ranges.all;\r\n                break;\r\n            }\r\n            if (!range)return \"transparent\";\r\n\r\n            var index = Math.floor(((value - range.min) / (range.max - range.min)) * $scope.widget.decoration.color.length);//((range.max-range.min)/this.conf.decoration.color.length);\r\n            index = (index == $scope.widget.decoration.color.length) ? index - 1 : index;\r\n            //console.log(\"BG \",row,col,value,range,index);\r\n\r\n            return $scope.RGBA($scope.widget.decoration.color[index],\r\n              (($scope.widget.decoration.opacity) ? $scope.widget.decoration.opacity : 0.5));\r\n\r\n          };\r\n\r\n\r\n          $scope.getCellStyle = function (row, col, value) {\r\n            //console.log(arguments);\r\n            if (arguments.length < 3)\r\n              return {\"background\": \"transparent\"};\r\n            return {\"background\": $scope.getCellBackground(row, col, value)}\r\n          };\r\n\r\n          $scope.setPredicate = function (f) {\r\n            $scope.predicate = f;\r\n            $scope.reverse = !$scope.reverse;\r\n          },\r\n\r\n            $scope.byLabel = function () {\r\n              $scope.sortField = undefined;\r\n              return function (item) {\r\n                return item.label\r\n              }\r\n            };\r\n\r\n          $scope.byField = function (field) {\r\n            //console.log(field)\r\n            $scope.sortField = field;\r\n            return function (item) {\r\n              return item.values[field.label]\r\n            }\r\n          };\r\n\r\n          $scope.reverse = false;\r\n          $scope.predicate = $scope.byLabel();\r\n\r\n\r\n          $scope.APIProvider\r\n\r\n            .config(function () {\r\n\r\n              if ($scope.widget.data && $scope.widget.data.standalone) {\r\n                $scope.table = $scope.widget.data.table;\r\n                return;\r\n              }\r\n              if ($scope.widget.datasource) {\r\n                $scope.APIUser.invoke($scope.widget.datasource, 'appendListener')\r\n              }\r\n            }, true)\r\n\r\n            .removal(function () {\r\n              $scope.removeSubscriptions();\r\n            })\r\n\r\n            .openCustomSettings(function () {\r\n              $scope.dialog = new params.dialog($scope);\r\n              $scope.dialog.open();\r\n            })\r\n\r\n            .provide('setDataProvider', function (evt, provider) {\r\n              if (!provider) return;\r\n\r\n              $scope.provider = provider;\r\n              $scope.table = adapter.getData($scope, params.serieGenerator);\r\n            });\r\n        };\r\n\r\n        return DataWidget;\r\n      }]);\r\n  });\r\n"],"sourceRoot":"/source/"}