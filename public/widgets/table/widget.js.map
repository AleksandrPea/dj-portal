{"version":3,"sources":["table/widget.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,kBAAkB,UAAU,KAAK,EAAE,OAAO,OAAO,IAAI,aAAa,IAAI,aAAa;;AAEvF,IAJO,UAAO,gBAAA,QAAM;;AAMpB,QALO;;AAOP,QANO;;AAQP,QAPO;;AAEP,IAAM,IAAI,QAAQ,OAAO,qBAAqB,CAC5C,2BACA,8CACA;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BF,EAAE,WAAW,uEAAa,UAAU,QAAQ,iBAAiB,YAAY,YAAY;EACnF,IAAI,WAAW,QAAQ;IACrB,QAAQ;;IAER,gBAAgB;MACd,SAAS,SAAA,QAAU,OAAO,OAAO;QAC/B,OAAQ,MAAM,OAAO,WAAW,YAAa,WAAW,QAAQ,OAAO,UAAU;;;;IAItF","file":"table/widget.js","sourcesContent":["import angular from 'angular';\r\nimport 'widgets/table/data-widget';\r\nimport 'widgets/data-dialogs/data-table-dialog';\r\nimport 'widgets/data-util/adapter';\r\n\r\nconst m = angular.module('app.widgets.table', [\r\n  'app.widgets.data-widget',\r\n  'app.widgets.data-dialogs.data-table-dialog',\r\n  'app.widgets.data-util.adapter'\r\n]);\r\n\r\n//\r\n//m.service('DataTableDecorationAdapter', function () {\r\n//    this.applyDecoration = function (options, decoration) {\r\n//        if(angular.isDefined(decoration)&&angular.isDefined(options)) {\r\n//            options.title.text = decoration.title;\r\n//            options.subtitle.text = decoration.subtitle;\r\n//            options.caption.text = decoration.caption;\r\n//            options.header = decoration.header;\r\n//\r\n//           }\r\n//        return options;\r\n//    }\r\n//    this.getDecoration = function (options){\r\n//        if(angular.isDefined(options)) {\r\n//            var decoration = {}\r\n//            decoration.title = options.title.text;\r\n//            decoration.subtitle = options.subtitle.text;\r\n//            decoration.caption = options.caption.text;\r\n//            decoration.header = options.header;\r\n//            return decoration;\r\n//        }\r\n//    }\r\n//})\r\n\r\nm.controller('TableCtrl', function ($scope, DataTableDialog, DataWidget, Normalizer) {\r\n  new DataWidget($scope, {\r\n    dialog: DataTableDialog,\r\n    //decorationAdapter:DataTableDecorationAdapter,\r\n    serieGenerator: {\r\n      getData: function (table, scope) {\r\n        return (scope.widget.decoration.normalize) ? Normalizer.getData(table, $scope) : table\r\n      }\r\n    }\r\n  })\r\n});\r\n"],"sourceRoot":"/source/"}