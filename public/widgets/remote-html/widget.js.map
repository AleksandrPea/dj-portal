{"version":3,"sources":["remote-html/widget.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,kBAAkB,UAAU,KAAK,EAAE,OAAO,OAAO,IAAI,aAAa,IAAI,aAAa;;AAEvF,IAJO,UAAO,gBAAA,QAAM;;AAEpB,QAAQ,OAAO,2BAA2B,IACvC,WAAW,2FAA8B,UAAU,QAAQ,aACjD,YAAW,mBAAmB;;EAGvC,OAAO,YAAY;EACnB,OAAO,aAAa;;EAEpB,SAAS,YAAY,cAAc;IACjC,IAAI,gBAAgB;IACpB,KAAK,IAAI,KAAK,eAAe;MAC3B,IAAI,cAAc,GAAG,YAAY,aAAa,WACzC,cAAc,GAAG,aAAa,aAAa,UAAU;QACxD;;;IAGJ,cAAc,KAAK;GACpB;;EAGD,IAAI,YAAY,QACb,OAAO,YAAM;IACX,oBAAoB,gBAAgB;MAC/B,UAAW,OAAO,OAAO;MACzB,QAAQ;;IAGd,IAAG,OAAO,OAAO,cAAa;MAC9B,YAAY;QACJ,SAAQ,OAAO,OAAO;QACtB,UAAW,OAAO,OAAO;QACzB,QAAQ;QACR,MAAM;;;;IAId,WAAW,OAAO,OAAO,KAAK,KAAK,UAAC,aAAgB;MAAC,OAAO,MAAM;;KAGnE,UAAU,YAAK;IACd,WAAW,OAAO,OAAO,KAAK,KAAK,UAAC,aAAgB;MAAC,OAAO,MAAM;;KAGnE,QAAQ,kBAAkB,UAAC,KAAK,OAAU;IAC1C,WAAW,OAAO,OAAO,KAAK,KAAK,UAAC,aAAgB;MAAC,OAAO,MAAM;;KAGlE,QAAQ,mBAAmB,UAAC,KAAK,OAAU;;IAE3C,OAAO,aAAa;;IAEtB","file":"remote-html/widget.js","sourcesContent":["import angular from 'angular';\r\n\r\nangular.module('app.widgets.remote-html', [])\r\n  .controller('RemoteHtmlWidgetController', function ($scope, APIProvider,\r\n  \t\t\t\t\t\t\t\t\t\t\t$translate,pageSubscriptions) {\r\n    \r\n\r\n    $scope.translate = $translate;\r\n    $scope.visibility = true;\r\n    \r\n    function addListener(subscription) {\r\n      var subscriptions = pageSubscriptions();\r\n      for (var i in subscriptions) {\r\n        if (subscriptions[i].emitter === subscription.emitter \r\n          && subscriptions[i].receiver === subscription.receiver) {\r\n          return;\r\n        }\r\n      }\r\n      subscriptions.push(subscription);\r\n    };\r\n\r\n\r\n    new APIProvider($scope)\r\n      .config(() => {\r\n         pageSubscriptions().removeListeners({\r\n              receiver:  $scope.widget.instanceName,\r\n              signal: \"slaveVisibility\",\r\n        })\r\n\r\n        if($scope.widget.masterWidget){\r\n      \t\taddListener({\r\n                emitter:$scope.widget.masterWidget,\r\n                receiver:  $scope.widget.instanceName,\r\n                signal: \"slaveVisibility\",\r\n                slot: \"slaveVisibility\"\r\n            });\r\n        }\t\r\n\r\n        $translate($scope.widget.url).then((translation) => {$scope.url = translation})\r\n      })\r\n\r\n      .translate(() =>{\r\n        $translate($scope.widget.url).then((translation) => {$scope.url = translation});\r\n      })\r\n      \r\n      .provide(\"selectLanguage\", (evt, value) => {\r\n      \t$translate($scope.widget.url).then((translation) => {$scope.url = translation})\r\n      })\r\n      \r\n      .provide(\"slaveVisibility\", (evt, value) => {\r\n      \t// console.log(\"slaveVisibility\",evt, value)\r\n      \t$scope.visibility = value;\r\n      });\r\n  });\r\n"],"sourceRoot":"/source/"}