{"version":3,"sources":["v2.steps/post-process.js"],"names":[],"mappings":"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","file":"v2.steps/post-process.js","sourcesContent":["import angular from 'angular';\r\nimport 'custom-react-directives';\r\n\r\n\r\nvar m = angular.module(\"app.widgets.v2.steps.post-process\",['custom-react-directives']);\r\n\r\nm.factory(\"PostProcess\",[\"$http\", \"dialog\", \"alert\", function($http, dialog, alert){\r\n\treturn {\r\n\t\tid: \"PostProcess\",\r\n\r\n\t\ttitle : \"Data Preparation\",\r\n\r\n\t\t\r\n\t\tdescription : \"Select input data and set preparation settings\",\r\n        \r\n    html : \"./widgets/v2.steps/post-process.html\",\r\n\r\n    defaultSettings : {\r\n      useColumnMetadata : [],  \r\n      useRowMetadata : [],\r\n      normalization : {\r\n        \"enable\" : false,\r\n        \"mode\" : \"Range to [0,1]\",\r\n        \"direction\" : \"Columns\"\r\n      },\r\n      reduce : {\r\n        \"enable\" : false,\r\n        \"mode\" : \"Has Null\",\r\n        \"direction\" : \"Columns\"\r\n      },\r\n      transpose:false,\r\n      \r\n      order:{\r\n        enable    :false,\r\n        direction :\"Rows\",\r\n        asc       :\"A-Z\",\r\n        index     : 0\r\n      },\r\n\r\n      cluster:{\r\n        enable    :false,\r\n        direction :\"Rows\",\r\n        count     : 2\r\n      },\r\n      \r\n      aggregation : {\r\n        \"enable\" : false,\r\n        \"direction\" : \"Rows\",\r\n        \"data\" : []\r\n      },\r\n\r\n      rank : {\r\n        \"enable\" : false,\r\n        \"direction\" : \"Rows\",\r\n        \"asc\":\"A-Z\",\r\n        \"indexes\" : []\r\n      },\r\n\r\n      limit : {\r\n        \"enable\" : false,\r\n        \"start\" : 1,\r\n        \"length\":10\r\n      },\r\n\r\n      histogram : {\r\n        \"enable\" : false,\r\n        \"direction\" : \"Rows\",\r\n        \"cumulate\" : false,\r\n        \"beans\" : 5\r\n      },\r\n\r\n      correlation : {\r\n        \"enable\" : false,\r\n        \"direction\" : \"Rows\"\r\n      },\r\n\r\n      pca : {\r\n        \"enable\" : false,\r\n        \"direction\" : \"Rows\",\r\n        \"result\" : \"Scores\"\r\n      }              \r\n\r\n    },\r\n\r\n    avaibleAggregations:[\r\n      {v:\"min\",enable:false},\r\n      {v:\"max\",enable:false},\r\n      {v:\"avg\",enable:false},\r\n      {v:\"std\",enable:false},\r\n      {v:\"sum\",enable:false}\r\n    ],\r\n\r\n    selectAggregation: function(){\r\n      this.conf.postprocessSettings.aggregation.data = this.avaibleAggregations\r\n      .filter((item) => item.enable)\r\n      .map((item) => item.v);\r\n    },\r\n\r\n    onStartWizard: function(wizard){\r\n      this.wizard = wizard;\r\n      this.queries = wizard.parentScope.getQueries();\r\n      this.inputQuery = undefined;\r\n      this.conf = {\r\n        postprocessSettings: this.defaultSettings,\r\n      }\r\n    },\r\n\r\n    selectInputData: function(){\r\n      \r\n      this.avaibleAggregations.forEach((item) =>{item.enable = false});\r\n\r\n      let thos = this;\r\n      let iq = this.queries.filter((item) => item.$title == thos.inputQuery)[0];\r\n      \r\n      this.conf.postprocessSettings =  angular.copy(this.defaultSettings);\r\n      this.conf.query = iq.context; \r\n      $http\r\n        .get(\"./api/data/process/\"+iq.context.queryResultId)\r\n        .success(function (resp) {\r\n            thos.wizard.context.table = resp.value;\r\n            thos.conf.inputQueryResultId = resp.id;\r\n            thos.makeLabelList(thos.wizard.context.table);\r\n            thos.selectRankDirection(thos.wizard.context.table);\r\n            thos.apply();\r\n        })\r\n    },\r\n\r\n    activate : function(wizard){\r\n      this.queries = wizard.parentScope.getQueries();\r\n    },\r\n\r\n    getSelectedItemsCount:function(collection){\r\n       return collection.filter(function (item){return item == true}).length;\r\n    }, \r\n\r\n    addQuery: function(){\r\n      let q = this.wizard.parentScope.getQuery(this.conf);\r\n      if(!q){\r\n        let thos = this;\r\n        dialog({\r\n            title:\"Enter Data Preparation Title\",\r\n            fields:{\r\n              title:{title:\"Title\",value:\"\",editable:true,required:true}\r\n            } \r\n        })\r\n        .then(function(form){\r\n           thos.wizard.parentScope.addPreparation(thos.conf,form.fields.title.value);\r\n        })\r\n      }else{\r\n        alert.message([\"Doublicate of Preparation\",(\"This preparation exists with title: \"+q.$title)]);\r\n      }\r\n    },\r\n\r\n    \r\n    makeRowLabelList: function(table){\r\n      let metas = table.header[0].metadata.map((m,index) => {\r\n          return { \"label\" : m.dimensionLabel, \"index\": (-index-1)}\r\n      })\r\n\r\n      let rows = table.body.map((item,index) => {\r\n        return { \"label\" : item.metadata.map((m) => m.label).join(\".\"), \"index\" : index }\r\n      })\r\n\r\n      this.rowLabelList = metas.concat(rows)\r\n\r\n    },\r\n\r\n    makeColLabelList: function(table){\r\n      \r\n      let metas = table.body[0].metadata.map((m,index) => {\r\n         return { \"label\" : m.dimensionLabel, \"index\": (-index-1)}\r\n      })\r\n\r\n      let cols = table.header.map((item,index) => {\r\n        return { \"label\" : item.metadata.map((m) => m.label).join(\".\"), \"index\" : index }\r\n      })\r\n\r\n      this.colLabelList = metas.concat(cols)\r\n\r\n    },\r\n\r\n    makeLabelList: function(table){\r\n      this.makeRowLabelList(table);\r\n      this.makeColLabelList(table);\r\n      this.selectOrderDirection()\r\n    },\r\n\r\n    selectOrderDirection: function(){\r\n      this.criteriaLabel = undefined;\r\n      if(this.conf.postprocessSettings.order.direction == \"Rows\"){\r\n        this.orderCriteriaList = this.colLabelList\r\n      }else{\r\n        this.orderCriteriaList = this.rowLabelList\r\n      }\r\n    },\r\n\r\n    selectOrderCriteria: function(){\r\n      let thos = this;\r\n      this.conf.postprocessSettings.order.index = this.orderCriteriaList\r\n        .filter((item) => thos.criteriaLabel == item.label)[0].index;\r\n    },\r\n\r\n    selectRankDirection: function(){\r\n      let table = this.wizard.context.table;\r\n      if(this.conf.postprocessSettings.rank.direction == \"Rows\"){\r\n       \r\n        this.rankAlt =  table.body.map((item,index) => {\r\n          return { \"label\" : item.metadata.map((m) => m.label).join(\".\"), \"index\" : index, enable:false }\r\n        })\r\n \r\n      }else{\r\n        this.rankAlt = table.header.map((item,index) => {\r\n          return { \"label\" : item.metadata.map((m) => m.label).join(\".\"), \"index\" : index, enable:false}\r\n        })        \r\n      }\r\n\r\n    },\r\n\r\n    selectRankAlt: function(){\r\n      this.conf.postprocessSettings.rank.indexes = this.rankAlt\r\n        .filter((item) => item.enable == true)\r\n        .map((item) => item.index);\r\n    },\r\n\r\n\r\n    apply : function (){\r\n      var thos = this;\r\n      thos.wizard.context.postprocessedTable = undefined;\r\n      $http\r\n          .post(\"./api/data/process/\",\r\n            {\r\n              \"cache\": false,\r\n              \"data_id\": this.conf.inputQueryResultId,\r\n              \"params\": this.conf.postprocessSettings,\r\n              \"proc_name\": \"post-process\",\r\n              \"response_type\": \"data\"\r\n            }    \r\n          )\r\n          .success(function (resp) {\r\n              thos.conf.queryResultId = resp.data_id;\r\n              thos.wizard.context.postprocessedTable = resp.data;\r\n              \r\n          })\r\n    }\r\n\t}\r\n}]);\t"],"sourceRoot":"/source/"}