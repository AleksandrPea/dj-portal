{"version":3,"sources":["v2.steps/line-post-process.js"],"names":[],"mappings":"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","file":"v2.steps/line-post-process.js","sourcesContent":["import angular from 'angular';\r\nimport 'widgets/data-util/dps';\r\n\r\n\r\nvar m = angular.module(\"app.widgets.v2.steps.line-post-process\",[\"app.widgets.data-util.dps\"]);\r\n\r\nm.factory(\"LinePostProcess\",[\"$http\",\"Requestor\", function($http, Requestor){\r\n\treturn {\r\n\t\t\r\n\t\ttitle : \"Postprocessing\",\r\n\r\n\t\t\r\n\t\tdescription : \"View data and setup data postprocessing\",\r\n        \r\n    html : \"./widgets/v2.steps/line-post-process.html\",\r\n\r\n\r\n    onStartWizard: function(wizard){\r\n      this.wizard = wizard;\r\n      this.postprocessSettings = wizard.conf.postprocessSettings;\r\n      if(angular.isUndefined(this.postprocessSettings)){\r\n        this._initSettings();\r\n        this.wizard.process(this);\r\n        return;\r\n      }\r\n      this.wizard.complete(this);\r\n    },\r\n\r\n    onFinishWizard: function(wizard){\r\n      wizard.conf.postprocessSettings = this.postprocessSettings;\r\n      wizard.conf.postprocess =  {\r\n                \"data_id\": this.queryResultId,\r\n                \"params\": \r\n                {\r\n                  \"normalized\" : this.postprocessSettings.normalize, \r\n                  \"mode\" : this.postprocessSettings.mode,\r\n                  \"direction\" : this.postprocessSettings.direction,\r\n                  \"precision\" : this.postprocessSettings.precision\r\n                },\r\n                \"proc_name\": \"normalizer\",\r\n                \"response_type\": \"data\"\r\n              };\r\n    },\r\n\r\n    range: function(min,max){\r\n      var result = [];\r\n      for(var i=min; i<=max; i++) result.push(i)\r\n  \r\n      return result;  \r\n    },\r\n\r\n    getValue: function(value){\r\n      return (value == null) ? \"-\" : value;\r\n    },\r\n\r\n    enable: function(wizard){\r\n      // console.log(\"Enable Postprocess\")\r\n    },\r\n\r\n    disable: function(wizard){\r\n      wizard.postprocessSettings = undefined;\r\n    },\r\n\r\n    _initSettings: function(){\r\n      // console.log(\"BEFORE INIT\", this.wizard.postprocessSettings)\r\n      this.postprocessSettings = {};\r\n      this.postprocessSettings.normalize = false;\r\n      this.postprocessSettings.direction = \"Columns\";\r\n      this.postprocessSettings.mode = \"Range to [0,1]\";\r\n      this.postprocessSettings.precision = 2;\r\n      this.postprocessSettings.useColumnMetadata = [];\r\n      this.postprocessSettings.useRowMetadata = [];\r\n      this.postprocessSettings.axisX = -1;\r\n      \r\n      // console.log(\"INIT\", this.postprocessSettings)\r\n     },\r\n\r\n\r\n     makeAxisXList : function(table){\r\n      var result = [];\r\n      table.body[0].metadata.forEach(function(item,index){\r\n        result.push({\r\n          index : -index-1,\r\n          label : item.dimensionLabel \r\n        })\r\n      });\r\n      table.header.forEach(function(column,index){\r\n        var label = \"\";\r\n        column.metadata.forEach(function(item){\r\n          label = (label == \"\") ? item.label : label+\", \"+item.label;\r\n        })\r\n        result.push({\r\n          index : index,\r\n          label : label\r\n        })\r\n      });\r\n      this.axisXColumn = result[0].label;\r\n      this.postprocessSettings.axisX = result[0].index;\r\n      \r\n      return result;\r\n     },\r\n\r\n    selectAxisX : function(){\r\n      var thos = this;\r\n      this.postprocessSettings.axisX = this.axisXList.filter(function(item){return item.label == thos.axisXColumn})[0].index;\r\n    },\r\n\r\n    activate : function(wizard){\r\n      this.wizard.process(this)\r\n      this.query = wizard.conf.query;\r\n      this.postprocessSettings = wizard.conf.postprocessSettings;\r\n\r\n      if(angular.isUndefined(this.postprocessSettings)){\r\n        this._initSettings();\r\n        this.wizard.process(this);\r\n      }\r\n      \r\n      var thos = this;\r\n      // console.log(this.query);\r\n      this.response = undefined;\r\n\r\n      new Requestor()\r\n        .push(\"getQueryResult\",function(requestor,value){\r\n            $http\r\n              .post(\"./api/data/process/\",thos.query)\r\n              .success(function (data) {\r\n                  // thos.response = data;\r\n                  thos.queryResultId = data.data_id;\r\n                  // thos.postprocessSettings.useColumnMetadata = data.data.header[0].metadata.map(function(item){return true});\r\n                  // thos.postprocessSettings.useRowMetadata = data.data.body[0].metadata.map(function(item){return true});\r\n                  requestor.resolve(thos.queryResultId)\r\n              })\r\n        })\r\n        .push(\"postProcess\",function(requestor,data_id){\r\n            $http\r\n            .post(\"./api/data/process/\",\r\n              {\r\n                \"data_id\": data_id,\r\n                \"params\": \r\n                {\r\n                  \"normalized\" : thos.postprocessSettings.normalize || false, \r\n                  \"mode\" : thos.postprocessSettings.mode,\r\n                  \"direction\" : thos.postprocessSettings.direction,\r\n                  \"precision\" : thos.postprocessSettings.precision\r\n                },\r\n                \"proc_name\": \"post-process\",\r\n                \"response_type\": \"data\"\r\n              }    \r\n            )\r\n            .success(function (data) {\r\n                thos.response = data;\r\n                thos.postprocessDataId = data.data_id;\r\n                thos.postprocessSettings.useColumnMetadata = (thos.postprocessSettings.useColumnMetadata.length == 0)?\r\n                  thos.response.data.header[0].metadata.map(function(item){return true}) : thos.postprocessSettings.useColumnMetadata;\r\n                thos.postprocessSettings.useRowMetadata = (thos.postprocessSettings.useRowMetadata.length == 0)?\r\n                  thos.response.data.body[0].metadata.map(function(item){return true}):thos.postprocessSettings.useRowMetadata;\r\n                \r\n                thos.axisXList = thos.makeAxisXList(thos.response.data);   \r\n                requestor.resolve()\r\n          })\r\n        })\r\n        .execute(null,function(data){\r\n          thos.wizard.complete(thos);\r\n        })      \r\n        \r\n    },\r\n\r\n    getSelectedItemsCount:function(collection){\r\n       return collection.filter(function (item){return item == true}).length;\r\n    }, \r\n\r\n    apply : function (){\r\n      this.wizard.process(this)\r\n      // console.log(this.postprocessSettings)\r\n\r\n      if (this.postprocessSettings.normalize == true){\r\n        this.response = undefined;\r\n        var thos = this;\r\n        $http\r\n            .post(\"./api/data/process/\",\r\n              {\r\n                \"data_id\": this.queryResultId,\r\n                \"params\": \r\n                {\r\n                  \"normalized\" : this.postprocessSettings.normalize || false, \r\n                  \"mode\" : this.postprocessSettings.mode,\r\n                  \"direction\" : this.postprocessSettings.direction,\r\n                  \"precision\" : this.postprocessSettings.precision\r\n                },\r\n                \"proc_name\": \"post-process\",\r\n                \"response_type\": \"data\"\r\n              }    \r\n            )\r\n            .success(function (data) {\r\n                thos.response = data;\r\n                thos.postprocessDataId = data.data_id;\r\n                thos.wizard.complete(thos);\r\n          })\r\n      }else{\r\n        this.activate(this.wizard);\r\n      }      \r\n    }\r\n\r\n\t}\r\n}]);\t"],"sourceRoot":"/source/"}