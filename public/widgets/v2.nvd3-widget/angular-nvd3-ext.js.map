{"version":3,"sources":["v2.nvd3-widget/angular-nvd3-ext.js"],"names":[],"mappings":"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","file":"v2.nvd3-widget/angular-nvd3-ext.js","sourcesContent":["\r\n\r\n\"use strict\";\r\n\r\n/**************************************************************************\r\n * AngularJS-nvD3, v0.0.9; MIT License; 07/24/2014 12:59\r\n * http://krispo.github.io/angular-nvd3\r\n **************************************************************************/\r\n(function () {\r\n  \"use strict\";\r\n\r\n  angular.module(\"nvd3\", []).directive(\"nvd3\", [function () {\r\n    return {\r\n      restrict: \"AE\",\r\n      scope: {\r\n        settings: \"=\", // incapsulate chart data and options\r\n        //data: '=',      //chart data, [required]\r\n        //options: '=',   //chart options, according to nvd3 core api, [required]\r\n        api: \"=?\", //directive global api, [optional]\r\n        events: \"=?\", //global events that directive would subscribe to, [optional]\r\n        config: \"=?\" //global directive configuration, [optional]\r\n      },\r\n      link: function (scope, element, attrs) {\r\n        var defaultConfig = { extended: false, visible: true, disabled: false, autorefresh: true, refreshDataOnly: false };\r\n\r\n        //basic directive configuration\r\n        scope._config = angular.extend(defaultConfig, scope.config);\r\n        scope._onReady = undefined;\r\n        //directive global api\r\n        \r\n        scope.api = {\r\n          getScope: function(){ return scope; },\r\n\r\n          onReady: function(cb) {scope._onReady = cb},\r\n          \r\n          getElement: function(){ return element; },\r\n\r\n          getSVG: function(){\r\n            var selection = d3.select(element[0]).select(\"svg\");  \r\n            return (selection.length == 0) ? undefined : selection[0][0]\r\n          },//.select(\"svg\")},\r\n\r\n          chart: function(){return scope.chart;},\r\n          // Fully refresh directive\r\n          refresh: function () {\r\n            // console.log(\"Refresh\",scope.settings)\r\n            if (scope.settings\r\n              && scope.settings.options\r\n              && scope.settings.data\r\n              && (scope.options != scope.settings.options || scope.data != scope.settings.data)\r\n            ) {\r\n              //console.log(\"Accepted\")\r\n              scope.options = scope.settings.options;\r\n              scope.data = scope.settings.data;\r\n              scope.api.updateWithOptions(scope.options);\r\n            }else{\r\n              //console.log(\"Canceled\")\r\n            }\r\n          },\r\n          // Update chart with new options\r\n          updateWithOptions: function (options) {\r\n            // console.log(\"updateWithOptions\", scope.chart)\r\n            if(scope.chart && scope.chart.destroy) scope.chart.destroy();\r\n\r\n            scope.data = scope.settings.data;\r\n            // Clearing\r\n            scope.api.clearElement();\r\n\r\n            // Exit if options are not yet bound\r\n            if (angular.isDefined(options) === false) return;\r\n\r\n            // Exit if chart is hidden\r\n            if (!scope._config.visible) return;\r\n\r\n            // Initialize chart with specific type\r\n            scope.chart = nv.models[options.chart.type]();\r\n\r\n            angular.forEach(scope.chart, function (value, key) {\r\n\r\n              if (key === \"options\") ;else if (key === \"dispatch\") {\r\n                if (options.chart[key] === undefined || options.chart[key] === null) {\r\n                  if (scope._config.extended) options.chart[key] = {};\r\n                }\r\n               \r\n                configureEvents(scope.chart[key], options.chart[key]);\r\n              } else if ([\"lines\", \"lines1\", \"lines2\", \"bars\", // TODO: Fix bug in nvd3, nv.models.historicalBar - chart.interactive (false -> _)\r\n                  \"bars1\", \"bars2\", \"stack1\", \"stack2\", \"multibar\", \"discretebar\", \"pie\", \"scatter\", \"bullet\", \"sparkline\", \"legend\", \"distX\", \"distY\", \"xAxis\", \"x2Axis\", \"yAxis\", \"yAxis1\", \"yAxis2\", \"y1Axis\", \"y2Axis\", \"y3Axis\", \"y4Axis\", \"interactiveLayer\", \"controls\"].indexOf(key) >= 0) {\r\n                if (options.chart[key] === undefined || options.chart[key] === null) {\r\n                  if (scope._config.extended) options.chart[key] = {};\r\n                }\r\n                configure(scope.chart[key], options.chart[key], options.chart.type);\r\n              } else if ( //TODO: need to fix bug in nvd3\r\n              key === \"clipEdge\" && options.chart.type === \"multiBarHorizontalChart\" || key === \"clipVoronoi\" && options.chart.type === \"historicalBarChart\" || key === \"color\" && options.chart.type === \"indentedTreeChart\" || key === \"defined\" && (options.chart.type === \"historicalBarChart\" || options.chart.type === \"cumulativeLineChart\" || options.chart.type === \"lineWithFisheyeChart\") || key === \"forceX\" && (options.chart.type === \"multiBarChart\" || options.chart.type === \"discreteBarChart\" || options.chart.type === \"multiBarHorizontalChart\") || key === \"interpolate\" && options.chart.type === \"historicalBarChart\" || key === \"isArea\" && options.chart.type === \"historicalBarChart\" || key === \"size\" && options.chart.type === \"historicalBarChart\" || key === \"stacked\" && options.chart.type === \"stackedAreaChart\" || key === \"values\" && options.chart.type === \"pieChart\" || key === \"xScale\" && options.chart.type === \"scatterChart\" || key === \"yScale\" && options.chart.type === \"scatterChart\" || key === \"x\" && (options.chart.type === \"lineWithFocusChart\" || options.chart.type === \"multiChart\") || (key === \"y\" && options.chart.type === \"lineWithFocusChart\" || options.chart.type === \"multiChart\")) ;else if (options.chart[key] === undefined || options.chart[key] === null) {\r\n                if (scope._config.extended) options.chart[key] = value();\r\n              } else scope.chart[key](options.chart[key]);\r\n            });\r\n\r\n            // Update with data\r\n            scope.api.updateWithData(scope.data);\r\n\r\n            // Configure wrappers\r\n            if (options.title || scope._config.extended) configureWrapper(\"title\");\r\n            if (options.subtitle || scope._config.extended) configureWrapper(\"subtitle\");\r\n            if (options.caption || scope._config.extended) configureWrapper(\"caption\");\r\n\r\n\r\n            // Configure styles\r\n            if (options.styles || scope._config.extended) configureStyles();\r\n\r\n            nv.addGraph(function () {\r\n              // Update the chart when window resizes\r\n            \r\n              nv.utils.windowResize(function () {\r\n                scope.chart.update();\r\n              });\r\n              return scope.chart;\r\n            }, options.chart.callback);\r\n          },\r\n\r\n          // Update chart with new data\r\n          updateWithData: function (data) {\r\n            if (data) {\r\n              scope.options.chart.transitionDuration = +scope.options.chart.transitionDuration || 250;\r\n              // remove whole svg element with old data\r\n              d3.select(element[0]).select(\"svg\").remove();\r\n\r\n              // Select the current element to add <svg> element and to render the chart in\r\n              d3.select(element[0]).append(\"svg\").attr(\"height\", scope.options.chart.height).attr(\"width\", scope.options.chart.width).datum(data).transition().duration(scope.options.chart.transitionDuration).call(scope.chart);\r\n\r\n              // Set up svg height and width. It is important for all browsers...\r\n              d3.select(element[0]).select(\"svg\")[0][0].style.height = scope.options.chart.height + \"px\";\r\n              d3.select(element[0]).select(\"svg\")[0][0].style.width = scope.options.chart.width + \"px\";\r\n              if (scope.options.chart.type === \"multiChart\") scope.chart.update(); // multiChart is not automatically updated\r\n              if(scope._onReady) scope._onReady()\r\n            }\r\n          },\r\n\r\n          // Fully clear directive element\r\n          clearElement: function () {\r\n            element.find(\".title\").remove();\r\n            element.find(\".subtitle\").remove();\r\n            element.find(\".caption\").remove();\r\n            element.empty();\r\n            scope.chart = null;\r\n          }\r\n        };\r\n\r\n        \r\n        scope.$parent.$parent.api = scope.api;\r\n\r\n        // Configure the chart model with the passed options\r\n        function configure(chart, options, chartType) {\r\n          if (chart && options) {\r\n            angular.forEach(chart, function (value, key) {\r\n              if (key === \"dispatch\") {\r\n                if (options[key] === undefined || options[key] === null) {\r\n                  if (scope._config.extended) options[key] = {};\r\n                }\r\n\r\n                configureEvents(value, options[key]);\r\n              } else if ( //TODO: need to fix bug in nvd3\r\n              key === \"xScale\" && chartType === \"scatterChart\" || key === \"yScale\" && chartType === \"scatterChart\" || key === \"values\" && chartType === \"pieChart\") ;else if ([\"scatter\", \"defined\", \"options\", \"axis\", \"rangeBand\", \"rangeBands\"].indexOf(key) < 0) {\r\n                if (options[key] === undefined || options[key] === null) {\r\n                  if (scope._config.extended) options[key] = value();\r\n                } else chart[key](options[key]);\r\n              }\r\n            });\r\n          }\r\n        }\r\n\r\n        // Subscribe to the chart events (contained in 'dispatch')\r\n        // and pass eventHandler functions in the 'options' parameter\r\n        function configureEvents(dispatch, options) {\r\n          if (dispatch && options) {\r\n            angular.forEach(dispatch, function (value, key) {\r\n              if (options[key] === undefined || options[key] === null) {\r\n                if (scope._config.extended) options[key] = value.on;\r\n              } else dispatch.on(key + \"._\", options[key]);\r\n            });\r\n          }\r\n        }\r\n\r\n        // Configure 'title', 'subtitle', 'caption'.\r\n        // nvd3 has no sufficient models for it yet.\r\n        function configureWrapper(name) {\r\n          var _ = extendDeep(defaultWrapper(name), scope.options[name] || {});\r\n\r\n          if (scope._config.extended) scope.options[name] = _;\r\n\r\n          var wrapElement = angular.element(\"<div></div>\").html(_.html || \"\").addClass(name).addClass(_[\"class\"]).removeAttr(\"style\").css(_.css);\r\n\r\n          if (!_.html) wrapElement.text(_.text);\r\n\r\n          if (_.enable) {\r\n            if (name === \"title\") element.prepend(wrapElement);else if (name === \"subtitle\") element.find(\".title\").after(wrapElement);else if (name === \"caption\") element.append(wrapElement);\r\n          }\r\n        }\r\n\r\n        // Add some styles to the whole directive element\r\n        function configureStyles() {\r\n          var _ = extendDeep(defaultStyles(), scope.options.styles || {});\r\n\r\n          if (scope._config.extended) scope.options.styles = _;\r\n\r\n          angular.forEach(_.classes, function (value, key) {\r\n            value ? element.addClass(key) : element.removeClass(key);\r\n          });\r\n\r\n          element.removeAttr(\"style\").css(_.css);\r\n        }\r\n\r\n        // Default values for 'title', 'subtitle', 'caption'\r\n        function defaultWrapper(_) {\r\n          switch (_) {\r\n            case \"title\":\r\n              return {\r\n                enable: false,\r\n                text: \"Write Your Title\",\r\n                \"class\": \"h4\",\r\n                css: {\r\n                  width: scope.options.chart.width + \"px\",\r\n                  textAlign: \"center\"\r\n                }\r\n              };\r\n            case \"subtitle\":\r\n              return {\r\n                enable: false,\r\n                text: \"Write Your Subtitle\",\r\n                css: {\r\n                  width: scope.options.chart.width + \"px\",\r\n                  textAlign: \"center\"\r\n                }\r\n              };\r\n            case \"caption\":\r\n              return {\r\n                enable: false,\r\n                text: \"Figure 1. Write Your Caption text.\",\r\n                css: {\r\n                  width: scope.options.chart.width + \"px\",\r\n                  textAlign: \"center\"\r\n                }\r\n              };\r\n          }\r\n        }\r\n\r\n        // Default values for styles\r\n        function defaultStyles() {\r\n          return {\r\n            classes: {\r\n              \"with-3d-shadow\": true,\r\n              \"with-transitions\": true,\r\n              gallery: false\r\n            },\r\n            css: {}\r\n          };\r\n        }\r\n\r\n        // Deep Extend json object\r\n        function extendDeep(dst) {\r\n          angular.forEach(arguments, function (obj) {\r\n            if (obj !== dst) {\r\n              angular.forEach(obj, function (value, key) {\r\n                if (dst[key] && dst[key].constructor && dst[key].constructor === Object) {\r\n                  extendDeep(dst[key], value);\r\n                } else {\r\n                  dst[key] = value;\r\n                }\r\n              });\r\n            }\r\n          });\r\n          return dst;\r\n        }\r\n\r\n        // Watching on options, data, config changing\r\n        //scope.$watch('options', function(options){\r\n        //  if (!scope._config.disabled && scope._config.autorefresh) scope.api.refresh();\r\n        //}, true);\r\n        //scope.$watch('data', function(data){\r\n        //  if (!scope._config.disabled && scope._config.autorefresh) {\r\n        //    scope._config.refreshDataOnly ? scope.chart.update() : scope.api.refresh(); // if wanted to refresh data only, use chart.update method, otherwise use full refresh.\r\n        //  }\r\n        //}, true);\r\n\r\n        scope.$watch(\"settings\", function (settings) {\r\n          if (!scope._config.disabled && scope._config.autorefresh) scope.api.refresh();\r\n        }, true);\r\n\r\n\r\n        scope.$watch(\"config\", function (config) {\r\n          scope._config = angular.extend(defaultConfig, config);\r\n          scope.api.refresh();\r\n        }, true);\r\n\r\n        //subscribe on global events\r\n        angular.forEach(scope.events, function (eventHandler, event) {\r\n          scope.$on(event, function (e) {\r\n            return eventHandler(e, scope);\r\n          });\r\n        });\r\n      }\r\n    };\r\n  }]);\r\n})();\r\n\r\n"],"sourceRoot":"/source/"}