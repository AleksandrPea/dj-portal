{"version":3,"sources":["v2.nvd3-widget/nvd3-widget.js"],"names":[],"mappings":"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","file":"v2.nvd3-widget/nvd3-widget.js","sourcesContent":["\"use strict\";\r\n\r\nSystem.config({\r\n  paths: {\r\n    'topojson': 'widgets/v2.nvd3-widget/topojson.js',\r\n    'nv.d3.ext': 'widgets/v2.nvd3-widget/nv.d3.ext.js',\r\n    'nv.d3.ext.timeline': 'widgets/v2.nvd3-widget/nv.d3.ext.timeline.js',\r\n    'd3-layout-timeline':\"components/d3-layout-timeline/d3.timeline.js\",\r\n    'd3.timer': \"components/d3.timer/index.js\",\r\n    'angular-nvd3': 'widgets/v2.nvd3-widget/angular-nvd3-ext.js',\r\n    \"canvg\": \"components/canvg/dist/canvg.bundle.js\",\r\n    // \"rgbcolor\": \"components/canvg/rgbcolor.js\",\r\n    // \"stackblur\": \"components/canvg/StackBlur.js\",\r\n    \"Blob\": \"components/Blob.js/Blob.js\",\r\n    \"canvas-toBlob\": \"components/canvas-toBlob.js/canvas-toBlob.js\",\r\n    \"file-saver\": \"components/file-saver.js/FileSaver.js\"\r\n\r\n\r\n  },\r\n  meta: {\r\n    'topojson': {\r\n      exports: 'topojson'\r\n    },\r\n    'nv.d3.ext': {\r\n      exports: 'nv',\r\n      deps: ['nv.d3', 'topojson', \"date-and-time\"]\r\n    },\r\n    'nv.d3.ext.timeline': {\r\n      exports: 'nv',\r\n      deps: ['nv.d3.ext',\"d3-layout-timeline\",'d3.timer']\r\n    },\r\n    'd3.timer':{\r\n      exports: 'd3',\r\n      deps: ['d3']\r\n    },\r\n    'angular-nvd3': {\r\n      deps: ['nv.d3.ext', 'nv.d3.ext.timeline']\r\n    },\r\n    'canvg': {\r\n      exports: 'canvg'\r\n      // ,\r\n      // deps: ['rgbcolor', 'stackblur']\r\n    },\r\n    'file-saver': {\r\n        deps: ['Blob','canvas-toBlob']\r\n    }\r\n  }\r\n});\r\n\r\n\r\ndefine([\"angular\", \r\n        \"angular-oclazyload\", \r\n        \"angular-nvd3\", \r\n        \"canvg\",\r\n        \"file-saver\"], \r\n\r\n        function (angular) {\r\n\r\n\r\n\r\n  var m = angular.module(\"app.widgets.v2.nvd3-widget\", [\r\n      \"oc.lazyLoad\", \r\n      \"nvd3\",\r\n      \"app.dps\"\r\n  ]);\r\n\r\n\r\n  m.factory(\"Selector\", [\r\n    function(){\r\n      var Selector =  function(serieadapter,data,emitter){\r\n        this.seriesRadioMode = false;\r\n        this.objectsRadioMode = false;\r\n        this.series = serieadapter.getSeriesSelection(angular.copy(data));\r\n        this.objects = serieadapter.getObjectsSelection(angular.copy(data));\r\n\r\n        \r\n\r\n        this.object = (objectKey) => {\r\n          return this.objects.filter((o) => o.key == objectKey)[0];\r\n        }\r\n\r\n\r\n        this.selectSerie = (serieKey) => {\r\n          \r\n          if(angular.isArray(serieKey)){\r\n            var thos = this;\r\n            serieKey.forEach((v,index) =>{\r\n              thos.series[index].disabled = v;\r\n            })\r\n            emitter.emit(\"selectSerie\",this.series);  \r\n            return\r\n          }\r\n\r\n          if(this.seriesRadioMode){\r\n            this.series.forEach((s) =>{\r\n              if(s.key == serieKey){\r\n                s.disabled = false;\r\n              }else{\r\n                s.disabled = true\r\n              }\r\n            })\r\n            emitter.emit(\"selectSerie\",this.series);  \r\n            return\r\n          }\r\n          \r\n          let selectedSerie = this.series.filter((s) => s.key === serieKey)[0];\r\n          selectedSerie.disabled = !selectedSerie.disabled;\r\n          emitter.emit(\"selectSerie\",this.series);  \r\n          \r\n        };\r\n\r\n\r\n        this.selectOneObject= (objectKey) =>{\r\n          this.objects.forEach((o) =>{\r\n              if(o.key == objectKey){\r\n                o.disabled = false;\r\n              }else{\r\n                o.disabled = true\r\n              }\r\n            })\r\n          emitter.emit(\"selectObject\",this.objects);  \r\n        };\r\n\r\n        this.inverseObjectSelection = () => {\r\n          this.objects.forEach((o) => {o.disabled = !!!o.disabled})\r\n        }\r\n\r\n        this.selectObject= (objectKey) => {\r\n          if(this.objectsRadioMode){\r\n            this.objects.forEach((o) =>{\r\n              if(o.key == objectKey){\r\n                o.disabled = false;\r\n              }else{\r\n                o.disabled = true\r\n              }\r\n            })\r\n            emitter.emit(\"selectObject\",this.objects);  \r\n            return\r\n          }\r\n          \r\n          let selectedObject = this.objects.filter((o) => o.key === objectKey)[0];\r\n          selectedObject.disabled = !selectedObject.disabled;\r\n          if(this.objects.filter((o) => !o.disabled).length == 0){\r\n            selectedObject.disabled = !selectedObject.disabled;\r\n            this.inverseObjectSelection();\r\n          } \r\n          emitter.emit(\"selectObject\",this.objects);  \r\n        }\r\n\r\n        // this.selectOneObject(this.objects[0].key)\r\n      \r\n      }\r\n      \r\n\r\n      return Selector;\r\n      \r\n     \r\n  }])\r\n\r\n\r\n  \r\n  m.factory(\"NVD3WidgetV2\", [ \"$http\",\r\n                              \"$dps\",\r\n                              \"$q\", \r\n                              \"$ocLazyLoad\", \r\n                              \"APIProvider\", \r\n                              \"APIUser\",\r\n                              \"i18n\",\r\n                              \"$lookup\",\r\n                              \"parentHolder\",\r\n                              \"dialog\",\r\n                              \"Selector\",\r\n                              \"EventEmitter\",\r\n                              \"pageSubscriptions\",\r\n                              \"$error\",\r\n                              \r\n                               \r\n  function (  $http, \r\n              $dps,\r\n              $q, \r\n              $ocLazyLoad, \r\n              APIProvider, \r\n              APIUser, \r\n              i18n, \r\n              $lookup,\r\n              parentHolder,\r\n              dialog,\r\n              Selector,\r\n              EventEmitter,\r\n              pageSubscriptions,\r\n              $error\r\n           ) {\r\n    \r\n    $ocLazyLoad.load({\r\n      files: [\r\n        \"/components/nvd3/nv.d3.css\", \r\n        \"/widgets/v2.nvd3-widget/nvd3-widget.css\"\r\n      ]\r\n    });\r\n\r\n\r\n    var NVD3WidgetV2 = function ($scope, params) {\r\n      \r\n      // console.log(\"create NVD3WidgetV2\")\r\n      // console.log(\"its scope\", $scope)\r\n      // console.log(\"its params\", params)\r\n\r\n      $scope.APIProvider = new APIProvider($scope);\r\n      $scope.APIUser = new APIUser($scope);\r\n      $scope.decorationAdapter = params.decorationAdapter;\r\n      $scope.settings = {};\r\n      $scope.options;\r\n      $scope.data;\r\n      $scope.params = params;\r\n      $scope.$selection;\r\n      $scope.cashedResp;\r\n      $scope.refreshState = {\r\n          data:true,\r\n          options:true\r\n      };\r\n\r\n      $scope.EventEmitter = new EventEmitter($scope);\r\n\r\n      this.serieRequest = $scope.widget.serieRequest;\r\n      var thos = this;\r\n\r\n      $scope.completed = false;\r\n      $scope.configured = false;\r\n\r\n      $scope.complete = function(){\r\n        $scope.completed = true;\r\n      }\r\n\r\n      $scope.emit = function(eventType,data){\r\n        $scope.EventEmitter.emit(eventType,data)\r\n      }\r\n\r\n      \r\n\r\n      $scope.process = function(){\r\n        $scope.completed = false;\r\n      }\r\n\r\n      $scope.getContainerWidth = function(){\r\n        let n = d3\r\n            .select($scope.container.getElement()[0])\r\n            .select(\"div .widget\");\r\n        let w = n.style(\"width\")\r\n        w = w.split(\"px\")[0];\r\n        let pad = n.style(\"padding\")\r\n        pad = pad.split(\" \").map((item) => {return item.split(\"px\")[0]})\r\n        pad = (pad.length == 0) ? [0,0,0,0]\r\n              : (pad.length == 1) ? [pad[0],pad[0],pad[0],pad[0]]\r\n              : (pad.length == 2) ? [pad[0],pad[1],pad[0],pad[1]]\r\n              : (pad.length == 3) ? [pad[0],pad[1],pad[2],pad[1]]\r\n              : pad;\r\n\r\n        return  w - pad[1] -pad[3];  \r\n      }\r\n\r\n      $scope.$watch(\"$scope.widget.serieDataId\", function(newValue,oldValue){\r\n        $scope.refreshState.data = newValue != oldValue;\r\n      });\r\n\r\n\r\n      $scope.expandOptions = (options) => {\r\n         // console.log(\"Expand Options\")\r\n         if($scope.widget.decoration){\r\n                    $scope.decorationAdapter.applyDecoration(\r\n                        options,\r\n                        $scope.widget.decoration,\r\n                        $scope.selector,\r\n                        $scope.api,\r\n                        $scope\r\n                    )\r\n                  }else{\r\n                    $scope.widget.decoration = $scope.decorationAdapter.getDecoration(options);\r\n                  }\r\n                  \r\n                   for (var i in params.serieAdapter) {\r\n                     options.chart[i] = params.serieAdapter[i];\r\n                   }\r\n\r\n                  options.chart.width = $scope.getContainerWidth();\r\n                    \r\n                  if (options.locale){\r\n                    options.locale = i18n.locale();\r\n                  }\r\n\r\n                  // console.log($scope.widget.emitters)\r\n                  if( $scope.widget.emitters && $scope.widget.emitters.split(\",\").length > 0){\r\n                    if(options.chart.legend)\r\n                      options.chart.legend.slaveChart = true;\r\n                      options.chart.showControls = false;\r\n                  }else{\r\n                    if(options.chart.legend)\r\n                      options.chart.legend.slaveChart = false;\r\n                  }\r\n\r\n                  // options.chart.legend.slaveChart = $scope.widget.emitters.split(\",\").length == 0;\r\n                  \r\n                  if(angular.isDefined(params.serieAdapter)){\r\n                    if (params.serieAdapter.getX) {\r\n                      options.chart.x = params.serieAdapter.getX;\r\n                    }\r\n\r\n                    if (params.serieAdapter.getY) {\r\n                      options.chart.y = params.serieAdapter.getY;\r\n                    }\r\n\r\n                    options.chart.label = params.serieAdapter.getLabel;\r\n                  } \r\n          // console.log(\"options\", options)         \r\n        return options          \r\n      }\r\n\r\n      $scope.loadOptions = function(){\r\n        // console.log(\"LOAD OPTIONS1\",params.optionsURL)\r\n          return $q((resolve, reject) => {\r\n            if( $scope.options ){\r\n              // resolve(angular.copy($scope.expandOptions($scope.options)))\r\n              resolve($scope.options)\r\n              return\r\n            }else{\r\n               $http.get(params.optionsURL)\r\n                .then((resp) => {\r\n                  // resolve(angular.copy($scope.expandOptions(resp.data)))\r\n                  resolve(resp.data)\r\n                  return\r\n                })\r\n            }\r\n          })  \r\n        }\r\n\r\n      $scope.updateChart = function(){\r\n        \r\n        // if(!$scope.widget.serieDataId){\r\n        //   $scope.configured = false;\r\n        //   return;  \r\n        // }\r\n        $scope.configured = true;\r\n        $scope.process();\r\n        \r\n        function loadOptions(){\r\n          // console.log(\"LOAD OPTIONS2\",params.optionsURL)\r\n          return $q((resolve, reject) => {\r\n            if( $scope.options ){\r\n              // resolve(angular.copy($scope.expandOptions($scope.options)))\r\n              resolve($scope.options)\r\n              return\r\n            }else{\r\n               $http.get(params.optionsURL)\r\n                .then((resp) => {\r\n                  // resolve(angular.copy($scope.expandOptions(resp.data)))\r\n                  resolve(resp.data)\r\n                  return\r\n                })\r\n            }\r\n          })  \r\n        }\r\n\r\n        function loadData(){\r\n          // console.log(\"LOAD DATA\",$scope.widget.serieDataId,$scope.widget.script,params.sampleURL)\r\n          if($scope.widget.serieDataId)\r\n            return $dps.get(\"/api/data/process/\"+$scope.widget.serieDataId)\r\n          \r\n          if($scope.widget.script)\r\n            return $dps.post(\"/api/script\",{\r\n                \"script\": $scope.widget.script,\r\n                \"locale\": i18n.locale()\r\n            }).then((resp) => {\r\n              if (resp.data.type == \"error\") {\r\n                                $error(resp.data.data)\r\n                                return\r\n                            };\r\n              return {data:{value:resp.data.data}}\r\n            })\r\n          \r\n          return $http.get(params.sampleURL)\r\n        }\r\n\r\n        $q.all([\r\n            loadOptions().then( (options) =>{\r\n                 // console.log(\"Load options\")\r\n               \r\n                $scope.options = options;\r\n            }),\r\n\r\n            loadData().then( (resp) =>{\r\n                // console.log(\"Load data\")\r\n                $scope.loadedData = resp.data.value;\r\n                if(params.dictionary) {\r\n                  $scope.dictionary =  $lookup.dictionary(params.dictionary(resp.data.value));\r\n                };\r\n\r\n                if(params.translations) {\r\n                  $scope.translations = i18n.translation(params.translations(resp.data.value)); \r\n                }  \r\n                $scope.data = (params.serieAdapter && params.serieAdapter.getSeries) ? \r\n                    params.serieAdapter.getSeries(resp.data.value) : resp.data.value;\r\n                    if($scope.data && $scope.data.forEach){\r\n                      $scope.data.forEach((d, index) => {\r\n                        d.colorIndex = index;\r\n                      })\r\n                    }\r\n                \r\n                \r\n                // $scope.selector = new Selector(params.serieAdapter,$scope.data,$scope.EventEmitter)    \r\n                \r\n            })\r\n        ]).then( () =>{\r\n            if($scope.data){\r\n              $scope.selector = new Selector(params.serieAdapter,$scope.data,$scope.EventEmitter);\r\n              if( $scope.widget.emitters && $scope.widget.emitters.split(\",\").length > 0){\r\n                  $scope.data.forEach((item,index) =>{\r\n                    item.disabled = index != 0\r\n                  })    \r\n              }\r\n            // console.log(\"q.all()\")\r\n              $scope.settings = {\r\n                  options : angular.copy($scope.expandOptions($scope.options)), \r\n                  data : angular.copy($scope.data)\r\n              }\r\n              $scope.complete();\r\n            }  \r\n        });\r\n      };\r\n\r\n      $scope.exportImage = function(){\r\n        dialog({\r\n        title:\"Export Widget View as png\",\r\n        fields:{\r\n          fileName:{\r\n            title:\"File Name:\", \r\n            type:'text', \r\n            value:$scope.widget.instanceName+\".png\", \r\n            editable:true, \r\n            required:true\r\n          }\r\n        }\r\n        }).then((form) => {\r\n          let filename = form.fields.fileName.value;\r\n          filename = filename.split(\".\");\r\n          filename = (filename.length == 1) \r\n                     ? (filename[0] == \"\") ? $scope.widget.instanceName+\".png\" : filename[0]+\".png\"\r\n                     : (filename[filename.length-1] == \"png\") ? filename.join(\".\") : filename.join(\".\")+\".png\";\r\n\r\n           var svg = $scope.api.getSVG();\r\n           document.createElement('canvas')\r\n           var c = document.createElement('canvas');   \r\n           c.height = svg.height.baseVal.value;\r\n           c.width = svg.width.baseVal.value;\r\n           svg.parentNode.appendChild(c);\r\n           d3.select(c).style(\"display\", \"none\")\r\n           canvg(c,(new XMLSerializer()).serializeToString(svg))\r\n           c.toBlob(function(blob) {\r\n                saveAs(blob, filename);\r\n           });\r\n           svg.parentNode.removeChild(c);\r\n\r\n        });\r\n      } \r\n\r\n      $scope.translate = function(){\r\n        // console.log(\"TRANSLATE HANDLER\", i18n.locale(), $scope.options)\r\n        if($scope.options.chart.locale){\r\n          $scope.options.chart.locale = i18n.locale();\r\n        }\r\n        if($scope.options.chart.localeDef){\r\n          $scope.options.chart.localeDef = i18n.localeDef();\r\n        }\r\n          \r\n          $scope.settings = {\r\n                  options : angular.copy($scope.expandOptions($scope.options)),//angular.copy($scope.options), \r\n                  data : angular.copy($scope.data)\r\n          }\r\n      };\r\n\r\n\r\n\r\n      $scope.setData = function(value){\r\n        $scope.loadedData = value;\r\n                if(params.dictionary) {\r\n                  $scope.dictionary =  $lookup.dictionary(params.dictionary(value));\r\n                };\r\n\r\n                if(params.translations) {\r\n                  $scope.translations = i18n.translation(params.translations(value)); \r\n                }  \r\n                \r\n                $scope.data = (params.serieAdapter && params.serieAdapter.getSeries) ? \r\n                    params.serieAdapter.getSeries(value) : value;\r\n                \r\n                if($scope.data.forEach){\r\n                  $scope.data.forEach((d, index) => {\r\n                    d.colorIndex = index;\r\n                  })\r\n                }\r\n\r\n                $scope.loadOptions()\r\n                  .then((options)=>{\r\n                    $scope.options = options;\r\n                    $scope.settings = {\r\n                      options : angular.copy($scope.expandOptions($scope.options)), \r\n                      data : angular.copy($scope.data)\r\n                    }\r\n                \r\n                    $scope.complete();    \r\n                  })\r\n                \r\n      }\r\n\r\n      $scope.APIProvider\r\n        \r\n        .config(function () {\r\n          if($scope.widget.emitters && $scope.widget.emitters.length &&\r\n             $scope.widget.emitters.trim().length > 0)\r\n          {\r\n            pageSubscriptions().removeListeners({\r\n              receiver: $scope.widget.instanceName,\r\n              signal: \"selectSerie\"\r\n            });\r\n            pageSubscriptions().removeListeners({\r\n              receiver: $scope.widget.instanceName,\r\n              signal: \"selectObject\"\r\n            });\r\n\r\n            $scope.emitters = ($scope.widget.emitters) ? $scope.widget.emitters.split(\",\") : [];\r\n            \r\n            \r\n            $scope.emitters = $scope.emitters.map((item) => {\r\n                let l = item.trim().split(\".\")\r\n                return {emitter:l[0], signal: l[1] ,slot: l[2], receiver:$scope.widget.instanceName}\r\n            }) \r\n              \r\n            pageSubscriptions().addListeners($scope.emitters)\r\n            \r\n\r\n          }else{\r\n            pageSubscriptions().removeListeners({\r\n              receiver: $scope.widget.instanceName,\r\n              signal: \"selectSerie\"\r\n            });\r\n            pageSubscriptions().removeListeners({\r\n              receiver: $scope.widget.instanceName,\r\n              signal: \"selectObject\"\r\n            });\r\n          }\r\n\r\n          $scope.updateChart();  \r\n        }, true)\r\n\r\n        .removal(() => {\r\n\r\n          if(params.onRemove) params.onRemove();\r\n          \r\n          pageSubscriptions().removeListeners({\r\n              receiver: $scope.widget.instanceName,\r\n              signal: \"selectSerie\"\r\n            });\r\n            pageSubscriptions().removeListeners({\r\n              receiver: $scope.widget.instanceName,\r\n              signal: \"selectObject\"\r\n            });\r\n        })\r\n\r\n        .openCustomSettings(function () {\r\n          if(params.onBeforeConfig) params.onBeforeConfig(); \r\n          $scope.wizard = params.wizard;\r\n          return $scope.wizard.start($scope)\r\n        })\r\n\r\n        .translate(function(){\r\n          if(params.translate){\r\n            params.translate();\r\n          }\r\n          $scope.translate();\r\n        })\r\n\r\n        .beforeDesignMode(function(){\r\n          // console.log(\"beforeDesignMode\")\r\n          if(params.onBeforeDesignMode) params.onBeforeDesignMode();\r\n        })\r\n\r\n        .beforePresentationMode(function(){\r\n          // console.log(\"beforePresentationMode\")\r\n          if(params.onBeforePresentationMode) params.onBeforePresentationMode();\r\n        })\r\n\r\n        .beforeChangePage(function(){\r\n          if(params.onBeforeChangePage) params.onBeforeChangePage();\r\n        })\r\n\r\n\r\n        .provide(\"selectSerie\", (e,selection) =>{\r\n          if($scope.decorationAdapter.onSelectSerie){\r\n              let s = $scope.decorationAdapter.onSelectSerie(\r\n                selection,\r\n                {\r\n                  options : angular.copy($scope.expandOptions($scope.options)), \r\n                  data : angular.copy($scope.settings.data)\r\n                },  \r\n                $scope.api\r\n              );\r\n\r\n              $scope.settings = angular.copy(s)\r\n           }\r\n        })\r\n        \r\n        .provide(\"selectObject\", (e,selection) =>{\r\n          if($scope.decorationAdapter.onSelectObject){\r\n            let s = $scope.decorationAdapter.onSelectObject(\r\n                selection,\r\n                {\r\n                  options : angular.copy($scope.expandOptions($scope.options)), \r\n                  data : angular.copy($scope.settings.data)\r\n                },  \r\n                $scope.api\r\n              );\r\n\r\n              $scope.settings = angular.copy(s)\r\n           }\r\n        })\r\n\r\n        .provide('setData', (e, context) => {\r\n          if(!params.acceptData) return \r\n          if(!context){\r\n            $scope.hidden = true;\r\n            return\r\n          }\r\n          if(params.acceptData(context)){\r\n            $scope.dataset = context.dataset;\r\n            $scope.hidden = false;\r\n            $scope.configured = true;\r\n            $scope.setData(context.data)\r\n          }else{\r\n            if($scope.dataset!=context.dataset){\r\n              $scope.hidden = true;\r\n            }\r\n          }\r\n\r\n        })\r\n\r\n         .provide('updateWithData', (e, context) => {\r\n          // console.log($scope.widget.instanceName,'updateWithData', context)\r\n          if(!params.acceptData || !context) return \r\n\r\n          if(context.widget){\r\n            context.widget = (context.widget.forEach) ? context.widget : [context.widget]\r\n          }\r\n\r\n          if(\r\n              params.acceptData(context) \r\n              && (!context.widget || (context.widget.indexOf($scope.widget.instanceName) >=0 ))\r\n            ){\r\n            // console.log(\"ACCEPT\")\r\n            $scope.dataset = context.dataset;\r\n            $scope.configured = true;\r\n            $scope.setData(context.data)\r\n            if (context.options){\r\n                $scope.hidden = context.options.hidden;\r\n            }\r\n          }\r\n\r\n          \r\n\r\n        })\r\n        \r\n        .provide('updateWithOptions', (e, context) => {\r\n          // console.log($scope.widget.instanceName,'updateWithOptions', context)\r\n          if(!context) return \r\n          \r\n          if(context.widget){\r\n            context.widget = (context.widget.forEach) ? context.widget : [context.widget]\r\n          }\r\n          \r\n          if  (!context.widget || (context.widget.indexOf($scope.widget.instanceName) >=0 )){  \r\n            // console.log(\"ACCEPT\")\r\n            $scope.hidden = context.options.hidden;\r\n          }\r\n        \r\n        })\r\n\r\n    };\r\n\r\n\r\n    return NVD3WidgetV2;\r\n  }]);\r\n});\r\n"],"sourceRoot":"/source/"}