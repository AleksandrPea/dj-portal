{"version":3,"sources":["v2.script-help/widget.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,kBAAkB,UAAU,KAAK,EAAE,OAAO,OAAO,IAAI,aAAa,IAAI,aAAa;;AAEvF,IAJO,UAAO,gBAAA,QAAM;;AAMpB,QALO;;AAOP,QANO;;AAQP,QAPO;;AASP,QARO;;AAUP,QATO;;;AAGP,IAAI,IAAI,QAAQ,OAAO,8BAA8B,CACjD,WACA;;AAIJ,EAAE,WAAW,uMAAwB,UAAS,QAAQ,OAAO,MAAM,cAC/D,aAAa,mBAAmB,SAAS,YAAY,QACrD,MAAM,MAAM,SAAS,WAAW,QAAQ,QAAQ;;IAEhD,OAAO,WAAW;QACd,SAAQ;YACJ,MAAM;YACN,OAAO;;QAEX,MAAM;QACN,MAAM;;;IAGV,OAAO,iBAAiB,UAAS,SAAS;;QAEtC,KAAK,KAAK,eAAe;YACjB,QAAU,WAAW,UAAU;YAC/B,QAAU,KAAK;WAElB,KAAK,UAAS,UAAU;YACrB,SAAS,KAAK,MAAM,SAAS,KAAK;YAClC,IAAI,SAAS,KAAK,OAAO,SAAS;gBAC9B,OAAO,SAAS,KAAK;mBAClB;gBACH,OAAO,OAAO,SAAS,KAAK;gBAC5B,IAAG,CAAC,OAAO,KAAK,SAAQ;oBACpB,OAAO,SAAS,OAAO,KAAK,QAAQ,KAC/B,QAAQ,QAAQ,MAChB,QAAQ,QAAQ;oBACrB,OAAO,SAAS,OAAO,OAAO;;;;;;IAMlD,IAAI,YAAY,QACX,OAAO,YAAM;QACV,QAAQ,IAAG,YAAW,OAAO,OAAO,eAAY;QAChD,OAAO,eAAe;OAEzB,QAAQ,WAAW,UAAC,GAAG,SAAY;QAChC,IAAI,CAAC,SAAS;YACV,OAAO,SAAS;YAChB;;QAEJ,IAAI,QAAQ,OAAO,QAAQ;YACvB,OAAO,OAAO,QAAQ;YACtB,IAAG,CAAC,OAAO,KAAK,SAAQ;gBACpB,OAAO,SAAS,OAAO,KAAK,QAAQ,KAC/B,QAAQ,QAAQ,MAChB,QAAQ,QAAQ;gBACrB,OAAO,SAAS,OAAO,OAAO;;YAElC,OAAO,SAAS;eACb;YACH,OAAO,SAAS;;OAGvB,QAAQ,YAAM;QACX,QAAQ,IAAI;;IAEtB","file":"v2.script-help/widget.js","sourcesContent":["import angular from 'angular';\r\nimport 'dictionary';\r\nimport 'ngReact';\r\nimport 'custom-react-directives';\r\nimport 'ng-prettyjson';\r\nimport 'ng-ace';\r\n\r\n// console.log(\"REACT\",React);\r\nlet m = angular.module('app.widgets.v2.script-help', [\r\n    'app.dps',\r\n    'ng.ace'\r\n])\r\n\r\n\r\nm.controller('ScriptHelpController', function($scope, $http, $dps, EventEmitter,\r\n    APIProvider, pageSubscriptions, $lookup, $translate, $modal,\r\n    user, i18n, $scroll, clipboard, dialog, $error) {\r\n\r\n    $scope.settings = {\r\n        options:{\r\n            mode: 'dps',\r\n            theme: 'tomorrow'\r\n        },\r\n        type: 'dps',\r\n        data: ''\r\n    }\r\n\r\n    $scope.getCommandHelp = function(command) {\r\n\r\n        $dps.post(\"/api/script\", {\r\n                \"script\": \"help('\" + command + \"')\",\r\n                \"locale\": i18n.locale()\r\n            })\r\n            .then(function(response) {\r\n                response.data.key = response.data.type;\r\n                if (response.data.key == 'error') {\r\n                    $error(response.data.data)\r\n                } else {\r\n                    $scope.help = response.data.data;\r\n                    if(!$scope.help.warning){\r\n                        $scope.script = $scope.help.example.code\r\n                            .replace(/\\\\n/g, \"\\n\")\r\n                            .replace(/\\\\t/g, \"\\t\");\r\n                        $scope.settings.data = $scope.script;    \r\n                    }        \r\n                }\r\n            })\r\n    }\r\n\r\n    new APIProvider($scope)\r\n        .config(() => {\r\n            console.log(`widget ${$scope.widget.instanceName} is (re)configuring...`);\r\n            $scope.getCommandHelp(\"\")\r\n        })\r\n        .provide('setData', (e, context) => {\r\n            if (!context) {\r\n                $scope.hidden = true;\r\n                return\r\n            }\r\n            if (context.key == \"help\") {\r\n                $scope.help = context.data;\r\n                if(!$scope.help.warning){\r\n                    $scope.script = $scope.help.example.code\r\n                        .replace(/\\\\n/g, \"\\n\")\r\n                        .replace(/\\\\t/g, \"\\t\");\r\n                    $scope.settings.data = $scope.script;    \r\n                }\r\n                $scope.hidden = false;\r\n            } else {\r\n                $scope.hidden = true;\r\n            }\r\n        })\r\n        .removal(() => {\r\n            console.log('Script widget is destroyed');\r\n        });\r\n})\r\n"],"sourceRoot":"/source/"}