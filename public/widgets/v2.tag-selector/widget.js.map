{"version":3,"sources":["v2.tag-selector/widget.js"],"names":[],"mappings":"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","file":"v2.tag-selector/widget.js","sourcesContent":["import angular from 'angular';\r\nimport 'widgets/v2.data-selector/wizard';\r\n\r\n\r\nconst m = angular.module('app.widgets.v2.tag-selector', [\"app.dps\",\r\n    'app.widgets.v2.data-selector-wizard'\r\n]);\r\n\r\n\r\nm.controller('TagSelectorCtrlV2', function(\r\n    $scope,\r\n    $http,\r\n    $dps,\r\n    APIProvider,\r\n    EventEmitter,\r\n    dialog) {\r\n\r\n    $scope.emitter = new EventEmitter($scope);\r\n\r\n    var Selector = function() {\r\n        this.objects = $scope.selectorData;\r\n\r\n        this.add = (key) => {\r\n            let ff = this.objects.filter(item => item.key === key)\r\n            if (ff.length == 0) {\r\n                let res = {\r\n                    key: key,\r\n                    disabled: true\r\n                }\r\n                this.objects.push(res)\r\n                return res\r\n            }\r\n            return ff[0]\r\n        }\r\n\r\n        this.selected = () => {\r\n            return this.objects.filter(item => !item.disabled)\r\n        }\r\n\r\n        this.unselected = () => {\r\n            return this.objects.filter(item => item.disabled)\r\n        }\r\n\r\n        this.selectOneObject = (objectKey) => {\r\n            objectKey = objectKey.trim();\r\n            this.objects.forEach((o) => {\r\n                    if (o.key == objectKey) {\r\n                        o.disabled = false;\r\n                    } else {\r\n                        o.disabled = true\r\n                    }\r\n                })\r\n                // console.log(\"Emit selectObject1\")\r\n                // $scope.emitter.emit(\"selectObject\",this.objects);  \r\n        };\r\n\r\n        this.inverseObjectSelection = () => {\r\n            this.objects.forEach((o) => { o.disabled = !!!o.disabled })\r\n        }\r\n\r\n        this.clear = () => {\r\n            this.objects.forEach((item) => { item.disabled = true; })\r\n        }\r\n\r\n        this.selectObject = (objectKey) => {\r\n\r\n            let selectedObject = this.objects.filter((o) => o.key === objectKey)[0];\r\n            selectedObject.disabled = !selectedObject.disabled;\r\n            if (this.objects.filter((o) => !o.disabled).length == 0) {\r\n                selectedObject.disabled = !selectedObject.disabled;\r\n                this.inverseObjectSelection();\r\n            }\r\n            // console.log(\"Emit selectObject2\")\r\n            // $scope.emitter.emit(\"selectObject\",this.objects);  \r\n        }\r\n\r\n        this.emit = function() {\r\n            $scope.emitter.emit(\"selectObject\", this.objects);\r\n        }\r\n\r\n    }\r\n\r\n    $scope.$parent.getSelectorData = (list) => {\r\n\r\n\r\n        $scope.selectorData = list;\r\n\r\n        $scope.selector = new Selector();\r\n        $scope.selected = [];\r\n        $scope.unselected = $scope.selectorData.map(item => item);\r\n    }\r\n\r\n    $scope.$watch('selectorData', function(newList, oldList) {\r\n        // console.log(\"selectorData changed\")\r\n        // if(newList == oldList) return;\r\n        if (newList && newList.forEach) {\r\n            $scope.selector = new Selector();\r\n            $scope.selected = [];\r\n            $scope.unselected = newList.map(item => item);\r\n        }\r\n    })\r\n\r\n    $scope.select = (key) => {\r\n\r\n        let item = $scope.selector.add(key);\r\n        $scope.selector.selectObject(key)\r\n        $scope.selected = $scope.selector.selected()\r\n        $scope.unselected = $scope.selector.unselected()\r\n\r\n\r\n        // let index = -1;\r\n\r\n        // for (let i in $scope.unselected){\r\n        //   if($scope.unselected[i].key == item.key){\r\n        //     index = i;\r\n        //     break;\r\n        //   }\r\n        // }\r\n\r\n        // if(index == -1){\r\n        //   $scope.unselected.push(item)\r\n        //   index = $scope.unselected.length-1;  \r\n        // } \r\n\r\n        // $scope.selected.push($scope.unselected[index])\r\n        // $scope.unselected.splice(index,1);\r\n        // $scope.selector.selectObject(key)\r\n        // $scope.selectedObject = undefined;\r\n    }\r\n\r\n    $scope.unselect = (key) => {\r\n        if ($scope.selected.length < 2) return;\r\n        let index = -1;\r\n        for (let i in $scope.selected) {\r\n            if ($scope.selected[i].key == key) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        $scope.unselected.push($scope.selected[index])\r\n        $scope.selected.splice(index, 1)\r\n        $scope.selector.selectObject(key)\r\n            // $scope.lock = false;\r\n    }\r\n\r\n    $scope.keyFounded = (key) => {\r\n        if (!key) return false;\r\n        if (!$scope.unselected) return false;\r\n        return $scope.unselected.filter(o => o.key == key)[0]\r\n    }\r\n\r\n    $scope.keydown = function(event) {\r\n        // console.log(event.key)\r\n        if (event.key == \"Enter\") {\r\n            // console.log(\"add user tag \", $scope.inputKey)\r\n\r\n            $scope.select($scope.inputKey)\r\n                // $scope.lock = true;\r\n        }\r\n    }\r\n\r\n    $scope.change = function(value) {\r\n        $scope.inputKey = value;\r\n        // console.log($scope.inputKey)\r\n    }\r\n\r\n\r\n\r\n    new APIProvider($scope)\r\n\r\n    .config(() => {})\r\n\r\n    .openCustomSettings(function() {\r\n        dialog({\r\n            title: \"Tag selector settings\",\r\n            fields: {\r\n                title: {\r\n                    title: \"Widget title\",\r\n                    type: \"text\",\r\n                    value: $scope.widget.title,\r\n                    required: false\r\n                },\r\n                view: {\r\n                    title: \"Widget view\",\r\n                    type: \"select\",\r\n                    value: $scope.widget.view || 'Grid',\r\n                    options: ['Select', \"List\", \"Grid\", \"Typeahead\"],\r\n                    required: false\r\n                },\r\n\r\n                button: {\r\n                    title: \"Button label\",\r\n                    type: \"text\",\r\n                    value: $scope.widget.button || \"Go...\",\r\n                    required: false\r\n                }\r\n            }\r\n        }).then(function(form) {\r\n            $scope.widget.title = form.fields.title.value;\r\n            $scope.widget.view = form.fields.view.value;\r\n            $scope.widget.button = form.fields.button.value;\r\n        })\r\n    })\r\n\r\n    .translate(() => {})\r\n\r\n    .provide('updateWithData', (e, context) => {\r\n        if (!context) return\r\n\r\n        if (context.widget) {\r\n            context.widget = (context.widget.forEach) ? context.widget : [context.widget]\r\n        }\r\n\r\n        if (!context.widget || (context.widget.indexOf($scope.widget.instanceName) >= 0)) {\r\n\r\n            $scope.selectorData = context.data\r\n        }\r\n\r\n        if (context.options) {\r\n            $scope.hidden = context.options.hidden;\r\n            $scope.widget.decoration.title = (context.options.title) ? context.options.title : $scope.widget.decoration.title;\r\n            $scope.widget.decoration.view = (context.options.view) ? context.options.view : $scope.widget.decoration.view; \r\n            $scope.widget.decoration.runnable = (context.options.view) ? context.options.runnable : $scope.widget.decoration.runnable; \r\n            $scope.widget.button = (context.options.button) ? context.options.button : $scope.widget.button; \r\n               \r\n        }\r\n    })\r\n\r\n    .provide('updateWithOptions', (e, context) => {\r\n        if (!context) return\r\n\r\n        if (context.widget) {\r\n            context.widget = (context.widget.forEach) ? context.widget : [context.widget]\r\n        }\r\n\r\n        if (!context.widget || (context.widget.indexOf($scope.widget.instanceName) >= 0)) {\r\n\r\n            $scope.hidden = context.options.hidden;\r\n            $scope.widget.decoration.title = (context.options.title) ? context.options.title : $scope.widget.decoration.title;\r\n            $scope.widget.decoration.view = (context.options.view) ? context.options.view : $scope.widget.decoration.view; \r\n            $scope.widget.decoration.runnable = (context.options.view) ? context.options.runnable : $scope.widget.decoration.runnable; \r\n            $scope.widget.button = (context.options.button) ? context.options.button : $scope.widget.button; \r\n        }\r\n    })\r\n});\r\n"],"sourceRoot":"/source/"}